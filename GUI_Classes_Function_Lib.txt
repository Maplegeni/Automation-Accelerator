'Classes
'**************
'************ Purpose : This Testcase is to validate the field level Validation for the complex order
'************   Date  : Jan 29, 2016
Class preparePage    
    Private pageName,iPage,pDescobject
    Public Function initPage(byVal bname,byVal pName)
        pageName = pName
        set iPage=Browser(bname).Page(pName)        
    End Function
    Public Function clickWebElement(byVal eName)
        If valEleExist("Element",eName) Then
            iPage.webElement(eName).Click
        End If
        
    End Function
    Public Function ClickImage(byVal eName)
        If valEleExist("Image",eName) Then
            iPage.Image(eName).Click
        End If
        
    End Function
    
    Public Function clickWebButton(byVal bName)
        
        If valEleExist("Button",bName) Then
            If (getEProperty("Button",bName,"disabled") = 0) Then
                iPage.WebButton(bName).Click                
            Else
                ReportStatus "Fail", pageName, bName & " - WebButton not Enabled on Page - " & pageName
            End If            
        End If
    End Function
    
    Public Function setWebEdit(byVal eName,byVal eValue)
        If valEleExist("Edit",eName) Then
            iPage.WebEdit(eName).Set eValue        
        End If        
    End Function
    
    Public Function wait4Element(ByVal eType,byVal eName,byVal wValue)
    Select Case eType
    	Case "Element"
                iPage.Webelement(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist("Element",eName)
            Case "List"
                iPage.WebList(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist("List",eName)
            Case "Table"
                iPage.WebTable(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist("Table",eName)
            Case "Edit"
                iPage.WebEdit(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist("Edit",eName)
            Case "Button"
                iPage.WebButton(eName).WaitProperty "disabled",0
                tmp = valEleExist("Button",eName)
            Case "Link"
                iPage.Link(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist("Link",eName)
            Case "Number"
                iPage.WebNumber(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist("Number",eName)           
    End Select   
        	wait4Element = tmp
   End Function
    
    Public Function wait4Element_NoReport(ByVal eType,byVal eName,byVal wValue)
    Select Case eType
    	Case "Element"
                iPage.Webelement(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist_NoReport("Element",eName)
            Case "List"
                iPage.WebList(eName).WaitProperty "visible" ,"True",wValue
                tmp = valEleExist_NoReport("List",eName)
            Case "Table"
                iPage.WebTable(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist_NoReport("Table",eName)
            Case "Edit"
                iPage.WebEdit(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist_NoReport("Edit",eName)
            Case "Button"
                iPage.WebButton(eName).WaitProperty "disabled",0
                tmp = valEleExist_NoReport("Button",eName)
            Case "Link"
                iPage.Link(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist_NoReport("Link",eName)
            Case "Number"
                iPage.WebNumber(eName).WaitProperty "height" ,micGreaterThan(15),wValue
                tmp = valEleExist_NoReport("Number",eName)           
    End Select   
        	wait4Element_NoReport = tmp
   End Function
   
    Public Function selWebListItemBySeq(byVal lName,byVal iNum)
        If valEleExist("List",lName) Then
            iNVal="#"&iNum
            iPage.WebList(lName).Select iNVal        
        End If    
    End Function
    
    Public Function selWebListItemByVal(byVal lName,byVal iVal)
        If valEleExist("List",lName) Then
            iPage.WebList(lName).Select iVal        
        End If    
    End Function
    
    Public Function getWebListItems(byVal lName)
        If ivalEleExist("List",lName) Then    
            tmpStr=iPage.WebList(lName).GetROProperty("all items")
            getWebListItems=Split(tmpStr,";")        
        End If        
    End Function
    
    Public Function getWTablecell(byVal tName,byVal rNum,byVal cNum)
        If valEleExist("Table",tName) Then
        	wait 4
            getWTablecell=iPage.WebTable(tName).GetCellData(rNum,cNum)        
        End If
    End Function
    Public Function setWNumber(byVal nName,byVal nValue)    
        If valEleExist("Number",nName)  Then
            iPage.webnumber(nName).Set(nValue)    
        End If                
    End Function
    
    Public Function clickLink(byVal lName)
    	If valEleExist("Link",lName) Then
            iPage.Link(lName).click        
        End If 
    End Function
    
    Public Function pSync
        iPage.Sync
    End Function
    Public Function getEProperty(byVal eType,byVal eName,byVal pType)
    
    If valEleExist(eType,eName) Then    	
    
        Select Case eType        	
        	Case "Element"        		
                getEProperty=iPage.WebElement(eName).GetROProperty(pType)
            Case "List"
                getEProperty=iPage.WebList(eName).GetROProperty(pType)
            Case "Table"
                getEProperty=iPage.WebTable(eName).GetROProperty(pType)
            Case "Edit"
                getEProperty=iPage.WebEdit(eName).GetROProperty(pType)
            Case "Button"
                getEProperty=iPage.WebButton(eName).GetROProperty(pType)
            Case "Link"
                getEProperty=iPage.Link(eName).GetROProperty(pType)
            Case "Number"
                getEProperty=iPage.WebNumber(eName).GetROProperty(pType)
            Case "Page"
                getEProperty=iPage.WebList(eName).GetROProperty(pType)
            Case "Window"
				getEProperty=iPage.Window(eName).GetROProperty(pType)            
        End Select
        
    Else
		ReportStatus "Fail", "ElementNotFound", "Element - " & eName & "Not Found on the Page"
		Exit Function
    End If 
    
    End Function
    
    
    Public Function getElementProperty(byVal eType,byVal eName,byVal pType)
    
        Select Case eType        	
        	Case "Element"        		
                getElementProperty = iPage.WebElement(eName).GetROProperty(pType)
            Case "List"
                getElementProperty = iPage.WebList(eName).GetROProperty(pType)
            Case "Table"
                getElementProperty = iPage.WebTable(eName).GetROProperty(pType)
            Case "Edit"
                getElementProperty = iPage.WebEdit(eName).GetROProperty(pType)
            Case "Button"
                getElementProperty = iPage.WebButton(eName).GetROProperty(pType)
            Case "Link"
                getElementProperty = iPage.Link(eName).GetROProperty(pType)
            Case "Number"
                getElementProperty = iPage.WebNumber(eName).GetROProperty(pType)
            Case "Page"
                getElementProperty = iPage.WebList(eName).GetROProperty(pType)
            Case "Window"
				getEProperty=iPage.Window(eName).GetROProperty(pType)       
        End Select
        
    End Function
    
    
    Public Function valEleExist(byVal eType,byVal eName)
      
        Select Case eType        
            Case "Element"
                If iPage.WebElement(eName).Exist(2) Then
                    valEleExist = True
                Else
                    ReportStatus "Fail", pageName, eName & " - WebElement not found on Page - " & pageName    
                    valEleExist = False
                End If
	       Case "Image"         
				If iPage.Image(eName).Exist(2) Then
                    valEleExist = True
                Else
                    ReportStatus "Fail", pageName, eName & " - Image not found on Page - " & pageName    
                    valEleExist = False
                End If                  
            Case "List"
                If iPage.WebList(eName).Exist(2) Then
                    valEleExist = True
                Else
                    ReportStatus "Fail", pageName, eName & " - WebList not found on Page - " & pageName    
                    valEleExist = False
                End If                
            Case "Table"
                If iPage.WebTable(eName).Exist(2) Then
                    valEleExist = True
                Else
                    ReportStatus "Fail", pageName, eName & " - WebTable not found on Page - " & pageName    
                    valEleExist = False
                End If                
            Case "Edit"
                If iPage.WebEdit(eName).Exist(2) Then
                    valEleExist = True
                Else
                    ReportStatus "Fail", pageName, eName & " - Webedit not found on Page - " & pageName    
                    valEleExist = False
                End If                
            Case "Button"
                If iPage.WebButton(eName).Exist(2) Then
                    valEleExist = True
                Else
                    ReportStatus "Fail", pageName, eName & " - Webbutton not found on Page - " & pageName
                    valEleExist = False                    
                End If                
            Case "Link"
                If iPage.Link(eName).Exist(2) Then
                    valEleExist = True
                Else
                    ReportStatus "Fail", pageName, eName & " - Link not found on Page - " & pageName       
                    valEleExist = False
                End If                
            Case "Number"
                If iPage.WebNumber(eName).Exist(2) Then
                    valEleExist = True
                Else
                    ReportStatus "Fail", pageName, eName & " - WebNumber not found on Page - " & pageName    
                    valEleExist = False
                End If                
        End Select
    End Function
    
    Public Function valEleExist_NoReport(byVal eType,byVal eName)
      
        Select Case eType        
            Case "Element"
                If iPage.WebElement(eName).Exist(2) Then
                    valEleExist_NoReport = True
                Else
                    valEleExist_NoReport = False
                End If        
            Case "List"
                If iPage.WebList(eName).Exist(2) Then
                    valEleExist_NoReport = True
                Else                    
                    valEleExist_NoReport = False
                End If                
            Case "Table"
                If iPage.WebTable(eName).Exist(2) Then
                    valEleExist_NoReport = True
                Else                    
                    valEleExist_NoReport = False
                End If                
            Case "Edit"
                If iPage.WebEdit(eName).Exist(2) Then
                    valEleExist_NoReport = True
                Else                    
                    valEleExist_NoReport = False
                End If                
            Case "Button"
                If iPage.WebButton(eName).Exist(2) Then
                    valEleExist_NoReport = True
                Else                    
                    valEleExist_NoReport = False                    
                End If                
            Case "Link"
                If iPage.Link(eName).Exist(2) Then
                    valEleExist_NoReport = True
                Else                    
                    valEleExist_NoReport = False
                End If                
            Case "Number"
                If iPage.WebNumber(eName).Exist(2) Then
                    valEleExist_NoReport = True
                Else                    
                    valEleExist_NoReport = False
                End If                
        End Select
    End Function
    
    Public Function initDescObject()
    	Set pDescobject = Description.Create
    End Function
    
    Public Function setDescObject(ByVal descName,ByVal descValue)
    	pDescobject(descName).Value = descValue    	
    End Function
    
    Public Function getDescriptiveItem(ByVal itemName)
    	Set ipageChildObj = ipage.ChildObjects(pDescobject)   
		If isnumeric(itemName) Then
			getDescItem = ipageChildObj(itemName)
		ElseIf strcomp(itemName,"Count",1) = 0 Then
			getDescItem = ipageChildObj.count
		End If    	
    End Function
End Class


Class ValidateStructure ' This class Helps to set Value to the element available in each page.
	Public elementName, elementType, elementProperty, expectedValue,RowNum,ColumnNum,TableName,valScenario
	Public Sub setValidateAttrtibs(ByVal element_Name,ByVal element_Type,ByVal element_Property, ByVal expected_Value)
		elementName = element_Name
		elementType = element_Type
		elementProperty = element_Property
		expectedValue = expected_Value
		print "Element Added - " &element_Name
	End Sub
	
	Public Sub setAttrtibs4Validation(ByVal element_Name,ByVal element_Type,ByVal element_Property, ByVal expected_Value, ByVal scenario)
		elementName = element_Name
		elementType = element_Type
		elementProperty = element_Property
		expectedValue = expected_Value
		valScenario = scenario
		print "Element Added - " &element_Name & " for the Scenario "& scenario
	End Sub
	
	Public Sub setValidateTable(ByVal Table_Name,ByVal element_Type,Byval Table_Row,ByVal Table_Col, ByVal expected_Value)
		TableName = Table_Name
		elementType = element_Type
		RowNum = Table_Row
		ColumnNum = Table_Col
		expectedValue = expected_Value
	End Sub
	
End Class


'## May 27, 2016 - Added addField4Validation function which has the readable messages which helps in html report summary.
' This class helps to Validate the fields available in the Page dynamically
Class ValidatePage 
	Private oValidateStructArr(), oPage, elePropertyValue, cellData,ValidateName,m_fieldLevelValidation,i 'oPageStructArr - dynamic array
	Public nOfPageFields
	Public Sub initValidatePage(ByVal browserName,ByVal pageName, ByVal ValPageName) 'ValPageName - It is used for Report customization. ValName cane be specific to page. Eg., StrategyOCOPageValidation
		Set oPage=New preparePage
		oPage.initPage browserName,pageName
		ValidateName = ValPageName
	End Sub
	
	Public Sub addValidateField(ByVal elementName,ByVal elementType,ByVal elementProperty, ByVal expectedValue)
		m_fieldLevelValidation = False
		If IsEmpty(nOfPageFields) Then
			nOfPageFields=0
		Else
			nOfPageFields = nOfPageFields + 1
		End if
		ReDim Preserve oValidateStructArr(nOfPageFields)
		Set oValidateStructArr(nOfPageFields) = New ValidateStructure			
		oValidateStructArr(nOfPageFields).setValidateAttrtibs elementName, elementType, elementProperty, expectedValue
	End Sub	
	
	Public Sub addField4Validation(ByVal elementName,ByVal elementType,ByVal elementProperty, ByVal expectedValue, ByVal Scenario)
	
		m_fieldLevelValidation = True
		If IsEmpty(nOfPageFields) Then
			nOfPageFields=0
		Else
			nOfPageFields = nOfPageFields + 1
		End if
		ReDim Preserve oValidateStructArr(nOfPageFields)
		Set oValidateStructArr(nOfPageFields) = New ValidateStructure			
		oValidateStructArr(nOfPageFields).setAttrtibs4Validation elementName, elementType, elementProperty, expectedValue, Scenario
	End Sub	
	
	
	Public Function ValidatePageFields()
		For i = 0 To nOfPageFields			
			elePropertyValue = oPage.getElementProperty(oValidateStructArr(i).elementType, oValidateStructArr(i).elementName, oValidateStructArr(i).elementProperty)			
			print "Actual Value Captured for the element  - " &oValidateStructArr(i).elementName
			ValidatePageFields = True
			'On Error Resume Next
			If StrComp(oValidateStructArr(i).elementProperty, "all items",1) = 0 Then
				If CompareValueArr(elePropertyValue, oValidateStructArr(i).expectedValue,oValidateStructArr(i).elementName) <> True Then
					ValidatePageFields = False							
				End If	
			ElseIf IsNumeric(elePropertyValue) Then
				If CompareValueNum(Trim(elePropertyValue), Trim(oValidateStructArr(i).expectedValue),oValidateStructArr(i).elementName) <> True Then
					ValidatePageFields = False				
				End If
			Else 
				If CompareValueStr(Trim(elePropertyValue), oValidateStructArr(i).expectedValue,oValidateStructArr(i).elementName) <> True Then
					ValidatePageFields = False
				End If
			End If
						
		Next		
	End Function
	
	Private Function CompareValueNum(ByVal elePropertyValue, ByVal expectedValue, ByVal elementName)
			If elePropertyValue = expectedValue Then
				If m_fieldLevelValidation = True Then
					ReportStatus "Pass", oValidateStructArr(i).valScenario & "-" & elementName , "FieldValidation Scenario - "&oValidateStructArr(i).valScenario & vbcrlf &"Field Name - "& elementName &  vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
				Else
					ReportStatus "Pass", ValidateName & "-" & elementName , elementName & " - Values available in the field - "& vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
					
				End If			
				
				CompareValueNum = True
			Else
				If m_fieldLevelValidation = True Then
					ReportStatus "Fail", oValidateStructArr(i).valScenario & "-" & elementName , "FieldValidation Scenario - "&oValidateStructArr(i).valScenario & vbcrlf &"Field Name - "& elementName &  vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
				Else
					ReportStatus "Fail", ValidateName & "-" & elementName , elementName & " - Values available in the field - "& vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
				End If
				CompareValueNum = False
			End If
			print "Element validate using CmprValue method - " &elementName
	End Function
	
	Private Function CompareValueStr(ByVal elePropertyValue, ByVal expectedValue, ByVal elementName)
			If strcomp(Trim(elePropertyValue),Trim(expectedValue),1) = 0 Then
				If m_fieldLevelValidation = True Then
					ReportStatus "Pass", oValidateStructArr(i).valScenario & "-" & elementName , "FieldValidation Scenario - "&oValidateStructArr(i).valScenario & vbcrlf &"Field Name - "& elementName &  vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
				Else
					ReportStatus "Pass", ValidateName & "-" & elementName , elementName & " - Values available in the field - "& vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
					
				End If		
				CompareValueStr = True
			Else
				If m_fieldLevelValidation = True Then
					ReportStatus "Fail", oValidateStructArr(i).valScenario & "-" & elementName , "FieldValidation Scenario - "&oValidateStructArr(i).valScenario & vbcrlf &"Field Name - "& elementName &  vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
				Else
					ReportStatus "Fail", ValidateName & "-" & elementName , elementName & " - Values available in the field - "& vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
					
				End If		
				CompareValueStr = False
			End If
			print "Element validate using CmprStrng method - " &elementName
	End Function
	
	Private Function CompareValueArr(ByVal elePropertyValue, ByVal expectedValue,Byval elementName)
		elePropertyValueArr=split(elePropertyValue,";")
		expectedValueArr=split(expectedValue,";")
		match=0
		For OuterIterator = 0 To UBound(expectedValueArr)
		    
			For InnerIterator = 0 To UBound(elePropertyValueArr)
				If strcomp(trim(elePropertyValueArr(InnerIterator)),trim(expectedValueArr(OuterIterator)),1) = 0 Then
					match = match+1
					Exit for
				End If
			Next			
		Next
		match = match - 1 'Array starts the count from 0, hence substract 1 from the match value
			If match = UBound(expectedValueArr) Then
				If m_fieldLevelValidation = True Then
					ReportStatus "Pass", oValidateStructArr(i).valScenario & "-" & elementName , "FieldValidation Scenario - "&oValidateStructArr(i).valScenario & vbcrlf &"Field Name - "& elementName &  vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
				Else
					ReportStatus "Pass", ValidateName & "-" & elementName , elementName & " - Values available in the field - "& vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
					
				End If		
				CompareValueArr = True
			Else
				If m_fieldLevelValidation = True Then
					ReportStatus "Fail", oValidateStructArr(i).valScenario & "-" & elementName , "FieldValidation Scenario - "&oValidateStructArr(i).valScenario & vbcrlf &"Field Name - "& elementName &  vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
				Else
					ReportStatus "Fail", ValidateName & "-" & elementName , elementName & " - Values available in the field - "& vbcrlf &"ExpectedValue - " &expectedValue & vbcrlf &"Actual Value - "&elePropertyValue 
					
				End If		
				CompareValueArr = False
			End If
			print "Element validate using CmprArray method - " &elementName
	End Function
	
	Public Sub addValidateTable(ByVal TableName,ByVal elementType,Byval TableRow,ByVal TableCol, ByVal expectedValue)
		If IsEmpty(nOfPageFields) Then
			nOfPageFields=0
		Else
			nOfPageFields = nOfPageFields + 1
		End if
		ReDim Preserve oValidateStructArr(nOfPageFields)
		Set oValidateStructArr(nOfPageFields) = New ValidateStructure			
		oValidateStructArr(nOfPageFields).setValidateTable TableName,elementType,TableRow,TableCol,expectedValue
		print "Element Added - " &TableName
	End Sub
	
	Public Sub ValidateTableFields()
		For i = 0 To nOfPageFields			
			cellData = oPage.getWTablecell(oValidateStructArr(i).TableName, oValidateStructArr(i).RowNum,oValidateStructArr(i).ColumnNum)
			''cellData = oPage.getEProperty(oValidateStructArr(i).elementType, oValidateStructArr(i).elementName, oValidateStructArr(i).elementProperty)
			CompareValueStr cellData, oValidateStructArr(i).expectedValue,oValidateStructArr(i).TableName							
		Next
	End Sub
	
End Class



Class pageStructure ' This class Helps to set Value to the element available in each page.
	Public elementName, elementType, elementValue
	Public Function setPageAttrtibs(ByVal element_Name,ByVal element_Type,ByVal element_Value)
		elementName = element_Name
		elementType = element_Type
		elementValue = element_Value
	End Function
End Class

Class fillPage ' This class helps to fill the fields available in the Page dynamically
	Private oPageStructArr(), oPage 'oPageStructArr - dynamic array
	Public nOfPageFields,fill_GoodTillDate,prv_GoodTillDate
	Public Function setPageObject(ByVal browserName,ByVal pageName)
		Set oPage=New preparePage
		oPage.initPage browserName,pageName
	End Function
	Public Function addPageField(ByVal elementName,ByVal elementType,ByVal elementValue)
		If IsEmpty(nOfPageFields) Then
			nOfPageFields=0
		Else
			nOfPageFields = nOfPageFields + 1
		End if
		ReDim Preserve oPageStructArr(nOfPageFields)
		Set oPageStructArr(nOfPageFields) = New pageStructure			
		oPageStructArr(nOfPageFields).setPageAttrtibs elementName, elementType, elementValue		
	End Function
	Public Function fillPageFields()
		For i = 0 To nOfPageFields
			Select Case oPageStructArr(i).elementType
				Case "Element"
					oPage.clickWebElement oPageStructArr(i).elementName
				Case "List"
					oPage.selWebListItemByVal oPageStructArr(i).elementName,oPageStructArr(i).elementValue	
				Case "List_Seq"
					oPage.selWebListItemBySeq oPageStructArr(i).elementName,oPageStructArr(i).elementValue					
				Case "Edit"
					oPage.setWebEdit oPageStructArr(i).elementName,oPageStructArr(i).elementValue
				Case "Number"
					oPage.setWNumber oPageStructArr(i).elementName,oPageStructArr(i).elementValue
				Case "Button"
					oPage.clickWebButton oPageStructArr(i).elementName
			End Select
		Next
	End Function
	Public Function fillPageFieldsByPos(Byval FillPosition)
			Select Case oPageStructArr(FillPosition).elementType
				Case "Element"
					oPage.clickWebElement oPageStructArr(FillPosition).elementName
				Case "List"				
					oPage.selWebListItemByVal oPageStructArr(FillPosition).elementName,oPageStructArr(FillPosition).elementValue	
				Case "List_Seq"
					oPage.selWebListItemBySeq oPageStructArr(FillPosition).elementName,oPageStructArr(FillPosition).elementValue										
				Case "Edit"
					oPage.setWebEdit oPageStructArr(FillPosition).elementName,oPageStructArr(FillPosition).elementValue
				Case "Number"
					oPage.setWNumber oPageStructArr(FillPosition).elementName,oPageStructArr(FillPosition).elementValue
				Case "Button"
					oPage.clickWebButton oPageStructArr(FillPosition).elementName
			End Select
	End Function
	
	Public Function fillPageFieldsFromToPos(Byval FromPosition, Byval ToPosition)
		For i = FromPosition to ToPosition
				Select Case oPageStructArr(i).elementType
				Case "Element"
					oPage.clickWebElement oPageStructArr(i).elementName
				Case "List"
					oPage.selWebListItemByVal oPageStructArr(i).elementName,oPageStructArr(i).elementValue
				Case "List_Seq"
					oPage.selWebListItemBySeq oPageStructArr(i).elementName,oPageStructArr(i).elementValue										
				Case "Edit"
					oPage.setWebEdit oPageStructArr(i).elementName,oPageStructArr(i).elementValue
				Case "Number"
					oPage.setWNumber oPageStructArr(i).elementName,oPageStructArr(i).elementValue
				Case "Button"
					oPage.clickWebButton oPageStructArr(i).elementName
			End Select
		Next		
	End Function
	
	Public Function getArrayIndex(byVal objElementName)
		For i = 0 To nOfPageFields
			If strcomp(oPageStructArr(i).elementName,objElementName,1) = 0 Then
				getArrayIndex=i
				Exit For					
			End If
		Next
	End Function
		
	Public Function Get_GoodTillDate()

			'Get Today's Date
			todayDate= Date()
			'Past Date
			pastDate=todayDate-1
			'Future Date
			futureDate=todayDate+1
			'Get Day
			Select Case Weekday(todayDate)
			'HolidayDate= Sunday, WeekendDate=Saturday
			Case  vbSunday
			'GTD date will be coming Monday
			GTDDate= todayDate+1
			Case vbSaturday
			'GTD date will be upcoming monday
			GTDDate=todayDate+2
			Case vbMonday
			GTDDate=todayDate+1
			Case vbTuesday
			GTDDate=todayDate+1
			Case vbWednesday 
			GTDDate=todayDate +1
			Case vbTHursday 
			GTDDate=todayDate +1
			Case vbFriday 
			GTDDate=todayDate +4        'GTD functionality was under developement(25/11/2015) so adding +3        
			End Select
			
			v_Month1=DatePart("m",GTDDate)
			v_Day1=Datepart("d",GTDDate)
			v_Year1=Datepart("yyyy",GTDDate)
			v_Month1_name=mid(MonthName(Month(GTDDate)),1,3)
			
			'Appending 0 to the right of Month part from date 
			v_Month1=Right(0 & v_Month1,2)
			'Appending 0 to the right of Day part of date
			v_Day1= Trim(v_Day1) 'Right(0 & v_Day1,2)
			'1..Returning the Date 
			fill_GoodTillDate = v_Month1 & Right(0 & v_Day1,2)
			prv_GoodTillDate = v_Month1_name & " " & v_Day1 & "," & " " & v_Year1

	End Function

End Class


Class PriceCalculation
	Public Limit_Price, Trigger_Price,Trigger_Delta,Limit_Delta,oPriccalc,vOrdernum
	
	Public Sub initialise_PriceCalculation(ByVal OrderNum) ' Order Number = 0 for 1st order , 1 for 2nd order, 2 for 3rd Order
		Set oPriccalc = new preparePage
		oPriccalc.initPage "AOE","AOE"
		vOrdernum = OrderNum
	End Sub
	'Public Function init_PriceCalc(ByRef refcurrentPage, ByVal webTablName, ByVal webTRow, ByVal webTcolmn, ByVal OrderType, ByVal Price_Percentage, ByVal ActionType)
	Public Sub init_PriceCalc( ByVal OrderType, ByVal Price_Percentage, ByVal ActionType)		
		Limit_Price = 0
		Trigger_Price = 0
		Trigger_Delta = 0
		Limit_Delta = 0	
	
			oPriccalc.wait4Element "Element","we_OrdTkt_SymDetails"&"_"&vOrdernum,10000			
				If oPriccalc.valEleExist_NoReport("Element","we_OrdTkt_SymDetails"&"_"&vOrdernum) Then
					webTablePrice =  oPriccalc.getEProperty("Element","we_LastPrice_Value"&"_"&vOrdernum,"innertext")
				End If		
				
		'webTablePrice  = o_curntPRef.getWTablecell(webTablName,webTRow,webTcolmn)		
		Select Case OrderType 
			   Case "Limit"							   
			         ValueLmtPrc = Cint(Trim(Right(webTablePrice,Len(webTablePrice)-1))) 
'[9th Aug,2016 Kedara] commented starts here
'For Limit Order to Buy =at or below the Ask
'For limit order to Sell= at or above the market 
'			         If ActionType = "Buy" or ActionType = "Buy to Cover" Then
'			         	Limit_Price = ValueLmtPrc + (ValueLmtPrc*(Price_Percentage/100))			         	
'			         ElseIf ActionType = "Sell" or ActionType = "Short Sell"  Then
'						Limit_Price = ValueLmtPrc - (ValueLmtPrc*(Price_Percentage/100))				         
'			         End If	
'Ends Here 
			         
			         If ActionType = "Buy" or ActionType = "Buy to Cover" Then
			         	Limit_Price = ValueLmtPrc - (ValueLmtPrc*(Price_Percentage/100))
							If Cint(Limit_Price) >  4 Then
								Limit_Price = Limit_Price - 2
							End If			         	
			         ElseIf ActionType = "Sell" or ActionType = "Short Sell"  Then
						Limit_Price = ValueLmtPrc + (ValueLmtPrc*(Price_Percentage/100))
							If Cint(Limit_Price) >  2 Then
								Limit_Price = Limit_Price + 6
							End If								
			         End If	
			         
			   	Case "Stop Market"
					
					   ValueLmtPrc = Cint(Trim(Right(webTablePrice,Len(webTablePrice)-1))) 
			         
			         If ActionType = "Buy" or ActionType = "Buy to Cover" Then
			         	Trigger_Price = ValueLmtPrc - (ValueLmtPrc*(Price_Percentage/100))	
							If Cint(Trigger_Price) >  4 Then
								Trigger_Price = Trigger_Price - 3
							End If				         	
			         ElseIf ActionType = "Sell" or ActionType = "Short Sell"  Then
						Trigger_Price = ValueLmtPrc + (ValueLmtPrc*(Price_Percentage/100))
							If Cint(Trigger_Price) >  2 Then
								Trigger_Price = Trigger_Price - 10
							End If								
			         End If						
			    	
			    Case  "Stop Limit"
			    	ValueLmtPrc = Cint(Trim(Right(webTablePrice,Len(webTablePrice)-1))) 
			         If ActionType = "Buy" or ActionType = "Buy to Cover" Then
			         	Limit_Price = ValueLmtPrc + (ValueLmtPrc*(Price_Percentage/100))
			         	Trigger_Price = Limit_Price - (Price_Percentage/100)
				         
			         ElseIf ActionType = "Sell" or ActionType = "Short Sell"  Then
						Limit_Price = ValueLmtPrc - (ValueLmtPrc*(Price_Percentage/100))
						Trigger_Price = Limit_Price + (Price_Percentage/100)												
			         End If	
							         
				Case "Trailing Stop","Trailing Stop Limit"
					Trigger_Delta = Price_Percentage
					Limit_Delta = Price_Percentage + (Price_Percentage/100)						
				
		End Select 		
		Limit_Price = FormatNumber(Limit_Price,2,False,False,False)
		Trigger_Price = FormatNumber(Trigger_Price,2,False,False,False)
	End Sub	

'Public Function PriceCalc_Options(ByRef refcurrentPage, ByVal webTablName, ByVal webTRow, ByVal webTcolmn, ByVal OrderType, ByVal Price_Percentage, ByVal ActionType)
	Public Sub PriceCalc_Options(ByVal OrderType, ByVal Price_Percentage, ByVal ActionType)	
		print "calculating Price for Option"	
		Limit_Price = 0
		Trigger_Price = 0
		oPriccalc.wait4Element "Element","we_OrdTkt_SymDetails"&"_"&vOrdernum,10000
		If oPriccalc.valEleExist_NoReport("Element","we_OrdTkt_SymDetails"&"_"&vOrdernum) Then
			OptionPrice1 = oPriccalc.getEProperty("Element","we_BidAsk_Value"&"_"&vOrdernum,"innertext")
		End If
		'OptionPrice1 = oPriccalc.getEProperty("Element","we_BidAsk_Value","innertext")
		'OptionPrice1 = o_curntPRef.getWTablecell(webTablName,webTRow,webTcolmn)
		
		OptionPrice  = split(OptionPrice1,"/")
		BidPrice = Trim(OptionPrice(0))
		AskPrice = Trim(OptionPrice(1))
		Select Case OrderType 
			   Case "Limit","Net Debit","Net Credit"		
			         If ActionType = "Buy to Open" or ActionType = "Buy to Close" Then
			         	ValueLmtPrc = Cint(Trim(Right(AskPrice,Len(AskPrice)-1)))			         	
			         	Limit_Price = ValueLmtPrc + (ValueLmtPrc*(Price_Percentage/100))	
			         ElseIf ActionType = "Sell to Open Un-Covered" or ActionType = "Sell to Open Covered" or ActionType = "Sell to Close" Then
						ValueLmtPrc = Cint(Trim(Right(BidPrice,Len(BidPrice)-1)))
						Limit_Price = ValueLmtPrc - 2	
			         End If	 			    		
						
			    Case  "Stop Limit"			    	
			         If ActionType = "Buy to Open" or ActionType = "Buy to Close" Then
			         	ValueLmtPrc = Cint(Trim(Right(AskPrice,Len(AskPrice)-1))) 
			         	Trigger_Price = ValueLmtPrc +  (ValueLmtPrc*(Price_Percentage/100))
			         	Limit_Price = Trigger_Price + 1
			         	
			         ElseIf ActionType = "Sell to Open Un-Covered" or ActionType = "Sell to Open Covered" or ActionType = "Sell to Close" Then
			         	ValueLmtPrc = Cint(Trim(Right(BidPrice,Len(BidPrice)-1))) 
						Trigger_Price = ValueLmtPrc - 2
			         	Limit_Price = Trigger_Price - 1				
			         End If		
						Limit_Price = FormatNumber(Limit_Price,2,False,False,False)
						Trigger_Price = FormatNumber(Trigger_Price,2,False,False,False)				         
		End Select 		
	End Sub	
	
End Class


Public Sub Verify_AwSnap()
	If Browser("AOE").Page("AOE").Webelement("we_WealthGateWay").Exist(5) <> True Then				
		Reportstatus "Fail","Browser Crashed","Browser crashed - Exit Test" 
		Kill_BrowserProcess()
		ExitTest
	End If
End Sub


Function ConvertNegativeNumFormat(ByVal value2bConverted)
	If instr(value2bConverted, "-") Then
	Value1 = Replace(value2bConverted,"-","($",1)
	ConvertedValue = Value1 & ")"	
	ConvertNegativeNumFormat = ConvertedValue
	Else
	ConvertedValue = "$" & value2bConverted
	ConvertNegativeNumFormat = ConvertedValue		
	End If
End Function


Function Validate_SecurityData(sSecurityType, sSymbol, sMkt)
Set myo = Browser("AOE").Page("AOE")

Dim dictQuotesAPI: Set dictQuotesAPI = dictGetRealTimeQuotes(sSecurityType, sMkt, sSymbol)
		Dim sAPI_Symbol: sAPI_Symbol = dictQuotesAPI.Item("symbol")
		Dim sAPI_Last: sAPI_Last = dictQuotesAPI.Item("last")
		Dim sAPI_Change: sAPI_Change = dictQuotesAPI.Item("percentChange")
		Dim sAPI_Bid: sAPI_Bid = dictQuotesAPI.Item("bid")
		Dim sAPI_Ask: sAPI_Ask = dictQuotesAPI.Item("ask")
		Dim sAPI_askLots: sAPI_askLots = dictQuotesAPI.Item("askLots")
		Dim sAPI_bidLots: sAPI_bidLots = dictQuotesAPI.Item("bidLots")
		Dim sAPI_dayLow: sAPI_dayLow = dictQuotesAPI.Item("dayLow")
		Dim sAPI_dayHigh: sAPI_dayHigh = dictQuotesAPI.Item("dayHigh")
		Dim sAPI_volume: sAPI_volume = dictQuotesAPI.Item("volume")
		Dim sAPI_Open: sAPI_Open = dictQuotesAPI.Item("openPrice")
		
		'print "Example from validation: " & sAPI_Symbol
		'=============================================
		'Validate Symbol details (6,1 - Symbol, 5,1 -  Symbol & Market )
		print "Symbol From UI: " & myo.webtable("wt_OrdTkt_SymDetails").GetCellData(6,1)
		If Trim(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(6,1)) = Trim(sAPI_Symbol) Then
		   ReportStatus "Pass","Symbol Details","Symbol details matches with API"
		Else
		   ReportStatus "Fail","Symbol Details","Symbol details DO NOT match with API" & sAPI_Symbol 
		End If
        
        Dim sAPI_Last_v: sAPI_Last_v = FormatCurrency(sAPI_Last)
       'Validate Last Price details 
		If myo.webtable("wt_OrdTkt_SymDetails").GetCellData(7,1) = "Last" And myo.webtable("wt_OrdTkt_SymDetails").GetCellData(7,2) = sAPI_Last_v Then 
		   ReportStatus "Pass","Last Details", "Last Price details matches with API"
		Else
		   ReportStatus "Fail","Last Details","Last Price details DO NOT match with API. Expected Value: " & sAPI_Last_v &", Actual Value: " & myo.webtable("wt_OrdTkt_SymDetails").GetCellData(7,2)
		End If
	  
	  'Validate Change Price details 
	    Dim ui_Change : ui_Change = myo.webtable("wt_OrdTkt_SymDetails").GetCellData(8,2)
	    ui_Change_Arr = Split(ui_Change,"(")
	    ui_Change_v = CDBL(Left(ui_Change_Arr(1),Len(Trim(ui_Change_Arr(1)))-2))  
	    If myo.webtable("wt_OrdTkt_SymDetails").GetCellData(8,1) = "Change" And ui_Change_v = sAPI_Change then
		   ReportStatus "Pass","Change Details", "Change Price details matches with API"
		Else
		   ReportStatus "Fail","Change Details","Change Price details DO NOT match with API. Expected Value: " & sAPI_Change &", Actual Value: " & ui_Change_v
		End If
'	    Print " UI Value is  "  & ui_Change_v
'	    Print " API Value is  "  & sAPI_Change
		
		Dim sAPI_Bid_v: sAPI_Bid_v = FormatCurrency(sAPI_Bid,2)
		Dim sAPI_Ask_v: sAPI_Ask_v = FormatCurrency(sAPI_Ask,2)
		'Validate Bid/Ask Price details 
		If myo.webtable("wt_OrdTkt_SymDetails").GetCellData(9,1) = "Bid / Ask" And Trim(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(9,2)) = sAPI_Bid_v & " /" & sAPI_Ask_v Then
		  ReportStatus "Pass","Bid_Ask Details", "Bid_Ask details matches with API"
		Else
		  ReportStatus "Fail","Bid_Ask Details","Bid_Ask details DO NOT match with API. Expected Value: " & sAPI_Bid_v & " /" & sAPI_Ask_v &", Actual Value: " & Trim(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(9,2))
		End If
		'Print " API Bid and Ask Value is : "   & sAPI_Bid_v & sAPI_Ask_v '& Trim(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(9,2))
		'Validate Lot details 
		If myo.webtable("wt_OrdTkt_SymDetails").GetCellData(10,1) = "Lots" And Trim(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(10,2)) = sAPI_bidLots & "/" & sAPI_askLots then 
		   'ubLot = Left(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(10,2),1) 
		   'uaLot = Right(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(10,2),1)
		  	ReportStatus "Pass","Lot Details", "Lot details matches with API"
		Else 
		    ReportStatus "Fail","Lot Details","Lot details DO NOT match with API. Expected Value: " & sAPI_bidLots & "/" & sAPI_askLots &", Actual Value: " &Trim(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(10,2))
		End If
		'Validate Open details 
		Dim sAPI_Open_v: sAPI_Open_v = FormatCurrency(sAPI_Open)
		If myo.webtable("wt_OrdTkt_SymDetails").GetCellData(11,1) = "Open" And myo.webtable("wt_OrdTkt_SymDetails").GetCellData(11,2) = sAPI_Open_v Then 
		   ReportStatus "Pass","Open Details", "Open details matches with API"
		Else
		   ReportStatus "Fail","Open Details","Open details DO NOT match with API. Expected Value: "  & sAPI_Open_v &", Actual Value: " & myo.webtable("wt_OrdTkt_SymDetails").GetCellData(11,2)
		End If
		'Validate High/Low details 
		Dim sAPI_dayHigh_v: sAPI_dayHigh_v = FormatCurrency(sAPI_dayHigh)
		Dim sAPI_dayLow_v: sAPI_dayLow_v = Formatcurrency(sAPI_dayLow)
		If myo.webtable("wt_OrdTkt_SymDetails").GetCellData(12,1) = "High / Low" And Trim(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(12,2)) = sAPI_dayHigh_v & " /" & sAPI_dayLow_v Then
		   ReportStatus "Pass","High_Low Details", "High_Low details matches with API"
		Else
		   ReportStatus "Fail","High_Low Details","High_Low details DO NOT match with API . Expected Value: " & sAPI_dayHigh_v & " /" & sAPI_dayLow_v &", Actual Value: " & Trim(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(12,2))
		End If
		'Validate Volume details 
		If myo.webtable("wt_OrdTkt_SymDetails").GetCellData(13,1) = "Volume" And Trim(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(13,2)) = sAPI_volume Then 
		   ReportStatus "Pass","Volume Details", "Volume details matches with API"
		Else
		   ReportStatus "Fail","Volume Details","Volume details DO NOT match with API. Expected Value: " & sAPI_volume &", Actual Value: " & Trim(myo.webtable("wt_OrdTkt_SymDetails").GetCellData(13,2))
		End If
	   	 
	End Function

Public Function dictGetRealTimeQuotes(ByVal sSecurityType, ByVal sMarket, ByVal sSymbol)
	' *******************************************************************************
	' Name: Demo Test GetSecurityQuote
	' @Description: 
	'1. Creates SecurityQuoteData object
	'2. Sets the necessary properties (see SecurityQuoteData class description)
	'3. Gets security quote Dictionary
	'
	'To use:
	' 	1. Create an object with SecurityQuoteData Factory function (CreateSecurityQuoteData())
	'	2. Set sURL - API REST command for Securities API - MANDATORY
	'	3. Set sGUID if known. Leave it empty for forced update.
	'	4. To enable "Update from Logs File" option, provide:
	'		- sLogsURL, sLogsUser, sLogsPassword, sUIUser
	'	5. Set m_dictMapping - MANDATORY
	' Input:
	'	Mandatory: sURL, dictMapping, sGUID (if known) or sGUID = vbNullString (for forced update)
	'	Optional (if GUID is known), Mandatory (otherwise): m_sLogsURL, m_sLogsUser, m_sLogsPassword, m_sUIUser
	' Return:
	'	Quote Dictiobary object				
	' ChangeLog:
	' 20-September-2015 | Eugene  | Initial Version
	' *******************************************************************************
	
	'Dependencies:
	'1. GUID is unique for a user, consider user's LOB
	'2. GUID is session-based, with time of life ~ 2-3 hours
	'3. Host URL and Port depend on environment
	'4. Pattern for extracting GUID from logs can be changed
	'5. Logs Path can be changed for every new build 
	
	
	'Demo 
	'Environment parameters:
	Dim sHostAPI: sHostAPI = 		"https://wealthapi01.sys.td.com"
	Dim sPortAPI: sPortAPI = 		":443"
	Dim sMethodAPI: sMethodAPI = 	"/v1/securities/findOne"
	
	Dim sHostLogs: sHostLogs = 		"http://stdwmn07.tdbank.ca"
	Dim sPortLogs: sPortLogs = 		":8080"
	
	'Parameters that can be changed:
	Dim sLogsPath: 		sLogsPath = 	"/weblogs/WM_PWA_FND_01/WUI-stdwmn07-SYS-eip-R1.2.3-diagnostic.log"
	Dim sLogsUser: 		sLogsUser = 	"devuser"
	Dim sLogsPassword: 	sLogsPassword = "@ur$ervic3"
	
	'Dynamic parameter:
	Dim sGUID: 	sGUID = 	"SYS||1440422069666||ef32f679-3bc0-42a4-aaae-7b4d0d5d9e00"
	'Dim sGUID: 	sGUID = vbNullString	
	
	'Parameter from test:
	'Dim sSecurityType: sSecurityType = "EQT" 'OPT, MFT
	'Dim sMarket: sMarket = "CA" 'US
	'Dim sSymbol: sSymbol = "TD" 
	
	'Not sure, need to check
	Dim sUIUser: sUIUser = "PIAGNT1" 'Using this for GUID update.
	
	'Request example: https://wealthapi01.sys.td.com/v1/securities/findOne?query=(securityType eq 'EQT' and market eq 'CA' and symbol eq 'TD')&include=quote
	Dim sQuery: sQuery = "?query=(securityType eq '" & sSecurityType & "' and market eq '" & sMarket & "' and symbol eq '" & sSymbol & "')"
	Dim sURL: 	sURL = sHostAPI & sPortAPI & sMethodAPI & sQuery & "&include=quote"
	Dim sLogsURL: sLogsURL = sHostLogs & sPortLogs & sLogsPath
	
	'Mapping
	Dim dictMapping: Set dictMapping = CreateObject("Scripting.Dictionary")
	
	With dictMapping
		.Add "symbol", 			"data.symbol"
		.Add "type", 			"data.type"
		.Add "market", 			"data.market"
		.Add "name", 			"data.name"
		.Add "currency", 		"linked.quote.[0].data.currency"
		.Add "percentChange", 	"linked.quote.[0].data.percentChange"
		.Add "ask", 			"linked.quote.[0].data.ask"
		.Add "bid", 			"linked.quote.[0].data.bid"
		.Add "last", 			"linked.quote.[0].data.last"
		.Add "openPrice",   	"linked.quote.[0].data.openPrice"
		.Add "askLots",     	"linked.quote.[0].data.askLots"
		.Add "bidLots",     	"linked.quote.[0].data.bidLots"
		.Add "dayLow",      	"linked.quote.[0].data.dayLow"
		.Add "dayHigh",     	"linked.quote.[0].data.dayHigh"
		.Add "volume",      	"linked.quote.[0].data.volume"
		
		.Add "Non-existing",	"securityDetails.symbol.value.isValidXXX" 'the provided path is incorrect - returns "NOT_FOUND"
	End With
	
	'Create an instance of SecurityQuoteData class
	Dim oQuotes: Set oQuotes = CreateSecurityQuoteData()
	'Set properties
	With oQuotes
		.SetURL = sURL
		.SetLogsURL = sLogsURL
		.SetGUID = sGUID
		.SetUIUser = sUIUser
		.SetLogsUser = sLogsUser
		.SetLogsPassword = sLogsPassword
	End With
	Set oQuotes.Mapping = dictMapping
	
	'Dim dictQuote: Set dictQuote = oQuotes.dictGetQuote()
	'print "Example: " & dictQuote.Item("symbol")
	
	Set dictGetrealTimeQuotes = oQuotes.dictGetQuote()
	'================= DEMO ==================================== 
	'print "String response: " & oQuotes.PrintResponse
	
	
	
	
	Set oQuotes = Nothing
End Function



'********* Validate Data against DB ********************
Function Validate_OrderDetailsDB(TransId1)

	'Option Explicit
	Dim sTransNumber: sTransNumber = TransId1
	'Dictionary contains field-value pairs for Search Criteria
	'e.g. this case will be presented as a part of WHERE clause:
	'WHERE ... AND ORDER_NUM = 'QZ-000007'
	Dim dictSearchCriteria: Set dictSearchCriteria = CreateObject("Scripting.Dictionary")
	dictSearchCriteria.Add "ORDER_NUM", sTransNumber
	
	'Dictionary contains field-varName pairs for SELECT clause
	'e.g. this case will be presented as a number of fields of SELECT 
	'SELECT INCLUDE_COMISN_IND, BOR_ORDER_NUM, ESTIMATED_TOTAL_AMT FROM ...
	'The values, returned in dictResult will be available with the "varName part
	'e.g. dictResults.Item("includeCommInd") returns the value of INCLUDE_COMISN_IND field from database (for example "Y" or "N")
	Dim dictResultsMap: Set dictResultsMap = CreateObject("Scripting.Dictionary")
	dictResultsMap.Add "ORDER_NUM",				"Trans_Id"
	dictResultsMap.Add "ACCT_NUM", 				"acctNumber"
	dictResultsMap.Add "ACCT_BOB_CD", 			"AcctRRCode"	
	dictResultsMap.Add "TRADER_BOB_CD", 		"AgentRRCode"
	dictResultsMap.Add "SECRTY_SYMBOL", 		"symbol"
	dictResultsMap.Add "MARKET_COUNTRY_CD", 	"Market"
	dictResultsMap.Add "ORDER_TYPE_CD", 		"OrderType"
	dictResultsMap.Add "ACTION_TYPE_CD", 		"ActionType"
	dictResultsMap.Add "DURATN_TYPE_CD", 		"Expiry"
	dictResultsMap.Add "ORDER_QUANTY_AMT", 		"qty"
	dictResultsMap.Add "GOOD_TILL_DT", 			"Expiry_GTD"
	dictResultsMap.Add "PRICE_AMT", 			"Price"
	dictResultsMap.Add "STOP_LIMIT_PRICE_AMT", 	"StopPrice"
	dictResultsMap.Add "CALCD_COMISN_EST_AMT", 	"CalcCommAmt"
	dictResultsMap.Add "FLAT_COMISN_AMT",		"PreFigCommAmt"
	dictResultsMap.Add "PER_SHARE_COMISN_AMT",	"PerShareCommAmt"
	dictResultsMap.Add "SCHED_PCT",				"SchePercAmt"
	dictResultsMap.Add "CALCD_PRIN_EST_AMT", 	"EstPrincipal"
	dictResultsMap.Add "ESTIMATED_TOTAL_AMT", 	"EstTotal"
	dictResultsMap.Add "SCHED_NM", 				"CommType"
	dictResultsMap.Add "BOR_ORDER_NUM", 		"OrderNumber"
	dictResultsMap.Add "BEHALF_CD", 			"BehalfCode"
	dictResultsMap.Add "ORDER_ITEM_STAT_CD", 	"OrderStatus"
	dictResultsMap.Add "DELTA_LIMIT_AMT", 		"Offset"
	dictResultsMap.Add "DELTA_AMT", 			"TrailStop$"
	dictResultsMap.Add "SHORT_NM",				"ShortName"
	dictResultsMap.Add "EFFECTIVE_TS",			"OrderSubmitTS"
	dictResultsMap.Add "USER_ID",				"UserId"
	dictResultsMap.Add "ORDER_UID",				"Order_UID"
	dictResultsMap.Add "BOR_OMS_ORDER_NUM",		"Temp_Order_Num"
	
	'Create an instanse of QueryMSSQL class
	Dim oQuery: Set oQuery = CreateDBQuery()
	'Set properties
	With oQuery
		'Mandatory		
		'IP for Dev "10.155.18.225" ---For Sys "10.155.100.23 " 
		.IP = 			gIPAddress
		.PORT = 		"3341"
		.DBUserID = 	"TSTQA19"
		.DBPassword = 	"12345Qwertiko"
		'.DBName = 		"WOE"  - dev 02 stable
		'.DBName = 		"WOEB" End Point 10.155.18.45 ; WOEP - 10.155.18.228 ; WOE - wealthapi01.dev.td.com
		.DBName = 		gDBName
		.DBSchema = 	gSchemaName
		.TableName = 	"ORDER_ITEM"
		'Mandatory for the main framework option:
		Set .SearchCriteria = dictSearchCriteria
		Set .ResultsMapping = dictResultsMap
		'Optional
		.Condition = 	"RECORD_TYPE_CD = 'SO'"
		'.Debug = True
	End With
	
	print "=============== Using General Framework ======================="
	Dim dictResults: Set dictResults = oQuery.GetResultsDictionary()
	oQuery.PrintResults
	print "Using dictResults:"
	print dictResults.Item("acctNumber")
	print dictResults.Item("OrderNumber")
	print dictResults.Item("borOrderNum")
	
	'print "=============== Using Customized Field ======================="
	'Dim dictResults
	'Set dictResults = oQuery.GetResultsDictionaryByOrderNum("EV-000031")
	'oQuery.PrintResults
	'print "Using dictResults:"
	'print dictResults.Item("BUYING_POWER_AFFECT_AMT")
	'print dictResults.Item("CALCD_PRIN_EST_AMT")
	'
	'print "=============== Using Test Query ======================="
	'Dim sQuery: sQuery = "SELECT ORDER_ITEM_CREATION_TS, ORDER_LIFE_CYCLE_STAGE_CD, BOR_ORDER_NUM, SCHED_TYPE_CD FROM WOE.ORDER_ITEM WHERE RECORD_TYPE_CD = 'SO' AND ORDER_NUM = 'QZ-000007'"
	'Set dictResults = oQuery.GetResultsDictionaryTestQuery(sQuery)
	'oQuery.PrintResults
	'print "Using dictResults:"
	'print dictResults.Item("ORDER_ITEM_CREATION_TS")
	'print dictResults.Item("ORDER_LIFE_CYCLE_STAGE_CD")
	Set Validate_OrderDetailsDB = dictResults
End Function

Function Validate_UserIdDB(OrderUID)

	'Option Explicit
	Dim sOrderUID: sOrderUID = OrderUID
	'Dictionary contains field-value pairs for Search Criteria
	'e.g. this case will be presented as a part of WHERE clause:
	'WHERE ... AND ORDER_UID = 'QZ-000007'
	Dim dictSearchCriteria: Set dictSearchCriteria = CreateObject("Scripting.Dictionary")
	dictSearchCriteria.Add "ORDER_UID", sOrderUID
	
	'Dictionary contains field-varName pairs for SELECT clause
	'e.g. this case will be presented as a number of fields of SELECT 
	'SELECT INCLUDE_COMISN_IND, BOR_ORDER_NUM, ESTIMATED_TOTAL_AMT FROM ...
	'The values, returned in dictResult will be available with the "varName part
	'e.g. dictResults.Item("includeCommInd") returns the value of INCLUDE_COMISN_IND field from database (for example "Y" or "N")
	Dim dictResultsMap: Set dictResultsMap = CreateObject("Scripting.Dictionary")	
	dictResultsMap.Add "BOR_USER_ID", 	"alternate_UserId"
	

	
	'Create an instanse of QueryMSSQL class
	Dim oQuery: Set oQuery = CreateDBQuery()
	'Set properties
	With oQuery
				'Mandatory
		'IP for Dev "10.155.18.225" ---For Sys "10.155.100.23 " 		
		.IP = 			gIPAddress
		.PORT = 		"3341"
		.DBUserID = 	"TSTQA19"
		.DBPassword = 	"12345Qwertiko"
		'.DBName = 		"WOE"  - dev 02 stable
		'.DBName = 		"WOEB" End Point 10.155.18.45 ; WOEP - 10.155.18.228 ; WOE - wealthapi01.dev.td.com
		.DBName = 		gDBName
		.DBSchema = 	gSchemaName
		.TableName = 	"ORDER_GROUP"
		'Mandatory for the main framework option:
		Set .SearchCriteria = dictSearchCriteria
		Set .ResultsMapping = dictResultsMap
		'Optional
		'.Condition = 	"RECORD_TYPE_CD = 'SO'"
		'.Debug = True
	End With
	
	print "=============== Using General Framework ======================="
	
	 Dim sQuery: sQuery = "Select BOR_USER_ID from WOE.ORDER_GROUP where ORDER_UID =" &sOrderUID
	
	Dim dictResults_OrderGroup: Set dictResults_OrderGroup = oQuery.GetResultsDictionaryTestQuery(sQuery)
	oQuery.PrintResults
	If dictResults_OrderGroup is Nothing Then
		print "No results found"
	Else
	
	
'		print "Using dictResults:"
'		print dictResults.Item("acctNumber")
'		print dictResults.Item("OrderNumber")
'		print dictResults.Item("borOrderNum")
		
		'print "=============== Using Customized Field ======================="
		'Dim dictResults
		'Set dictResults = oQuery.GetResultsDictionaryByOrderNum("EV-000031")
		'oQuery.PrintResults
		'print "Using dictResults:"
		'print dictResults.Item("BUYING_POWER_AFFECT_AMT")
		'print dictResults.Item("CALCD_PRIN_EST_AMT")
		'
		'print "=============== Using Test Query ======================="
		'Dim sQuery: sQuery = "SELECT ORDER_ITEM_CREATION_TS, ORDER_LIFE_CYCLE_STAGE_CD, BOR_ORDER_NUM, SCHED_TYPE_CD FROM WOE.ORDER_ITEM WHERE RECORD_TYPE_CD = 'SO' AND ORDER_NUM = 'QZ-000007'"
		'Set dictResults = oQuery.GetResultsDictionaryTestQuery(sQuery)
		'oQuery.PrintResults
		'print "Using dictResults:"
		'print dictResults.Item("ORDER_ITEM_CREATION_TS")
		'print dictResults.Item("ORDER_LIFE_CYCLE_STAGE_CD")
	End If
	Set Validate_UserIdDB = dictResults_OrderGroup
	
End Function
 


'Function:AOE_Login
Function AgentOrderEntry_Login(DICT_TestCase)
	Set lPage = new preparePage
	Call AOE_CloseBrowsers()
	WebUtil.DeleteCookies 
'Launch Application
	Call AOE_launchAppln(gAppUrl,gBrowser)
	
	lPage.initPage "AOE","EIP Login"
	lPage.pSync
	Wait 5
	lPage.setWebEdit "j_username",Trim(DICT_TestCase.item("UserID"))
	lPage.setWebEdit "j_password",Trim(DICT_TestCase.item("Password"))
	lPage.clickWebButton("Login")	
	lPage.initPage "AOE","AOE"	
	lPage.pSync	

	If lPage.valEleExist("Edit","we_AccountSearchBox") Then
		ReportStatus "PASS", "Login Successful","User logged in Successfully"
		AgentOrderEntry_Login = True
	Else
		ReportStatus "FAIL", "Login Successful","User is failed to log in"
		AgentOrderEntry_Login = False
		Exit Function
	End If 
End Function


'=====================================================
'Function: AOE_launchAppln(strURL)
'Description: Launches Fatca EDC applicaton
'Parameters:
'strURL:  Url for the EDC application 
'Return Value: NA
'Remarks: 
'Dependencies: None.
'Date Created:  Nov. 20th , 2014
'Date last modified:  
'Reason for Modification:
'=====================================================

'Public Function AOE_launchAppln(strLoginUrl)
''SystemUtil.Run "iexplore.exe",strLoginUrl
'	'SystemUtil.Run "firefox.exe",strLoginUrl
'	SystemUtil.Run "chrome.exe",strLoginUrl
'End Function


Public Function AOE_launchAppln(strLoginUrl,gBrowser)

Select Case gBrowser
	Case "IE"
		'SystemUtil.Run "iexplore.exe",strLoginUrl
		BrowserPath = "iexplore.exe"
		Set oShell = CreateObject("wScript.shell")
		oShell.AppActivate("iexplore.exe")
		varPath = BrowserPath &" "&  strLoginUrl
		oShell.Run varPath
	Case "Chrome"
		BrowserPath = "chrome.exe"	
		Set oShell = CreateObject("wScript.shell")
		oShell.AppActivate("chrome.exe")
		varPath = BrowserPath &" "& "-incognito " & strLoginUrl
		oShell.Run varPath
	Case "FireFox"
		'SystemUtil.Run "firefox.exe",strLoginUrl
End Select
'
	
	'SystemUtil.Run "chrome.exe",strLoginUrl

End Function

'=====================================================
'Function: AOE_CloseBrowsers(strURL)
'Description: Closes all the open browsers except QC browser
'Parameters:NA
'Return Value: NA
'Remarks: 
'Dependencies: None.
'Date Created:  Nov 20, 2014
'Date last modified:  
'Reason for Modification:
'=====================================================

Public Sub AOE_CloseBrowsers()
	Dim x,objBr
	Set objBr=Description.Create
	objBr("micclass").Value="Browser"
'Set	objBr=Description.Create()
'Set	objBr("micClass").Value="Browser"
	Set oList=Desktop.ChildObjects(objBr)
	If oList.Count>=0 Then	
'For x = Desktop.ChildObjects(objBr).Count To 0 Step -1
		print "Total Browser Instances: "& oList.Count
		For x=0 To oList.Count		
			print "Closing Browser Instance: " &x 					
			If Browser("CreationTime:="&x).Exist(1) Then					
				If InStr(1, Browser("CreationTime:="&x).GetROProperty("Title"), "HP Application Lifecycle Management") = 0 Then  
					Browser( "CreationTime:=" & x ).Close
					print "Closed Browser" &x		
				End If
				
			End If
		Next
	End If		
End Sub




Function ComplexOrder_OCO_Fill(ByRef DICT_TestCase)
		
	'Set dPage = new preparePage
	Set sPage = new preparePage	
	Set oPage = new ComplexOrder_OrderTckPage_OCO 'Object to fill the first Order
	Set pPage = new SingleOrderPreviewPage
	Set cPage = new SingleOrderConfirmationPage
	Set dPage = new OrderDetail 'Dashboard (orderDetail Page)
	
	sPage.initPage "AOE","AOE"	

	sPage.setWebEdit "we_AccountSearchBox", Trim(DICT_TestCase.Item("AccountNumber"))
	If sPage.valEleExist("Edit","we_AccountSearchBox") Then		
		set WshShell = CreateObject("WScript.Shell")		
		Browser("AOE").Page("AOE").WebEdit("we_AccountSearchBox").Click	
		WshShell.SendKeys "{ENTER}"'Added for New App
		WshShell.SendKeys "{ENTER}"
		wait 2
	End If
	sPage.wait4Element "Element","we_Client_View",100000
	sPage.wait4Element "Element","we_OrderTicket",100000
	sPage.clickWebElement "we_OrderTicket"
'	sPage.wait4Element "Link", "ln_NewOrderEntry", 100000
'	sPage.clickLink "ln_NewOrderEntry"	
	sPage.wait4Element "Element","we_OrdEntryScreen", 100000
	
	oPage.init_strgyPage DICT_TestCase, 0
	oPage.fillOrder(0)
	'oPage.fillOrder(1)
	oPage.ValidatePageFields(0)
	oPage.ValidatePassiveScreen(0)
	
End Function



Function SimpleOrder_Fill(ByRef DICT_TestCase)
		
	Set sPage = new preparePage	
	Set oPage = new SingleOrderTicketPage 'Object to fill the first Order
	Set pPage = new SingleOrderPreviewPage
	Set cPage = new SingleOrderConfirmationPage
	Set dPage = new OrderDetail 'Dashboard (orderDetail Page)
	
	sPage.initPage "AOE","AOE"		
	sPage.setWebEdit "we_AccountSearchBox", Trim(DICT_TestCase.Item("AccountNumber"))
	
	'*** Temp code for New App ***

	If sPage.valEleExist("Edit","we_AccountSearchBox") Then		
		set WshShell = CreateObject("WScript.Shell")		
		Browser("AOE").Page("AOE").WebEdit("we_AccountSearchBox").Click	
		WshShell.SendKeys "{ENTER}"'Added for New App
		WshShell.SendKeys "{ENTER}"
		wait 2
	End If
    
'	Set oDesc=Description.Create
'	oDesc("micclass").Value= "WebTable"
'	oDesc("html tag").Value= "TABLE"
'	oDesc("html id").Value= "td-aoe-order-list-table-results"
'	Set oObjCol=Browser("AOE").Page("AOE").ChildObjects(oDesc)
'	
'	Set oObjCol1 = oObjCol(0).ChildItem(2,1,"WebTable",0)
'	x = oObjCol1.GetCellData(1,3)        
'	msgbox "count: " & x

	
	sPage.wait4Element "Link", "ln_NewOrderEntry", 10000
	sPage.clickLink "ln_NewOrderEntry"	
	sPage.wait4Element "Element","we_OrdEntryScreen", 10000
	
	oPage.init_ordTckPage DICT_TestCase, 0
	'oPage.init_equityPage DICT_TestCase, 0
	oPage.fillOrder()
	pPage.init_PreviewPage oPage,"AOE","AOE"	
	pPage.ValidatePreviewScreen 
	pPage.ValidatePreviewScript()	
	cPage.init_confPage oPage,pPage,"AOE","AOE"
	cPage.ValidateConfirmationTable
	cPage.ValidateConfirmationScript
	'dPage.init_OrderDetailPage cPage,pPage,"AOE","AOE"
	'dPage.ValidateOrderDetails


End Function



Function SingleOrder_Options(ByRef DICT_TestCase)
		
	Set sPage = new preparePage	
	Set oPage = new SingleOrderTicketPage 'Object to fill the first Order
	Set pPage = new SingleOrderPreviewPage
	Set cPage = new SingleOrderConfirmationPage
	Set dPage = new OrderDetail 'Dashboard (orderDetail Page)
	
	sPage.initPage "AOE","AOE"	

	sPage.setWebEdit "we_AccountSearchBox", Trim(DICT_TestCase.Item("AccountNumber"))
	If sPage.valEleExist("Edit","we_AccountSearchBox") Then		
		set WshShell = CreateObject("WScript.Shell")		
		Browser("AOE").Page("AOE").WebEdit("we_AccountSearchBox").Click	
		WshShell.SendKeys "{ENTER}"'Added for New App
		WshShell.SendKeys "{ENTER}"
		wait 2
	End If

	sPage.wait4Element "Element","we_OrderTicket",100000
	sPage.clickWebElement "we_OrderTicket"
'	sPage.wait4Element "Link", "ln_NewOrderEntry", 100000
'	sPage.clickLink "ln_NewOrderEntry"	
	sPage.wait4Element "Element","we_OrdEntryScreen", 100000
	
	oPage.init_ordTckPage DICT_TestCase, 0
	'oPage.ValidatePageFields
	oPage.fillOrder()
	
	pPage.init_PreviewPage oPage,"AOE","AOE"	
	pPage.ValidatePreviewScreen 
	'pPage.ValidatePreviewScript()	
	cPage.init_confPage oPage,pPage,"AOE","AOE"
	cPage.ValidateConfirmationTable
	cPage.ValidateConfirmationScript
	dPage.init_OrderDetailPage cPage,pPage,"AOE","AOE"
	dPage.ValidateOrderDetails
	
End Function

'For row =2 to  oObjCol(0).GetROProperty("rows")
'
'
'	If oObjCol(0).ChildItem(row,1,"WebTable",0).GetCellData(1,5) = orderno Then
'		oObjCol(0).ChildItem(row,1,"WebTable",0).ChildItem(1,5,"WebElement",0).Click
'	End IF



'************ Class for Complex order - Preview Page *******************

Class ComplexOrder_PreviewPage
 	'cCmplxOrdTyp
	Private obj4OrdTicketPage, obj4PrevwPage,PreviewScreenError1,PreviewScreenError2
	Public GetAccountType, SymDescription(),SymName(),ExpMonth(),ExpDate(),prvChange_GTDSingleDigit,Warning_Msg,PrevwTotal(),nOrderNumber
	Public Sub init_PreviewPage(ByRef oOrdTckPage, ByVal BrowserName,ByVal PageName)
		Set obj4OrdTicketPage = oOrdTckPage
		Set obj4PrevwPage = new preparePage
		obj4PrevwPage.initPage BrowserName,PageName
		obj4PrevwPage.wait4Element "Button","we_BackButton",30000
			If obj4PrevwPage.valEleExist("Button","we_BackButton") Then
				print "Preview Page Displayed"
			Else
				print "Preview Page NOT Displayed"	
				ReportStatus "Fail","Preview Page - NOT Displayed","Preview Page NOT Displayed"
				ExitTest
			End If
	End Sub
	
	Public Sub CheckErrorMsgsOnPreviewPage(NumberOfCOrders)	'NumberOfCOrders=2 - two orders, 3= three orders
	
		'//Intialize error messages' variables
		PreviewScreenError1=""
		PreviewScreenError2=""
		Dim InddexTotal()
		'CheckErrorMsgsOnPreviewPage=False
		NumberOfCOrders=CInt(NumberOfCOrders)
		ReDim InddexTotal(NumberOfCOrders) 
		
		'Handle the code for more than two complex orders
		'ReportStatus "Fail","Preview Page ","Number of complex orders passed to the function CheckErrorMsgsOnPreviewPage must be 2 only.Exiting Test"	
		'ExitTest
		'obj4PrevwPage.wait4Element "Element","we_OrdPriviewScreen",30000
		
		If NumberOfCOrders=2 Then			
			'If obj4PrevwPage.clickWebElement("we_OrdTkt_PreviewExpand_"&(NumberOfCOrders-1))Then
			'Added June 9
			obj4PrevwPage.wait4Element_NoReport "Element","we_OrdTkt_PreviewExpand_"&(NumberOfCOrders-1),30000
			obj4PrevwPage.clickWebElement "we_OrdTkt_PreviewExpand_"&(NumberOfCOrders-1)
			wait 1
			If obj4PrevwPage.getEProperty("Element","we_PreviewSymDesc_1","height")=>0 Then				
			
					PreviewScreenError1=obj4PrevwPage.valEleExist_NoReport("Element","we_OrdTkt_ErrMsg_"&Lbound(InddexTotal))
					PreviewScreenError2=obj4PrevwPage.valEleExist_NoReport("Element","we_OrdTkt_ErrMsg_"&Lbound(InddexTotal)+1)
					
					If  PreviewScreenError1 = True Then
						ReportStatus "Fail","Preview Page - Error","Error is displayed in Preview Page Order1 " &vbcrlf &obj4PrevwPage.getEProperty("Element","we_OrdTkt_PreviewErrDetail_"&Lbound(InddexTotal),"outertext") 
					 	'CheckErrorMsgsOnPreviewPage = True
					 	ExitTest
					ElseIf PreviewScreenError2 = True Then			
						ReportStatus "Fail","Preview Page - Error","Error is displayed in Preview Page Order2 " &vbcrlf &obj4PrevwPage.getEProperty("Element","we_OrdTkt_PreviewErrDetail_"&Lbound(InddexTotal)+1,"outertext") 
					 	'CheckErrorMsgsOnPreviewPage = True
					 	ExitTest
					 	
					Else
						ReportStatus "Pass","Preview Page - No Error","No Errors displayed in Preview Page."
					End If 
			Else
				ReportStatus "Fail","Preview Page-Expansion Button Order2","Element not found on Preview Page.Can not validate screen-Exiting Test"
				ExitTest
			End If
		ElseIf NumberOfCOrders=3 Then
			'//Handle 3 messages here
		Else
			ReportStatus "Fail","Preview Page-Expansion Button","Function CheckErrorMsgsOnPreviewPage -Handles only 2 or 3 orders only -Update it for other value-Exiting Test"
			ExitTest
		End If
			
	End Sub
	
	Public Sub ValidatePreviewScreen
	
	
		Set oPreviewScreen = new ValidatePage		
		oPreviewScreen.initValidatePage "AOE","AOE","Preview-Equity"
		
		'//Verify preview headers
		VerifyPreviewScreen 0
		VerifyPreviewScreen 1
		
			
			Print "Preview screen header validation completed"
			
			 If obj4OrdTicketPage.Agent = "PIA" Then
			 	If obj4PrevwPage.valEleExist_NoReport("Element","we_OrdPreviewScript") = True Then			 	
			 		ReportStatus "Fail", "PreviewScript" , "Preview Script Should not be displayed for PIA Agent"
			 	End If		 	
			 ElseIf obj4OrdTicketPage.Agent = "DI" Then
				 If obj4PrevwPage.valEleExist ("Element","we_OrdPreviewScript") = True Then
				 		ValidatePreviewScript()
				 Else
				 	ReportStatus "Fail", "PreviewScript" , "Preview Script Element NOT found for DI Agent"
				 End If
			 End If		

End Sub

Public Sub VerifyPreviewScreen(nOrderNumber) 'nOrderNumber=0 first order,1 - second order
	
	
	me.nOrderNumber=CInt(nOrderNumber)
	Set oPreviewScreen = new ValidatePage
		Print "Validating Preview screen for Order: "&nOrderNumber+1
		oPreviewScreen.initValidatePage "AOE","AOE","Preview-Equity"
		
		ReDim Preserve PrevwTotal(nOrderNumber)
		ReDim Preserve SymDescription(nOrderNumber)
		ReDim Preserve SymName(nOrderNumber)
		
		
		
		If CInt(obj4OrdTicketPage.cNumOfOrders)=2 Then
			If Ubound(obj4OrdTicketPage.Limit_Price)<1 And nOrderNumber=1 Then
				LimitPrice=obj4OrdTicketPage.Limit_Price(nOrderNumber-1)
			Else
				LimitPrice=obj4OrdTicketPage.Limit_Price(nOrderNumber)
			End If
			
			If Ubound(obj4OrdTicketPage.Trigger_Price)<1 And nOrderNumber=1 Then
				TriggerPrice=obj4OrdTicketPage.Trigger_Price(nOrderNumber-1)
			Else
				TriggerPrice=obj4OrdTicketPage.Trigger_Price(nOrderNumber)
			End If
						
			If Ubound(obj4OrdTicketPage.Trigger_Delta)<1 And nOrderNumber=1 Then
				TriggerDelta=obj4OrdTicketPage.Trigger_Delta(nOrderNumber-1)
			Else
				TriggerDelta=obj4OrdTicketPage.Trigger_Delta(nOrderNumber)
			End If
			
			If Ubound(obj4OrdTicketPage.Limit_Delta)<1 And nOrderNumber=1 Then
				LimitDelta=obj4OrdTicketPage.Limit_Delta(nOrderNumber-1)
			Else
				LimitDelta=obj4OrdTicketPage.Limit_Delta(nOrderNumber)
			End If
			
		End If
		
	With oPreviewScreen	

				
			'obj4PrevwPage.wait4Element "Element","we_OrdPriviewScreen",30000
			.addValidateField "we_PreviewAction_"&nOrderNumber,"Element","outertext", "Action "&obj4OrdTicketPage.cAction(nOrderNumber)		
			.addValidateField "we_PreviewQuant_"&nOrderNumber,"Element","outertext","Quantity "&Formatnumber(obj4OrdTicketPage.cQuantity(nOrderNumber),0,False,False,True)
			Select Case obj4OrdTicketPage.cOrderType(nOrderNumber)
				Case "Market"
					.addValidateField "we_PreviewPrice_"&nOrderNumber,"Element","outertext","Price Market"	
				Case "Limit"
					.addValidateField "we_PreviewPrice_"&nOrderNumber,"Element","outertext","Price Limit Limit Price: $"&Formatnumber(LimitPrice,2,True,False,False)	
							
				Case "Stop Market"
					.addValidateField "we_PreviewPrice_"&nOrderNumber,"Element","outertext","Price Stop Market Trigger Price: $"&Formatnumber(TriggerPrice,2,True,False,False)	
							
				Case "Stop Limit"
					.addValidateField "we_PreviewPrice_"&nOrderNumber,"Element","outertext","Price Stop Limit Trigger Price: $"&Formatnumber(TriggerPrice,2,True,False,False)&" Stop Limit: $"&Formatnumber(LimitPrice,2,False,False,False)
						    
				Case "Trailing Stop"
					 .addValidateField "we_PreviewPrice_"&nOrderNumber,"Element","outertext","Price Trailing Stop Trigger Delta: $"&Formatnumber(TriggerDelta,2,True,False,False)
'					If obj4PrevwPage.valEleExist_NoReport("Element","we_PreviewPrice_"&nOrderNumber) = True Then			 	
'			 			actPrice=obj4PrevwPage.getEProperty("Element","we_PreviewPrice_"&nOrderNumber,"outertext")			 			
'			 			expPrice="Price Trailing Stop Trigger Delta: $"&Formatnumber(obj4OrdTicketPage.Trigger_Delta(nOrderNumber),2,True,False,False)
'			 			If StrComp(Trim(actPrice),Trim(expPrice),1)=0 Then
'			 				ReportStatus "Pass", "PriceOnPreviewPage" , "Expected Price: "&Trim(expPrice)&" Actual Price: "&Trim(actPrice)
'			 			Else
'			 				ReportStatus "Fail", "PriceOnPreviewPage" , "Expected Price: "&Trim(expPrice)&" Actual Price: "&Trim(actPrice)
'			 			End If
'			 		Else
'			 			ReportStatus "Fail", "PriceOnPreviewPage" , "Price element not found for order: "&nOrderNumber
'			 		End If	
					
				Case "Trailing Stop Limit"
					 .addValidateField "we_PreviewPrice_"&nOrderNumber,"Element","outertext","Price Trailing Stop Limit Trigger Delta: $"&Formatnumber(TriggerDelta,2,True,False,False)&" Limit Delta: $"&Formatnumber(LimitDelta,2,False,False,False)
							
			End Select
		'Good Till Validation	
			Select Case obj4OrdTicketPage.cGoodTill(nOrderNumber)
				Case "Day"
					.addValidateField "we_PreviewGood'till_"&nOrderNumber,"Element","outertext","Good 'til Day"	
				Case "GTC"
					.addValidateField "we_PreviewGood'till_"&nOrderNumber,"Element","outertext","Good 'til GTC"	
				Case "GTD"
					.addValidateField "we_PreviewGood'till_"&nOrderNumber,"Element","outertext","Good 'til "&obj4OrdTicketPage.prv_GoodTillDate(nOrderNumber)
				
			End Select	
			
	
	'''********* Est Trade Value 	
			strEstTrade=obj4PrevwPage.getEProperty ("Element","we_OrdTkt_Preview_EstTrade_"&nOrderNumber,"outertext")
			strEstComm=obj4PrevwPage.getEProperty ("Element","we_OrdTkt_Preview_EstCommission_"&nOrderNumber,"outertext")
			strEstTotal=obj4PrevwPage.getEProperty ("Element","we_OrdTkt_Preview_EstTotal_"&nOrderNumber,"outertext")
			
			If obj4OrdTicketPage.m_Functionality = "Place" or obj4OrdTicketPage.m_Functionality = "Change" Then
				If obj4OrdTicketPage.PrincipalValue(nOrderNumber) = "N/A" or obj4OrdTicketPage.PrincipalValue(nOrderNumber) = ""  Then
					ReportStatus "Warning","EstTradeValue_"&nOrderNumber, "There is no value to compare against the Order Entry page-For order: "&nOrderNumber+1			
				Else
					'.addValidateField "we_OrdTkt_Preview_EstTrade_"&nOrderNumber,"Element","outertext","Est Trade Value "&obj4OrdTicketPage.PrincipalValue(nOrderNumber)
					VerifyPreviewPgEstValues "we_OrdTkt_Preview_EstTrade_"&nOrderNumber,"Est Trade Value "&obj4OrdTicketPage.PrincipalValue(nOrderNumber),strEstTrade
				End If
			ElseIf obj4OrdTicketPage.m_Functionality = "Cancel" and obj4OrdTicketPage.Agent = "DI" Then	
				If instr(obj4OrdTicketPage.PrincipalValue(nOrderNumber),"U")>0 Then
				   .addValidateField "we_OrdTkt_Preview_EstTrade_"&nOrderNumber,"Element","outertext","Est Trade Value "& "$0.00 U"	
				ElseIf instr(obj4OrdTicketPage.PrincipalValue(nOrderNumber),"C")>0 Then
				   .addValidateField "we_OrdTkt_Preview_EstTrade_"&nOrderNumber,"Element","outertext","Est Trade Value "& "$0.00 C"
				Else
					.addValidateField "we_OrdTkt_Preview_EstTrade_"&nOrderNumber,"Element","outertext","Est Trade Value "& "$0.00"				
				End If
			ElseIf obj4OrdTicketPage.m_Functionality = "Cancel" and obj4OrdTicketPage.Agent = "PIA" Then	
				If obj4OrdTicketPage.PrincipalValue(nOrderNumber) = "N/A" or obj4OrdTicketPage.PrincipalValue(nOrderNumber) = ""  Then
				ReportStatus "Warning","EstTradeValue", "There is no value to compare against the Order Entry page-For order1"			
				Else
					'.addValidateField "we_OrdTkt_Preview_EstTrade_"&nOrderNumber,"Element","outertext","Est Trade Value "&obj4OrdTicketPage.PrincipalValue(nOrderNumber)
					VerifyPreviewPgEstValues "we_OrdTkt_Preview_EstTrade_"&nOrderNumber,"Est Trade Value "&obj4OrdTicketPage.PrincipalValue(nOrderNumber),strEstTrade
				End If
			End If		

			If obj4OrdTicketPage.EstCommissionValue(nOrderNumber) = "N/A" or obj4OrdTicketPage.EstCommissionValue(nOrderNumber) = ""  Then	
				ReportStatus "Warning","EstCommissionValue", "There is no value to compare against the Order Entry page-For order:"&nOrderNumber		
			Else
				'.addValidateField "we_OrdTkt_Preview_EstCommission_"&nOrderNumber,"Element","outertext","Est Commissions "&obj4OrdTicketPage.EstCommissionValue(nOrderNumber)
				VerifyPreviewPgEstValues "we_OrdTkt_Preview_EstCommission_"&nOrderNumber,"Est Commissions "&obj4OrdTicketPage.EstCommissionValue(nOrderNumber),strEstComm
			End If	
			
			'Est Total Value 
	'Enable once the Defect 4778 is fixed		
			'-----------------
			 'PrevwTotal(nOrderNumber) = CalculatePreviewTotalValue(obj4PrevwPage.getEProperty ("Element","we_OrdTkt_Preview_EstTrade_"&nOrderNumber,"outertext"),obj4PrevwPage.getEProperty ("Element","we_OrdTkt_Preview_EstCommission_"&nOrderNumber,"outertext"))
			'.addValidateField "we_OrdTkt_Preview_EstTotal_"&nOrderNumber,"Element","outertext","Est Total Value "&PrevwTotal(nOrderNumber)	
			'-----------------
			
			 
	'GetSymbolValues
			 
			SymDescription(nOrderNumber) = Trim(obj4PrevwPage.getEProperty ("Element","we_PreviewSymDesc_"&nOrderNumber,"innertext") )	
			If Left(Trim(SymDescription(nOrderNumber)),1) = "-" Then
				SymDescription(nOrderNumber)=Trim(Right(Trim(SymDescription(nOrderNumber)),len(Trim(SymDescription(nOrderNumber)))-1))
			End If
			'.addValidateField  "we_PreviewSymDesc_"&nOrderNumber,"Element","innertext","- " & obj4OrdTicketPage.m_SymbolDesc(nOrderNumber)
			.addValidateField  "we_PreviewSymDesc_"&nOrderNumber,"Element","innertext", obj4OrdTicketPage.m_SymbolDesc(nOrderNumber)
			
			SymName(nOrderNumber) = Trim(obj4PrevwPage.getEProperty ("Element","we_PreviewSymbol_"&nOrderNumber,"innertext") )	
			
			If obj4OrdTicketPage.SecurityType(nOrderNumber) = "Equity" Then  
				.addValidateField  "we_PreviewSymbol_"&nOrderNumber,"Element","innertext",obj4OrdTicketPage.m_SymbolName(nOrderNumber)
			Else
				.addValidateField  "we_PreviewSymbol_"&nOrderNumber,"Element","innertext",obj4OrdTicketPage.SymName_Options(nOrderNumber)		
			End If
				
			
	'FX Rate 
			sFXRate1=Split(Trim(obj4PrevwPage.getEProperty ("Element","we_PreviewFXRate_"&nOrderNumber,"innertext") ),"FX Rate")
			
			
			If obj4OrdTicketPage.cFXRate(nOrderNumber)="" Then
				sFXRate="N/A"
			Else 
				sFXRate2=FormatNumber(Trim(obj4OrdTicketPage.cFXRate(nOrderNumber)),4,-1,-1,-1)
				sFXRate=Cstr(sFXRate2)
			End If
			
			If StrComp(Trim(Cstr(sFXRate1(1))),Trim(Cstr(sFXRate)),1)=0 Then
				ReportStatus "Pass","PreviewPageFX Rate", "FX Rate is displayed "&Cstr(sFXRate1(0))&" as expected-For order:"&nOrderNumber	
			Else
				ReportStatus "Fail","PreviewPageFX Rate", "FX Rate displayed "&Cstr(sFXRate1(0))&" is NOT as expected-For order:"&nOrderNumber
			End If
			
	'Significant shareholder Indicator
			strShareHolder=""
			strShareHolder=obj4PrevwPage.getEProperty("Element","we_PreviewSigShareHolder_"&nOrderNumber,"outertext")
			If obj4OrdTicketPage.ShareHolderStatus(nOrderNumber)="Insider" OR obj4OrdTicketPage.ShareHolderStatus(nOrderNumber)="Significant" Then
				'.addValidateField  "we_PreviewSigShareHolder_"&nOrderNumber,"Element","innertext",obj4OrdTicketPage.ShareHolderStatus(nOrderNumber)
				If Instr(1,strShareHolder,obj4OrdTicketPage.ShareHolderStatus(nOrderNumber),1)>0 Then
					ReportStatus "Pass","PreviewPageShareholderStatus", "Entered shareholder status is: "&obj4OrdTicketPage.ShareHolderStatus(nOrderNumber)&" and displayed as expected-For order:"&nOrderNumber
				Else
					ReportStatus "Fail","PreviewPageShareholderStatus", "Entered shareholder status is: "&obj4OrdTicketPage.ShareHolderStatus(nOrderNumber)&" and displayed as: "&strShareHolder&" For order:"&nOrderNumber
				End If
			ElseIf obj4OrdTicketPage.ShareHolderStatus(nOrderNumber)="None" And (Instr(1,strShareHolder,obj4OrdTicketPage.ShareHolderStatus(nOrderNumber),1)>0 Or Instr(1,strShareHolder,"Significant",1)>0 Or Instr(1,strShareHolder,"Insider",1)>0  ) Then
					ReportStatus "Fail","PreviewPageShareholderStatus", "Entered shareholder status is: "&obj4OrdTicketPage.ShareHolderStatus(nOrderNumber)&" But displayed as: "&strShareHolder&" For order:"&nOrderNumber
			Else
					ReportStatus "Pass","PreviewPageShareholderStatus", "Entered shareholder status is: "&obj4OrdTicketPage.ShareHolderStatus(nOrderNumber)&" and it is NOT displayed as expected-For order:"&nOrderNumber
			End If	
	
			
	'AM Indicator 
			'.addValidateField  "we_PreviewAMInd_"&nOrderNumber,"Element","innertext",obj4OrdTicketPage.AMIndicator	
			strAMIndicator=""					
			
			
			If obj4OrdTicketPage.AM_Indicator=True Then
				strAMIndicator=obj4PrevwPage.getEProperty("Element","we_PreviewAMInd_"&nOrderNumber,"outertext")
				If Instr(1,strAMIndicator,"AM",1)>0 Then
					ReportStatus "Pass","PreviewPageAMIndicator", "AM Indicator is displayed as expected-For order:"&nOrderNumber
				Else
					ReportStatus "Fail","PreviewPageAMIndicator", "AM Indicator is NOT displayed-For order:"&nOrderNumber
				End If
			End If
		
	'Solicited/Unsolicited SolicitIndicator -//to learn the object
'			If obj4OrdTicketPage.Agent = "PIA" Then
'				.addValidateField  "we_Preview_Solicited_"&nOrderNumber,"Element","innertext",obj4OrdTicketPage.SolicitIndicator
'			End If
			.ValidatePageFields

		End With
		
	End Sub

'Added June 8
	Public Sub VerifyPreviewPgEstValues(strFieldName,strExpValue,strActValue)			
				If StrComp(Trim(strExpValue),Trim(strActValue),1)=0 Then					
					ReportStatus "Pass",strFieldName, "Expected value is: "&strExpValue & vbcrlf &" Actual Value is: "&strActValue&"For order:"&nOrderNumber	
				Else
					ReportStatus "Warning",strFieldName, "Expected value is: "&strExpValue & vbcrlf &" Actual Value is: "&strActValue&"For order:"&nOrderNumber					
				End If
			End Sub
			
	Public Sub ClickAgreeButton()
		
		'*** Click the Disclosure Checkbox displayed for PIa agent ***
		If obj4OrdTicketPage.Agent = "PIA" Then
			obj4PrevwPage.clickWebElement("we_Pretrade_Disclosure")
		End If		
	
		If NOT (obj4PrevwPage.valEleExist_NoReport ("Element","we_OrdTkt_WarnMsg_0")) OR NOT (obj4PrevwPage.valEleExist_NoReport ("Element","we_OrdTkt_WarnMsg_1")) Then
			Print "Click SendOrder button"
			obj4PrevwPage.clickWebButton "wb_SendOrder"				
		ElseIf obj4PrevwPage.valEleExist_NoReport ("Button","wb_OrdTkt_Agree") Then
			print "Click Agree button"
			obj4PrevwPage.clickWebButton "wb_OrdTkt_Agree"
		ElseIf obj4PrevwPage.valEleExist_NoReport ("Button","wb_SendOrder") Then
			Print "Click SendOrder button"
			obj4PrevwPage.clickWebButton "wb_SendOrder"
		Else
			Reportstatus "Fail","Agree and Send Button","Agree and Send Button is Not availbale in the Preview page to Proceed further"	
			ExitTest
		End If
		
		If obj4PrevwPage.valEleExist_NoReport ("Element","we_SendOrder_Err") = True Then
			Count = 0
			Do
				Count = Count+1
					If Count > 2 Then
						Exit Do
					End If
				Wait 2
					If NOT (obj4PrevwPage.valEleExist_NoReport ("Element","we_OrdTkt_WarnMsg_0")) OR NOT (obj4PrevwPage.valEleExist_NoReport ("Element","we_OrdTkt_WarnMsg_1")) Then
						obj4PrevwPage.clickWebButton "wb_SendOrder"		
					ElseIf obj4PrevwPage.valEleExist_NoReport ("Button","wb_OrdTkt_Agree") Then
						obj4PrevwPage.clickWebButton "wb_OrdTkt_Agree"
					ElseIf obj4PrevwPage.valEleExist_NoReport ("Button","wb_SendOrder") Then
						obj4PrevwPage.clickWebButton "wb_SendOrder"
					End If	
			Loop while obj4PrevwPage.valEleExist_NoReport ("Element","we_SendOrder_Err")
		
			Reportstatus "Fail","Error in Preview PAge","Error" & obj4PrevwPage.getEProperty("Element","we_SendOrder_Err","innertext")
			ExitTest	
		End If
	End Sub


	Public Function CalculatePreviewTotalValue(ActualEstTrade,ActualEstComm)
		Wait 5
		Print "Calculating Total Value"
		'PreviewTradeValue = obj4PrevwPage.getEProperty ("Element","we_OrdTkt_Preview_EstTrade","outertext")
		PreviewTradeValue = ActualEstTrade
		PreviewTradeValue_1 = Right(PreviewTradeValue,(len(PreviewTradeValue)-17))
		
		'PreviewCommissionvalue = obj4PrevwPage.getEProperty ("Element","we_OrdTkt_Preview_EstCommission","outertext")
		PreviewCommissionvalue = ActualEstComm
		PreviewCommissionvalue_1 = Right(PreviewCommissionvalue,(len(PreviewCommissionvalue)-17))
		
		If (instr(PreviewTradeValue_1,"U")>0) or (instr(PreviewCommissionvalue_1,"U") > 0)Then
			PreviewTradeValue_2 = CDbl(Trim(Replace(PreviewTradeValue_1,"U","")))
			PreviewCommissionvalue_2 = CDbl(Trim(Replace(PreviewCommissionvalue_1,"U","")))
			
		ElseIf instr(PreviewTradeValue_1,"C")>0 or (instr(PreviewCommissionvalue_1,"C") > 0)Then
			PreviewTradeValue_2 = CDbl(Trim(Replace(PreviewTradeValue_1,"C","")))
			PreviewCommissionvalue_2 = CDbl(Trim(Replace(PreviewCommissionvalue_1,"C","")))
		Else
			PreviewTradeValue_2 = CDbl(Trim(PreviewTradeValue_1))
			PreviewCommissionvalue_2 = CDbl(Trim(PreviewCommissionvalue_1))
		End If
		
		If obj4OrdTicketPage.cAction(me.nOrderNumber) = "Buy" or obj4OrdTicketPage.cAction(me.nOrderNumber) = "Buy to Cover" or obj4OrdTicketPage.cAction(me.nOrderNumber) = "Buy to Close" or obj4OrdTicketPage.cAction(me.nOrderNumber) = "Buy to Open" Then
			CalculatePreviewTotalValue1 = PreviewTradeValue_2 + PreviewCommissionvalue_2
		Else
			CalculatePreviewTotalValue1 = PreviewTradeValue_2 - PreviewCommissionvalue_2		
		End If		
		
		If (instr(PreviewTradeValue_1,"U")>0) or (instr(PreviewCommissionvalue_1,"U") > 0)Then		
			CalculatePreviewTotalValue = Formatnumber(CalculatePreviewTotalValue1,2,True,False,True)			
			CalculatePreviewTotalValue = ConvertNegativeNumFormat(CalculatePreviewTotalValue)			
			CalculatePreviewTotalValue = CalculatePreviewTotalValue&" U"			
			'CalculatePreviewTotalValue = Formatnumber(CalculatePreviewTotalValue1,2,True,True,True)&" U"
		ElseIf (instr(PreviewTradeValue_1,"C")>0) or (instr(PreviewCommissionvalue_1,"C") > 0)Then
			CalculatePreviewTotalValue = Formatnumber(CalculatePreviewTotalValue1,2,True,False,True)			
			CalculatePreviewTotalValue = ConvertNegativeNumFormat(CalculatePreviewTotalValue)			
			CalculatePreviewTotalValue = CalculatePreviewTotalValue&" C"		
		Else 
			CalculatePreviewTotalValue = Formatnumber(CalculatePreviewTotalValue1,2,True,False,True)			
			CalculatePreviewTotalValue = ConvertNegativeNumFormat(CalculatePreviewTotalValue)			
			CalculatePreviewTotalValue = CalculatePreviewTotalValue
		End If

	End Function
	
	Public Sub ValidatePreviewScript
		
		ExpectedScript1 = FormatPreviewScript(0) 'For order1
		ExpectedScript2 = FormatPreviewScript(1) ' for order2
		ExpectedScript = Trim (ExpectedScript1) & ExpectedScript2
		
		Print "Expected Script is created and ready for validation"		
'		Set oPreviewScript = new ValidatePage
'		With oPreviewScript
'			.initValidatePage "AOE","AOE","PreviewScript-Equity"
			Print "Validating Preview Script"
			sActualScript=obj4PrevwPage.getEProperty("Element","we_OrdPreviewScript","innertext")
			If sActualScript=vbnullstring Then
				Reportstatus "Fail","PreviewScriptValidation","Preview script element is not found"
			Else
				sActualScript=Trim(Replace(Replace(Trim(sActualScript),Chr(13),vbnullstring),Chr(10),vbnullstring))		
			End If
		 
		 	If StrComp(Trim(ExpectedScript),sActualScript,1)=0 Then
		 		Reportstatus "Pass","PreviewScriptValidation","Expectedscript: "&Trim(ExpectedScript)& vbcrlf &" ActualScript: "&sActualScript
		 	Else
		 		Reportstatus "Fail","PreviewScriptValidation","Expectedscript: "&Trim(ExpectedScript)& vbcrlf &" ActualScript: "&sActualScript
		 	End If 
		  ' .addValidateField "we_OrdPreviewScript","Element","innertext",Trim(ExpectedScript)
		    '.ValidatePageFields
		    Print "Preview Script Validation Completed"
			
		
	End Sub	

	
	Public Function FormatPreviewScript(nOrderNumber)
	
	Dim ExpScriptFinal: ExpScriptFinal=""
	Dim ExpScript: ExpScriptFinal=""
	ReDim Preserve ExpMonth(nOrderNumber)
	ReDim Preserve ExpDate(nOrderNumber)
	'Dim orderType(),Price(),MarketDesc(),GoodTillDesc,CommValue
	nOrderNumber=CInt(nOrderNumber)
		Print "Formating Preview Script for order: "&nOrderNumber
		GetAccountType = Split(obj4OrdTicketPage.SelectedAccount, "-")
		AccountType = Trim(GetAccountType(1))
'OrderType			
		Select Case obj4OrdTicketPage.m_Functionality
		Case "Place"
			If obj4OrdTicketPage.cOrderType(nOrderNumber) = "Stop Limit" or obj4OrdTicketPage.cOrderType(nOrderNumber) = "Stop Market"  Then
				orderType = " a Stop"
			ElseIf obj4OrdTicketPage.cOrderType(nOrderNumber) = "Limit" or obj4OrdTicketPage.cOrderType(nOrderNumber) = "Market" Then
				orderType = " an"	
			Else
				orderType =	" a "&obj4OrdTicketPage.cOrderType(nOrderNumber)	
			End If
		Case "Change", "Cancel"
			If obj4OrdTicketPage.cOrderType(nOrderNumber) = "Stop Limit" or obj4OrdTicketPage.cOrderType(nOrderNumber) = "Stop Market"  Then
				orderType = " Stop"
			ElseIf obj4OrdTicketPage.cOrderType(nOrderNumber) = "Limit" or obj4OrdTicketPage.cOrderType(nOrderNumber) = "Market" Then
				orderType = ""	
			Else
				orderType = " " & obj4OrdTicketPage.cOrderType(nOrderNumber)
			End If		
			
	End Select
'	
'Price	
		Select Case obj4OrdTicketPage.cOrderType(nOrderNumber)		
			Case "Market"
				Price = "at Market"
			Case "Limit"
				Price = "at $"&Formatnumber(obj4OrdTicketPage.Limit_Price(nOrderNumber),2,False,False,False)
						
			Case "Stop Market"
				Price = "with a Trigger price of $"&Formatnumber(obj4OrdTicketPage.Trigger_Price(nOrderNumber),2,False,False,False)	
						
			Case "Stop Limit"
				Price = "with a Trigger price of $"&Formatnumber(obj4OrdTicketPage.Trigger_Price(nOrderNumber),2,False,False,False)& " and a Stop Limit of $"&Formatnumber(obj4OrdTicketPage.Limit_Price(nOrderNumber),2,False,False,False)
					    
			Case "Trailing Stop"
				 Price =  "with a Delta of $"&Formatnumber(obj4OrdTicketPage.Trigger_Delta(nOrderNumber),2,False,False,False)
						
			Case "Trailing Stop Limit"
				 Price = "with a Delta of $"&Formatnumber(obj4OrdTicketPage.Trigger_Delta(nOrderNumber),2,False,False,False)&" and a Delta Limit of $"&Formatnumber(obj4OrdTicketPage.Limit_Delta(nOrderNumber),2,False,False,False)
			
		End Select
		
		
'Market	
		Market = Trim(Right(obj4OrdTicketPage.cSymbol(nOrderNumber),2))
		Select Case Market
			Case "US","us"
			MarketDesc = "on the U.S. Market"
			Case "CA","ca"
			MarketDesc = "on the Canadian Market"				
		End Select
'	
'Good Till	
		Select Case obj4OrdTicketPage.cGoodTill(nOrderNumber)
			Case "Day"
				GoodTillDesc = " This order is a day order."
			Case "GTC"
				GoodTillDesc = " This order is good until cancelled."
			Case "GTD"
				GoodTillDesc = " This order is good until "&obj4OrdTicketPage.prv_GoodTillDate(nOrderNumber)&"."
		End Select 		


		
'commission calc- for order1
		PreviewCommissionvalue = obj4PrevwPage.getEProperty ("Element","we_OrdTkt_Preview_EstCommission_"&nOrderNumber,"outertext")
		Commissionvalue = Trim(Right(PreviewCommissionvalue,(len(PreviewCommissionvalue)-16)))
		
		If (instr(Commissionvalue,"U")>0) Then
			CommValue = Trim(Replace(Commissionvalue,"U",""))
		ElseIf (instr(Commissionvalue,"C") > 0) Then	
			CommValue = Trim(Replace(Commissionvalue,"C",""))
		Else
			CommValue = Commissionvalue
		End If	
'		
		
'Fees and Taxes
		If Market = "US" and (obj4OrdTicketPage.cAction(nOrderNumber) = "Sell" or obj4OrdTicketPage.cAction(nOrderNumber) = "Short Sell" or obj4OrdTicketPage.cAction(nOrderNumber) = "Sell to Open" or obj4OrdTicketPage.cAction(nOrderNumber) = "Sell to Close" or obj4OrdTicketPage.cAction(nOrderNumber) = "Sell to Open Covered" or obj4OrdTicketPage.cAction(nOrderNumber) = "Sell to Open Un-Covered") Then
			FeeandTax = " Other regulatory fees and taxes might be applicable."
		End If
'		
'Accrued Interest 	
		If (instr(SymName(nOrderNumber),".DB")>0 or instr(SymName(nOrderNumber),".NT")>0 or instr(SymName(nOrderNumber),".IR")>0 or instr(SymName(nOrderNumber),".NO")>0 or instr(SymName(nOrderNumber),".NS")>0) and obj4OrdTicketPage.cAction(nOrderNumber) = "Buy"  Then
			AccruedInterest = " You will be responsible to pay accrued interest."
		End If
		
'Trailing Commissions
		If instr(Environment.Value("TestName"),"ETF") > 0 And nOrderNumber=0 Then
			SymbolVal = Split (Trim(obj4OrdTicketPage.cSymbol(nOrderNumber))," ")
			Trailingcommission = " TD receives a trailing commission for as long as you hold units of " & SymbolVal(0) & "."
		Else
			Trailingcommission=""
		End If
'		
		
'QuantityType - Shares/contracts & Symbol Format for options
		
		If obj4OrdTicketPage.SecurityType(nOrderNumber) = "Equity" Then
			QuantityType = " shares of "
		ElseIf obj4OrdTicketPage.SecurityType(nOrderNumber) = "Option" Then	
			QuantityType = " contracts of "
			'ExpMonth(nOrderNumber) = Monthname(month(obj4OrdTicketPage.vExpDate(nOrderNumber)))  m_ExpDate
			ExpMonth(nOrderNumber) = Monthname(Month(obj4OrdTicketPage.m_ExpDate(nOrderNumber))) 
			splitExpDate = Split(obj4OrdTicketPage.m_ExpDate(nOrderNumber),"-")
		'	splitExpDate = Split(obj4OrdTicketPage.vExpDate(nOrderNumber),"-")
			ExpDate(nOrderNumber) = ExpMonth(nOrderNumber)& " " & Cint(splitExpDate(0)) & ", " & Cint(splitExpDate(2))			
		End If	
'		
		

'Strategy		
		If obj4OrdTicketPage.cCmplxOrdTyp="OneTriggersAnother" Then
			StrategyType="One Triggers Another order."
			If  nOrderNumber = 0  Then
				OrderSequence="primary"
			ElseIf nOrderNumber = 1 Then
				OrderSequence="secondary"
			End If			
			'OrderSequence2="secondary"		
		ElseIf obj4OrdTicketPage.cCmplxOrdTyp="OneCancelOther" Then
			StrategyType="One Cancels Other order."
			If nOrderNumber = 0 Then
				OrderSequence="first"
			ElseIf nOrderNumber = 1 Then
				OrderSequence="second"
			End If			
			'OrderSequence2="second"
		End if
		
		
		
		If obj4OrdTicketPage.SecurityType(nOrderNumber) = "Equity" Then
			Select Case obj4OrdTicketPage.m_Functionality			
			Case "Place"
			
				'For common part1 of the preview script
				If nOrderNumber=0 Then
					sPScriptPartOne="For account " & obj4OrdTicketPage.AccountNumber & " " & AccountType &"," & " we are placing a "&StrategyType
				Else
					sPScriptPartOne=""
				End If
				'ExpectedScript = "Order Preview Script For account " & obj4OrdTicketPage.AccountNumber & " " & AccountType &"," & " we are placing"& orderType & " order to " & obj4OrdTicketPage.cAction(0)&" "&obj4OrdTicketPage.cQuantity(0)  & QuantityType & SymDescription &" ("&SymName&") "&Trim(Price)&" "&Trim(MarketDesc)&"."&" "&GoodTillDesc&"."&" The estimated commission is $"&CommValue&"." & Trailingcommission & FeeandTax & AccruedInterest&" Do you want to proceed?"
				ExpScript = sPScriptPartOne&" For your "&OrderSequence&" order, we are placing"&orderType& " order to "& obj4OrdTicketPage.cAction(nOrderNumber)&" "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & Trim(SymDescription(nOrderNumber)) &" ("&SymName(nOrderNumber)&") "&Trim(Price)&" "&Trim(MarketDesc)&"."&" The estimated commission is $"&CommValue&"."& Trailingcommission & FeeandTax & AccruedInterest
				'" For your "&OrderSequence2&" order, we are placing "&orderType(1)& " order to "& obj4OrdTicketPage.cAction(1)&" "&obj4OrdTicketPage.cQuantity(1)  & QuantityType(1) & SymDescription(1) &" ("&SymName(1)&") "&Trim(Price(1))&" "&Trim(MarketDesc(1))&"."&" The estimated commission is $"&CommValue(1)&"."				' & Trailingcommission & FeeandTax & AccruedInterest&" Do you want to proceed?"
			Case "Change"
				If nOrderNumber=0 Then
					sPScriptPartOne="For account " & obj4OrdTicketPage.AccountNumber & " " & AccountType &"," & " we are changing your "&StrategyType
				Else
					sPScriptPartOne=""
				End If
				ExpScript = sPScriptPartOne&" For your "&OrderSequence&" order, we are changing your"&orderType& " order to now read "& obj4OrdTicketPage.cAction(nOrderNumber)&" "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & Trim(SymDescription(nOrderNumber)) &" ("&SymName(nOrderNumber)&") "&Trim(Price)&" "&Trim(MarketDesc)&"."&" The estimated commission is $"&CommValue&"."& Trailingcommission & FeeandTax & AccruedInterest
			Case "Cancel" 
						If nOrderNumber=0 Then
							sPScriptPartOne="For account " & obj4OrdTicketPage.AccountNumber & " " & AccountType &"," & " we are cancelling your "&StrategyType &" We are cancelling your"
						Else
							sPScriptPartOne=""
						End If
						
						If nOrderNumber=0 Then
							Select Case obj4OrdTicketPage.cCmplxOrdTyp
							
								Case "OneCancelOther"
								ExpScript = sPScriptPartOne & orderType & " order to " & obj4OrdTicketPage.cAction(nOrderNumber) & " "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & SymDescription(nOrderNumber) &" ("&SymName(nOrderNumber)&") "&Trim(Price)&" "&Trim(MarketDesc) & " and your"
								
								Case "OneTriggersAnother"
								ExpScript = sPScriptPartOne & orderType & " order to " & obj4OrdTicketPage.cAction(nOrderNumber) & " "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & SymDescription(nOrderNumber) &" ("&SymName(nOrderNumber)&") "&Trim(Price)&" "&Trim(MarketDesc) & " and"
								
							End Select
						Else
							ExpScript = orderType & " order to " & obj4OrdTicketPage.cAction(nOrderNumber) & " "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & SymDescription(nOrderNumber) &" ("&SymName(nOrderNumber)&") "&Trim(Price)&" "&Trim(MarketDesc)									
						End If
			End Select	
		ElseIf obj4OrdTicketPage.SecurityType(nOrderNumber) = "Option" Then			
			Select Case obj4OrdTicketPage.m_Functionality'			
			Case "Place"
			
				'For common part1 of the preview script
				If nOrderNumber=0 Then
					sPScriptPartOne="For account " & obj4OrdTicketPage.AccountNumber & " " & AccountType &"," & " we are placing a "&StrategyType
				Else
					sPScriptPartOne=""
				End If
				' ExpectedScript = "Order Preview Script For account " & obj4OrdTicketPage.AccountNumber & " " & AccountType &"," & " we are placing"& orderType & " order to " & obj4OrdTicketPage.cAction(0)&" "&obj4OrdTicketPage.cQuantity(0)  & QuantityType & SymDescription &" ("&obj4OrdTicketPage.cSymbol(0)&")" &" "& obj4OrdTicketPage.vStrikePrice(0) & " " & Ucase(obj4OrdTicketPage.CallPutValue(0)) & " " & ExpDate & " " &Trim(Price)&" "&Trim(MarketDesc)&"."&" "&GoodTillDesc&"."&" The estimated commission is $"&CommValue&"." & Trailingcommission & FeeandTax & AccruedInterest&" Do you want to proceed?"
				'ExpScript= sPScriptPartOne&" For your "&OrderSequence&" order, we are placing"&orderType& " order to " & obj4OrdTicketPage.cAction(nOrderNumber)&" "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & SymDescription(nOrderNumber) &" ("&obj4OrdTicketPage.cSymbol(nOrderNumber)&")" &" "& obj4OrdTicketPage.m_StrikePrice(nOrderNumber) & " " & Ucase(obj4OrdTicketPage.CallPutValue(nOrderNumber)) & " " & ExpDate(nOrderNumber) & " " &Trim(Price)&" "&Trim(MarketDesc)&"."&" "&"."&" The estimated commission is $"&CommValue&"." &Trailingcommission & FeeandTax & AccruedInterest
				ExpScript= sPScriptPartOne&" For your "&OrderSequence&" order, we are placing"&orderType& " order to " & obj4OrdTicketPage.cAction(nOrderNumber)&" "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & SymDescription(nOrderNumber) &" ("&obj4OrdTicketPage.cSymbol(nOrderNumber)&")" &" "& obj4OrdTicketPage.m_StrikePrice(nOrderNumber) & " " & Ucase(obj4OrdTicketPage.CallPutValue(nOrderNumber)) & " " & ExpDate(nOrderNumber) & " " &Trim(Price)&" "&Trim(MarketDesc)&"."&" The estimated commission is $"&CommValue&"." &Trailingcommission & FeeandTax & AccruedInterest
			Case "Change"
				 If nOrderNumber=0 Then
					sPScriptPartOne="For account " & obj4OrdTicketPage.AccountNumber & " " & AccountType &"," & " we are changing your "&StrategyType
				Else
					sPScriptPartOne=""
				End If
				 ExpScript= sPScriptPartOne&" For your "&OrderSequence&" order, we are changing your"&orderType& " order to now read " & obj4OrdTicketPage.cAction(nOrderNumber)&" "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & SymDescription(nOrderNumber) &" ("&obj4OrdTicketPage.cSymbol(nOrderNumber)&")" &" "& obj4OrdTicketPage.m_StrikePrice(nOrderNumber) & " " & Ucase(obj4OrdTicketPage.CallPutValue(nOrderNumber)) & " " & ExpDate(nOrderNumber) & " " &Trim(Price)&" "&Trim(MarketDesc)&"."&" The estimated commission is $"&CommValue&"." &Trailingcommission & FeeandTax & AccruedInterest
			Case "Cancel"
						If nOrderNumber=0 Then
							sPScriptPartOne="For account " & obj4OrdTicketPage.AccountNumber & " " & AccountType &"," & " we are cancelling your "&StrategyType &" We are cancelling your"
						Else
							sPScriptPartOne=""
						End If
						
						If nOrderNumber=0 Then
							Select Case obj4OrdTicketPage.cCmplxOrdTyp
									Case "OneCancelOther"
										ExpScript = sPScriptPartOne & orderType& " order to " & obj4OrdTicketPage.cAction(nOrderNumber)&" "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & SymDescription(nOrderNumber) &" ("&obj4OrdTicketPage.cSymbol(nOrderNumber)&")" &" "& obj4OrdTicketPage.m_StrikePrice(nOrderNumber) & " " & Ucase(obj4OrdTicketPage.CallPutValue(nOrderNumber)) & " " & ExpDate(nOrderNumber) & " " &Trim(Price)&" "&Trim(MarketDesc) & " and your"
										
									Case "OneTriggersAnother"
										ExpScript = sPScriptPartOne & orderType& " order to " & obj4OrdTicketPage.cAction(nOrderNumber)&" "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & SymDescription(nOrderNumber) &" ("&obj4OrdTicketPage.cSymbol(nOrderNumber)&")" &" "& obj4OrdTicketPage.m_StrikePrice(nOrderNumber) & " " & Ucase(obj4OrdTicketPage.CallPutValue(nOrderNumber)) & " " & ExpDate(nOrderNumber) & " " &Trim(Price)&" "&Trim(MarketDesc) & " and"
							End Select	
						Else
							ExpScript= orderType& " order to " & obj4OrdTicketPage.cAction(nOrderNumber)&" "&obj4OrdTicketPage.cQuantity(nOrderNumber)  & QuantityType & SymDescription(nOrderNumber) &" ("&obj4OrdTicketPage.cSymbol(nOrderNumber)&")" &" "& obj4OrdTicketPage.m_StrikePrice(nOrderNumber) & " " & Ucase(obj4OrdTicketPage.CallPutValue(nOrderNumber)) & " " & ExpDate(nOrderNumber) & " " &Trim(Price)&" "&Trim(MarketDesc)
						End If
				End Select				
		End If
		
'		
		If nOrderNumber=1 Then
			Select Case obj4OrdTicketPage.m_Functionality
				Case "Place"
					ExpScriptFinal =ExpScript&GoodTillDesc&" Do you want to proceed?"
				Case "Change"
					ExpScriptFinal =ExpScript&GoodTillDesc&" This order is subject to prior fill. Do you want to proceed?"
				Case "Cancel"
					ExpScriptFinal =ExpScript &". This order is subject to prior fill. Do you want to proceed?"
			End Select
		ElseIf nOrderNumber=0 Then
			ExpScriptFinal = ExpScript
		End If
		'//Return expected script
		FormatPreviewScript=ExpScriptFinal		
		
		
	End Function

	
End Class


Class ComplexOrder_OrderDetail
'TransId4Ord1,TransId4Ord2,dictResultsOrd1,dictResultsOrd2

	Private obj4OrdTicketPage,obj4PreviewPage,obj4ConfirmPage,obj4OrderDetailPage,orderType,OMSOrderNumber,oOrderDetailScreen
	Public sOrderNumber,dictResults
	Public Sub init_OrderDetailPage(ByRef oOrdertcktPage,ByRef oConfirmationPage,ByRef oPreviewPage,ByVal BrowserName,ByVal PageName)
		Set obj4ConfirmPage = oConfirmationPage
		Set obj4PreviewPage = oPreviewPage
		Set obj4OrderDetailPage = new preparePage
		Set obj4OrdTicketPage = oOrdertcktPage
		Set oOrderDetailScreen = new ValidatePage
		
		obj4OrderDetailPage.initPage BrowserName,PageName
			If obj4OrderDetailPage.valEleExist("Button","wb_Done") Then
				obj4OrderDetailPage.clickWebButton "wb_Done"
			Else
				obj4OrderDetailPage.clickWebElement "we_OrdTktConf_Close"			
			End If				
		
		If obj4ConfirmPage.dictResultsOrd1 is Nothing  Then
			ReportStatus "Fail","OrderDetailValidation ","No Record found in DB for the order1-TransId -  " & obj4ConfirmPage.TransId4Ord1 & " to retrieve the order from the orderpanel to validate orderdetails."
			ExitTest
		ElseIf obj4ConfirmPage.dictResultsOrd2 is Nothing Then
			ReportStatus "Fail","OrderDetailValidation ","No Record found in DB for the order2-TransId -  " & obj4ConfirmPage.TransId4Ord2 & " to retrieve the order from the orderpanel to validate orderdetails."
			ExitTest
		Else
			print "Click Refresh"
			obj4OrderDetailPage.wait4Element_NoReport "Button","wb_Dashboard_Refresh",10000
			Verify_AwSnap()
			print "Wait for Page Load"
			obj4OrderDetailPage.wait4Element_NoReport "List","wl_ItemPerPage",50000						
			obj4OrderDetailPage.wait4Element_NoReport "Table","wt_OrderList",30000
			print "Click Refresh"
			obj4OrderDetailPage.clickWebButton "wb_Dashboard_Refresh" 
			print "Wait for Page Load"					
			obj4OrderDetailPage.wait4Element_NoReport "List","wl_ItemPerPage",50000				
			obj4OrderDetailPage.wait4Element_NoReport "Table","wt_OrderList",10000
			Verify_AwSnap()
			
			Set oDesc=Description.Create
			oDesc("micclass").Value= "WebTable"
			oDesc("html tag").Value= "TABLE"
			oDesc("html id").Value= "td-aoe-order-list-table-results"
				Set oObjCol=Browser("AOE").Page("AOE").ChildObjects(oDesc)
				
				Set dictResultsOrd1  = Validate_OrderDetailsDB(obj4ConfirmPage.TransId4Ord1)
				'Set dictResultsOrd2  = Validate_OrderDetailsDB(obj4ConfirmPage.TransId4Ord2)
				obj4OrderDetailPage.wait4Element_NoReport "List","wl_ItemPerPage",50000				
				obj4OrderDetailPage.wait4Element_NoReport "Table","wt_OrderList",50000
				Dim bIsFound: bIsFound = False
				For i = 2 To oObjCol(0).RowCount
					Wait 2
					
					If Trim(oObjCol(0).GetCellData(i,2)) = dictResultsOrd1.Item("OrderNumber") or Trim(oObjCol(0).GetCellData(i,2)) = dictResultsOrd1.Item("Trans_Id") or Trim(oObjCol(0).GetCellData(i,2)) = dictResultsOrd1.Item("Temp_Order_Num")  Then  'or oObjCol(0).GetCellData(i,2)= obj4ConfirmPage.dictResultsOrd2.Item("OrderNumber") Then	
						oObjCol(0).ChildItem(i,2,"WebElement",0).Click
						Wait 5
						ReportStatus "Pass","Order List Page","Order is displayed in the Orderlist Page: "&obj4ConfirmPage.dictResultsOrd1.Item("OrderNumber")
						bIsFound = True
						Exit For
					End If
				Next
				
				If bIsFound <> True Then
					ReportStatus "Fail","Order List Page","Order is NOT displayed in the Orderlist Page: "&obj4ConfirmPage.dictResultsOrd1.Item("OrderNumber")
					'AOE_CloseBrowsers()
					ExitTest
				End If	
				
		End If	
		
	End Sub
	
	Public Sub DBcall()
		
		'For order1
		Set dictResultsOrd1 = Validate_OrderDetailsDB(obj4ConfirmPage.TransId4Ord1)				
		print Environment.Value("TestName")
		print dictResultsOrd1.Item("acctNumber")
		print "OMSOrder Number - " & dictResultsOrd1.Item("OrderNumber")
		
		'For order2
		Set dictResultsOrd2 = Validate_OrderDetailsDB(obj4ConfirmPage.TransId4Ord2)				
		print Environment.Value("TestName")
		print dictResultsOrd2.Item("acctNumber")
		print "OMSOrder Number - " & dictResultsOrd2.Item("OrderNumber")
	End Sub
		
	Public Sub ValTransId(strTransID)
	'obj4ConfirmPage.dictResultsOrd1.Item("Trans_Id")
		With oOrderDetailScreen
			.addValidateField "we_OrderDetail_TransId","Element","innertext",strTransID
		End With
		print "Validating Trans ID"
		.ValidatePageFields
	End Sub
	
	Public Sub ValidateOrderDetails
		Set dictResultsOrd1  = Validate_OrderDetailsDB(obj4ConfirmPage.TransId4Ord1)
		Set dictResultsOrd2  = Validate_OrderDetailsDB(obj4ConfirmPage.TransId4Ord2)
		
		'For order1
		'Select OMS order number from the drop down
		Print "Validating order details for order1"
		SelectOMSOrderNumber dictResultsOrd1.Item("OrderNumber"),dictResultsOrd1.Item("Temp_Order_Num")
		VerifyOrderDetails dictResultsOrd1,0
		Print "Validation of order details for order1 is completed"
		
		'For order2
		'Select OMS order number from the drop down
		Print "Validating order details for order2"
		SelectOMSOrderNumber dictResultsOrd2.Item("OrderNumber"),dictResultsOrd2.Item("Temp_Order_Num")		
		VerifyOrderDetails dictResultsOrd2,1
		Print "Validation of order details for order2 is completed"
	End Sub
	
Public Sub SelectOMSOrderNumber(sOMSOrderToSelect,sTempOrdNum)  'sOMSOrderToSelect = Pass OMS ORder number to select from the drop down
	
	If gBrowser = "IE" Then
		Set objOrderNum = Description.Create()
		objOrderNum("class").value= "td-dropdown-item"
		objOrderNum("micclass").value= "WebElement"
		objOrderNum("html tag").value= "A"	
	Else
		Set objOrderNum = Description.Create()
		objOrderNum("html tag").Value= "A"	
	End If

	
	bOrderFound =False
	
	Set objOrdersList =Browser("AOE").Page("AOE").WebElement("we_OrderDetail_OrdNumDD").ChildObjects(objOrderNum)
	obj4OrderDetailPage.clickWebElement "we_OrderDetail_OrdNumDD" 
	Wait 1
	If Not objOrdersList.Count>1 Then
		
		ReportStatus "Fail","OrderDetailsPage-SelectOMSOrderNumber","OMS Order Number drop down contains less than two numbers.Exiting test"
		ExitTest
	Else	
		For i=0 To objOrdersList.Count -1
			 'Click drop down
			If Trim(objOrdersList(i).GetROProperty("innertext")) = Trim(sOMSOrderToSelect) or Trim(objOrdersList(i).GetROProperty("innertext")) = Trim(sTempOrdNum) Then
				Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
				'objOrdersList(i).Select
				
				objOrdersList(i).Click
				Setting.WebPackage("ReplayType") = 1 '2-Runs mouse operations using the Browser events
				bOrderFound = True
				Print "OrderDetailsPage-Order Selected from Dropdown: "&sOMSOrderToSelect
				Exit For
			End If
			
			If i = objOrdersList.Count AND bOrderFound  = False Then
				ReportStatus "Fail","OrderDetailsPage-SelectOMSOrderNumber","OMS Order Number is not found in the drop down :"&sOMSOrderToSelect &" Exiting Test"
				ExitTest
			End If
		Next
		
	End If
End Sub
	
Public Sub VerifyOrderDetails(dictResults,OrderSequenceNum) 'dictResults=DBResults dict object for a given trans id.OrderSequenceNum = 0 for first order, 1 for second order
				
	Set oOrderDetailScreen = new ValidatePage
	Dim OrderSequence:OrderSequence=Cint(OrderSequenceNum)
	
	'//To handle number of orders and number of below variables' elements do not match				
		If CInt(obj4OrdTicketPage.cNumOfOrders)=2 Then
			If Ubound(obj4OrdTicketPage.Limit_Price)<1 And OrderSequence=1 Then
				LimitPrice=obj4OrdTicketPage.Limit_Price(0)
			Else
				LimitPrice=obj4OrdTicketPage.Limit_Price(OrderSequence)
			End If
			
			If Ubound(obj4OrdTicketPage.Trigger_Price)<1 And OrderSequence=1 Then
				TriggerPrice=obj4OrdTicketPage.Trigger_Price(0)
			Else
				TriggerPrice=obj4OrdTicketPage.Trigger_Price(OrderSequence)
			End If
						
			If Ubound(obj4OrdTicketPage.Trigger_Delta)<1 And OrderSequence=1 Then
				TriggerDelta=obj4OrdTicketPage.Trigger_Delta(0)
			Else
				TriggerDelta=obj4OrdTicketPage.Trigger_Delta(OrderSequence)
			End If
			
			If Ubound(obj4OrdTicketPage.Limit_Delta)<1 And OrderSequence=1 Then
				LimitDelta=obj4OrdTicketPage.Limit_Delta(0)
			Else
				LimitDelta=obj4OrdTicketPage.Limit_Delta(OrderSequence)
			End If	
		End If	
				
'Action type				
	Select Case UCASE(obj4OrdTicketPage.cAction(OrderSequence))  'dictResults.Item("ActionType")
		Case "BUY"
			ActionType = "Buy"
		Case "BUY TO COVER"
			ActionType = "Buy to Cover"
		Case "SELL"
			ActionType = "Sell"
		Case "SHORT SELL"
			ActionType = "Short Sell"
		Case "BUY TO OPEN"
			ActionType = "Buy to Open"
		Case "BUY TO CLOSE"
			ActionType = "Buy to Close"
		Case "SELL TO OPEN COVERED"
			ActionType = "Sell to Open Covered"
		Case "SELL TO OPEN UNCOVERED"
			ActionType = "Sell to Open Un-Covered"
		Case "SELL TO CLOSE"
			ActionType = "Sell to Close"
	End Select
	
' Order Type Mapping

	Select Case UCASE(obj4OrdTicketPage.cOrderType(OrderSequence))'dictResults.Item("OrderType")
		
		Case "LIMIT"
			orderType = "Limit"			
		Case "MARKET"
			orderType = "Market"
		Case "STOP MARKET"
			orderType = "Stop Market"			
		Case "STOP LIMIT"
			orderType = "Stop Limit"			
		Case "TRAILING STOP"
		 	orderType = "Trailing Stop Market"		 	
		Case "TRAILING STOP LIMIT"
			orderType = "Trailing Stop Limit"
		
	End Select	
	
	

'Commission Mapping FLAT_AMOUNT
	Select Case dictResults.Item("CommType")
		Case "FLAT_AMOUNT"
			commType = "Prefigured"
		Case "SCHEDULE"
			commType = "Schedule"
		Case "PERCENTAGE_SCHEDULE"
			'commType = obj4OrdTicketPage.CommValue(OrderSequence) & " %Schedule"
			commType =  "%Schedule"
		Case "PER_SHARE"
			'commType = obj4OrdTicketPage.CommValue(OrderSequence) & " Cents/Share"
			commType = "Cents/Share"
		
	End Select	
	
'Price Section
	Select Case UCASE(obj4OrdTicketPage.cOrderType(OrderSequence)) 'dictResults.Item("OrderType")
		
		Case "LIMIT"
		'	Trigger_Price = "$" & Formatnumber(obj4OrdTicketPage.Limit_Price(OrderSequence),2,False,False,False)
			Trigger_Price = "$" & Formatnumber(LimitPrice,2,False,False,False)
			Offset = "N/A"
			Stop_Lim_Price = "N/A"
			Trailing_Stop_perc = "N/A"
			Trailing_Stop_dollr = "N/A"
						
		Case "MARKET"
			orderType = "Market"
			Trigger_Price = "N/A"		
			Stop_Lim_Price = "N/A"
			Trailing_Stop_perc = "N/A"
			Trailing_Stop_dollr = "N/A"
			Offset = "N/A"
			
		Case "STOP MARKET"
			orderType = "Stop Market"	
			'Trigger_Price = "$" & Formatnumber(obj4OrdTicketPage.Limit_Price(OrderSequence),2,False,False,False)
			Trigger_Price = "$" & Formatnumber(TriggerPrice,2,False,False,False)		
			Stop_Lim_Price = "N/A"
			Trailing_Stop_perc = "N/A"
			Trailing_Stop_dollr = "N/A"
			Offset = "N/A"
			
		Case "STOP LIMIT"
			orderType = "Stop Limit"	
			'Trigger_Price = "$" & Formatnumber(obj4OrdTicketPage.Trigger_Price(OrderSequence),2,False,False,False)
			Trigger_Price = "$" & Formatnumber(TriggerPrice,2,False,False,False)
			Offset = "N/A"			
			Stop_Lim_Price = "$" & Formatnumber(LimitPrice,2,False,False,False)
			Trailing_Stop_perc = "N/A"
			Trailing_Stop_dollr = "N/A"	
			
		Case "TRAILING STOP"		
		 	orderType = "Trailing Stop Market"	
		 	RefPrice = obj4OrderDetailPage.getEProperty("Element","we_OrderDetail_RefPrice","innertext") '$53.7
		 	If RefPrice = "" or RefPrice = "MKT" Then
				ReportStatus "Warning","OrderDetail - Ref Price","Reference Price is Not displayed for Price calculations"				
			Else 
				If instr(1,ActionType,"Sell") > 0 Then
					'Trigger_Price = "$" & Right(RefPrice,(Len(RefPrice) -1)) - Cdbl(Formatnumber(obj4OrdTicketPage.Trigger_Delta(OrderSequence),2,False,False,False))
					Trigger_Price = "$" & Right(RefPrice,(Len(RefPrice) -1)) - Cdbl(Formatnumber(TriggerDelta,2,False,False,False))
				Else	
					'Trigger_Price = "$" & Right(RefPrice,(Len(RefPrice) -1))  + Cdbl(Formatnumber(obj4OrdTicketPage.Trigger_Delta(OrderSequence),2,False,False,False))
					Trigger_Price = "$" & Right(RefPrice,(Len(RefPrice) -1))  + Cdbl(Formatnumber(TriggerDelta,2,False,False,False))
				End If	
			End If
			Trigger_Price = "$" & Formatnumber(Trigger_Price,2,False,False,False)
			Stop_Lim_Price = "N/A"
			Offset = "N/A"  		 
			Trailing_Stop_perc = "N/A"
			'Trailing_Stop_dollr = "$" & Formatnumber(obj4OrdTicketPage.Trigger_Delta(OrderSequence),2,False,False,False)
			Trailing_Stop_dollr = "$" & Formatnumber(TriggerDelta,2,False,False,False)
			
		Case "TRAILING STOP LIMIT"
			orderType = "Trailing Stop Limit"
			RefPrice = obj4OrderDetailPage.getEProperty("Element","we_OrderDetail_RefPrice","innertext") '$53.7
			If RefPrice = "" Then
				ReportStatus "Warning","OrderDetail - Ref Price","Reference Price is Not displayed for Price calculations"
			Else 
				If instr(1,ActionType,"Sell") > 0 Then
				'Calc_Trigger_Price = Right(RefPrice,(Len(RefPrice) -1))  - Cdbl(Formatnumber(obj4OrdTicketPage.Trigger_Delta(OrderSequence),2,False,False,False))
				Calc_Trigger_Price = Right(RefPrice,(Len(RefPrice) -1))  - Cdbl(Formatnumber(TriggerDelta,2,False,False,False))
				Else
				Calc_Trigger_Price = Right(RefPrice,(Len(RefPrice) -1))  + Cdbl(Formatnumber(TriggerDelta,2,False,False,False))
				End If
				
				Trigger_Price = "$" & Formatnumber(Calc_Trigger_Price,2,False,False,False)	
				If instr(1,ActionType,"Sell") > 0 Then
					'Calc_Stop_Lim_Price = Calc_Trigger_Price - Cdbl (obj4OrdTicketPage.Limit_Delta(OrderSequence))
					Calc_Stop_Lim_Price = Calc_Trigger_Price - Cdbl (LimitDelta)
				Else
					'Calc_Stop_Lim_Price = Calc_Trigger_Price + Cdbl (obj4OrdTicketPage.Limit_Delta(OrderSequence))			
					Calc_Stop_Lim_Price = Calc_Trigger_Price + Cdbl (LimitDelta)								
				End If				
				Stop_Lim_Price = "$" & Formatnumber(Calc_Stop_Lim_Price,2,False,False,False)				
			End If
			
		'	Offset = "$" & Formatnumber(obj4OrdTicketPage.Limit_Delta(OrderSequence),2,False,False,False)	
			Offset = "$" & Formatnumber(LimitDelta,2,False,False,False)			
			Trailing_Stop_perc = "N/A"
		'	Trailing_Stop_dollr = "$" & Formatnumber(obj4OrdTicketPage.Trigger_Delta(OrderSequence),2,False,False,False)
			Trailing_Stop_dollr = "$" & Formatnumber(TriggerDelta,2,False,False,False)
		
	End Select
	
'Order Status

Select Case dictResults.Item("OrderStatus")
	Case "PLACED"
		OrderStatus = "Placed"
	Case "UNKNOWN"
		OrderStatus = "Unknown"
	Case "ACTIVE"
		OrderStatus = "Active"
	Case "DUMMY"
		OrderStatus = "Dummy"
	Case "ERROR"
		OrderStatus = "Error"
	Case "FILLED"
		OrderStatus = "Filled"
	Case "HISTORY"
		OrderStatus = "History"
	Case "ALL_INACTIVE"
		OrderStatus = "All Inactive"
	Case "INACTIVE"
		OrderStatus = "Inactive"
	Case "KILLED"
		OrderStatus = "Killed"
	Case "LOCKED"
		OrderStatus = "Locked"
	Case "MANUAL"
		OrderStatus = "Manual"
	Case "OPEN"
		OrderStatus = "Open"
	Case "PARTIALLY_FILLED"
		OrderStatus = "Partially Filled"
	Case "UPDATE"
		OrderStatus = "Update"
	Case "WAITING"
		OrderStatus = "Waiting"
	Case "CANCELLED"
		OrderStatus = "Cancelled"
	Case "REJECTED"
		OrderStatus = "Rejected"
	Case "ISM_PROBLEM"
		OrderStatus = "ISM Problem"
	Case "PENDING"
		OrderStatus = "Pending"
	Case "OPEN_PENDING_TRIGGER"
		OrderStatus = "Open Pending Trigger"
	Case "RECEIVED"
		OrderStatus = "Received"
	Case "SENT"
		OrderStatus = "Sent"
	Case "UNSENT"
		OrderStatus = "Unsent"
	Case "CONFIRMED"
		OrderStatus = "Confirmed"
	Case "CONTRACTED"
		OrderStatus = "Contracted"
	Case "CONFIRMED_TRANSMISSION"
		OrderStatus = "Confirmed Transmission"
	Case "TRANSMITTED"
		OrderStatus = "Transmitted"
	Case "ACKNOWLEDGED"
		OrderStatus = "Acknowledged"		
End Select

If OrderStatus <> "Placed" or OrderStatus <> "Active" or OrderStatus <> "Filled" or OrderStatus <> "Open Pending Trigger" or OrderStatus <> "Open"  Then
	ReportStatus "Warning","Order Status in DB", "Order Status is : "& OrderStatus
End If
'Symbol Name
	Select Case obj4OrdTicketPage.SecurityType(OrderSequence)
		Case "Option"
			SymbolName = obj4OrdTicketPage.SymName_Options(OrderSequence) & " - " & Trim(obj4PreviewPage.SymDescription(OrderSequence))
			
		Case "Equity"
			'SymbolName = obj4ConfirmPage.dictResults.Item("symbol") &" " & obj4ConfirmPage.dictResults.Item("Market") & " - " & obj4PreviewPage.SymDescription(OrderSequence)
			SymbolName=dictResults.Item("symbol") &" " & dictResults.Item("Market") & " - " & Trim(obj4PreviewPage.SymDescription(OrderSequence))
	End Select

'Trader Instruction


		
'	'Date conversion	
'		getDate = Split(dictResults.Item("Expiry_GTD"),"-")
'		
'		ExpMonth = Mid(MonthName(Month(dictResults.Item("Expiry_GTD")),1,3))
'		ExpectedDate = getDate(2) & "-"&ExpMonth & "-" & getDate(0)
		
		With oOrderDetailScreen
		
		.initValidatePage "AOE","AOE","Order Detail-Equity"
		.addValidateField "we_OrderDetail_header","Element","innertext","Order Details"
		
		'.addValidateField "we_OrderDetail_hdrOrdNum","Element","innertext"," - "&obj4ConfirmPage.dictResults.Item("OrderNumber")
'Order Info Section		
		.addValidateField "we_OrderDetail_AccNo.","Element","innertext",dictResults.Item("acctNumber")

		.addValidateField "we_OrderDetail_Symbol","Element","innertext",SymbolName 
		.addValidateField "we_OrderDetail_Status","Element","innertext",OrderStatus
		.addValidateField "we_OrderDetail_Action","Element","innertext",ActionType		
		'.addValidateField "we_OrderDetail_ExpDate","Element","innertext", ExpectedDate
		.addValidateField "we_OrderDetail_Quant","Element","innertext", Formatnumber(dictResults.Item("qty"),0,True,False,True)	
		
		.addValidateField "we_OrderDetail_OrdTyp","Element","innertext", orderType
		
		If Trim(dictResults.Item("OrderType")) =  "MARKET" Then
			.addValidateField "we_OrderDetail_Price","Element","innertext","MKT" 
		ElseIf dictResults.Item("Price") = "MKT" or dictResults.Item("Price") = ""  Then
			.addValidateField "we_OrderDetail_Price","Element","innertext","MKT" 		
		Else	
			On Error Resume Next
			'# Commenting below line as DB has 2 decimal character and AOE shows 3 Decimal Characters
			'.addValidateField "we_OrderDetail_Price","Element","innertext","$" & Formatnumber(dictResults.Item("Price"),2,True,True,False)			
			
		End If		
		.addValidateField "we_OrderDetail_TransId","Element","innertext",dictResults.Item("Trans_Id")	' obj4ConfirmPage.dictResults.Item("Trans_Id")
'Price Section
		.addValidateField "we_OrderDetail_TrigPrice","Element","innertext",Trigger_Price
		.addValidateField "we_OrderDetail_Offset","Element","innertext",Offset
		.addValidateField "we_OrderDetail_StpLmtPrice","Element","innertext",Stop_Lim_Price
		.addValidateField "we_OrderDetail_TrailStp%","Element","innertext",Trailing_Stop_perc
		.addValidateField "we_OrderDetail_TrailStp$","Element","innertext",Trailing_Stop_dollr
'Commission Section
		.addValidateField "we_OrderDetail_CommType","Element","innertext",commType	
		.addValidateField "we_OrderDetail_EstPrinc","Element","innertext","$" & Formatnumber(dictResults.Item("EstPrincipal"),2,True,False,True)
		
		'.addValidateField "we_OrderDetail_CommVal","Element","innertext","$" & Formatnumber(dictResults.Item("CalcCommAmt"),2,True,False,True)
		'.addValidateField "we_OrderDetail_EstTotal","Element","innertext","$" & Formatnumber(dictResults.Item("EstTotal"),2,True,False,True) 'To uncomment after defect is fixed
'Calculate Total Amount		

''To uncomment after defect is fixed
'		If instr(1,ActionType,"Sell") > 0 Then
'			EstTotal = CDbl(dictResults.Item("EstPrincipal")) - CDbl(dictResults.Item("CalcCommAmt"))			
'		Else 
'			EstTotal = CDbl(dictResults.Item("EstPrincipal")) + CDbl(dictResults.Item("CalcCommAmt"))			
'		End If
					
		
'******Commenting below Calc section 
'		If instr(1,ActionType,"Sell") > 0 Then
'			EstTotal = 0.00 - CDbl(dictResults.Item("CalcCommAmt"))			
'		Else 
'			EstTotal = 0.00 + CDbl(dictResults.Item("CalcCommAmt"))		
'		End If
		
		
			'EstTotal = Formatnumber(EstTotal,2,True,False,True) 'To uncomment after defect is fixed
			'EstTotal = ConvertNegativeNumFormat(EstTotal) 'To uncomment after defect is fixed
		'.addValidateField "we_OrderDetail_EstTotal","Element","innertext",EstTotal '//to uncomment after defect is fixed
		If obj4OrdTicketPage.fillNonmanInd = "Yes" Then
			.addValidateField "we_OrderDetail_FXRate","Element","innertext",obj4OrdTicketPage.cFXRate(OrderSequence)
		Else
			.addValidateField "we_OrderDetail_FXRate","Element","innertext","N/A"		
		End If	
		
'Agent Info	
		
		'.addValidateField "we_OrderDetail_UserId","Element","innertext",dictResults.Item("UserId")		
		
		.addValidateField "we_OrderDetail_BhalfCode","Element","innertext",dictResults.Item("BehalfCode")
		
			If obj4OrdTicketPage.Agent = "DI" Then					
					.addValidateField "we_OrderDetail_RR","Element","innertext",dictResults.Item("AgentRRCode") 
			ElseIf obj4OrdTicketPage.Agent = "PIA" Then						
					'.addValidateField "we_OrderDetail_RR","Element","innertext",dictResults.Item("AcctRRCode")
					If UCase(obj4OrdTicketPage.m_Functionality) = "CHANGE" And obj4OrdTicketPage.cRRCode <> "" Then  '//Condition added for change order
						.addValidateField "we_OrderDetail_RR","Element","innertext",dictResults.Item("AgentRRCode")
					Else
						.addValidateField "we_OrderDetail_RR","Element","innertext",dictResults.Item("AcctRRCode")
					End If	
			End If	
				
'Options
		If obj4OrdTicketPage.AM_Indicator = True Then
			.addValidateField "we_OrderDetail_AMInd","Element","innertext","YES"	
		Else
			.addValidateField "we_OrderDetail_AMInd","Element","innertext","NO"				
		End If
		
		'If obj4OrdTicketPage.fillNonmanInd = "Yes" Then
			Select Case obj4OrdTicketPage.ShareHolderStatus(OrderSequence)
				Case "Significant"
					.addValidateField "we_OrderDetail_SigShareHold","Element","innertext","YES"				
				Case "Insider"
					.addValidateField "we_OrderDetail_InsiderInd","Element","innertext","YES"				
			End Select
		'End If
		
'Instructions
			If obj4OrdTicketPage.fillNonmanInd = "Yes" Then
			
				.addValidateField "we_OrderDetail_CE","Element","innertext",obj4OrdTicketPage.ContractExcluded(OrderSequence)
				strAddInfoCI1 = obj4OrderDetailPage.getEProperty("Element","we_OrderDetail_AddInfoCI1","innertext")
				strAddlInfo2=obj4OrderDetailPage.getEProperty("Element","we_OrderDetail_AddInfoCI2","innertext")
				CompareActualValues "we_OrderDetail_AddInfoCI1",obj4OrdTicketPage.AddInfoContrInclude_1(OrderSequence),strAddInfoCI1
				CompareActualValues "we_OrderDetail_AddInfoCI2",obj4OrdTicketPage.AddInfoContrInclude_2(OrderSequence),strAddlInfo2

				If obj4OrdTicketPage.ShareHolderStatus(OrderSequence) = "Significant" Then
					.addValidateField "we_OrderDetail_TradeInfo","Element","innertext","SIG_SHARE"
				ElseIf obj4OrdTicketPage.ShareHolderStatus(OrderSequence) = "Insider" Then	
					.addValidateField "we_OrderDetail_TradeInfo","Element","innertext","INSIDER"
				Else
					'.addValidateField "we_OrderDetail_TradeInfo","Element","innertext",obj4OrdTicketPage.TraderInstruction(OrderSequence)			
				End If			
			End If
			.ValidatePageFields
		print Environment.Value("TestName")
		print dictResults.Item("acctNumber")
		print "OMSOrder Number - " & dictResults.Item("OrderNumber")
		End With
		Set dictResults = Nothing
		Set oOrderDetailScreen = Nothing		
					
	End Sub	
	
			Public Sub CompareActualValues(strFieldName,strExpValue,strActValue)			
				If StrComp(Trim(strExpValue),Trim(strActValue),1)=0 Then
					ReportStatus "Pass",strFieldName, "Expected value is: "&strExpValue & vbcrlf &" Actual Value is: "&strActValue	
				Else
					ReportStatus "Warning",strFieldName, "Expected value is: "&strExpValue & vbcrlf &" Actual Value is: "&strActValue					
				End If
			End Sub
			
			
	Public Function ValidateOrderDetailsChange()			
	
'		OMSOrderNumber = obj4OrderDetailPage.getEProperty("Element","we_OrderDetail_OMSOrderNumber","innertext")
'		print OMSOrderNumber
		'wait 2
		
		obj4OrderDetailPage.wait4Element "Element","we_OrderDetail_header",30000
		'//Call order details DB function to fetch latest values for the transaction
		me.DBcall()
		'Set dictResults = Validate_OrderDetailsDB(obj4ConfirmPage.TransId)
' Action type Mapping	

	Select Case obj4ConfirmPage.dictResults.Item("ActionType")
	'Select Case me.dictResults.Item("ActionType")
		Case "BUY"
			ActionType = "Buy"
		Case "BUY_TO_COVER"
			ActionType = "Buy to Cover"
		Case "SELL"
			ActionType = "Sell"
		Case "SHORT_SELL"
			ActionType = "Short Sell"
		Case "BUY_TO_OPEN"
			ActionType = "Buy to Open"
		Case "BUY_TO_CLOSE"
			ActionType = "Buy to Close"
		Case "SELL_TO_OPEN_COVERED"
			ActionType = "Sell to Open Covered"
		Case "SELL_TO_OPEN_UNCOVERED"
			ActionType = "Sell to Open Un-Covered"
		Case "SELL_TO_CLOSE"
			ActionType = "Sell to Close"
	End Select
	
' Order Type Mapping

	Select Case obj4ConfirmPage.dictResults.Item("OrderType")
	'Select Case me.dictResults.Item("OrderType")
		
		Case "LIMIT"
			orderType = "Limit"			
		Case "MARKET"
			orderType = "Market"
		Case "STOP_MARKET"
			orderType = "Stop Market"			
		Case "STOP_LIMIT"
			orderType = "Stop Limit"			
		Case "TRAILING_STOP_MARKET"
		 	orderType = "Trailing Stop Market"		 	
		Case "TRAILING_STOP_LIMIT"
			orderType = "Trailing Stop Limit"
		
	End Select

'Commission Mapping FLAT_AMOUNT
	Select Case obj4ConfirmPage.dictResults.Item("CommType")
	'Select Case me.dictResults.Item("CommType")
		Case "FLAT_AMOUNT"
			commType = "Prefigured"
		Case "SCHEDULE"
			commType = "Schedule"
		Case "PERCENTAGE_SCHEDULE"
			commType = obj4OrdTicketPage.chCommValue & " %Schedule"
		Case "PER_SHARE"
			commType = obj4OrdTicketPage.chCommValue & " Cents/Share"
		Case "WEB"
			commType = "EBS Schedule"			
	End Select	
	
'Price Section
	Select Case obj4ConfirmPage.dictResults.Item("OrderType")
	'Select Case me.dictResults.Item("OrderType")
		
		Case "LIMIT"
			Trigger_Price = "$" & Formatnumber(obj4OrdTicketPage.Limit_Price,2,False,False,False)
			Offset = "N/A"
			Stop_Lim_Price = "N/A"
			Trailing_Stop_perc = "N/A"
			Trailing_Stop_dollr = "N/A"
						
		Case "MARKET"
			orderType = "Market"
			Trigger_Price = "N/A"
			Offset = "N/A"
			Stop_Lim_Price = "N/A"
			Trailing_Stop_perc = "N/A"
			Trailing_Stop_dollr = "N/A"
			
		Case "STOP_MARKET"
			orderType = "Stop Market"	
			Trigger_Price = "$" & Formatnumber(obj4OrdTicketPage.Trigger_Price,2,False,False,False)
			Offset = "N/A"
			Stop_Lim_Price = "N/A"
			Trailing_Stop_perc = "N/A"
			Trailing_Stop_dollr = "N/A"
			
		Case "STOP_LIMIT"
			orderType = "Stop Limit"	
			Trigger_Price = "$" & Formatnumber(obj4OrdTicketPage.Trigger_Price,2,False,False,False)
			Offset = "N/A"
			Stop_Lim_Price = "$" & Formatnumber(obj4OrdTicketPage.Limit_Price,2,False,False,False)
			Trailing_Stop_perc = "N/A"
			Trailing_Stop_dollr = "N/A"	
			
		Case "TRAILING_STOP_MARKET"		
		 	orderType = "Trailing Stop Market"	
		 	RefPrice = obj4OrderDetailPage.getEProperty("Element","we_OrderDetail_RefPrice","innertext") '$53.7
		 	If RefPrice = "" or RefPrice = "MKT" Then
				ReportStatus "Warning","OrderDetail - Ref Price","Reference Price is Not displayed for Price calculations"				
			Else 
				If instr(1,ActionType,"Sell") > 0 Then
					Trigger_Price = "$" & Cdbl(Right(RefPrice, (Len(RefPrice) -1))) - Cdbl(Formatnumber(obj4OrdTicketPage.Trigger_Delta,2,False,False,False))
				Else	
					Trigger_Price = "$" & Cdbl(Right(RefPrice, (Len(RefPrice) -1))) + Cdbl(Formatnumber(obj4OrdTicketPage.Trigger_Delta,2,False,False,False))
				End If	
			End If
			
			Offset = "N/A"
			Stop_Lim_Price = "N/A"
			Trailing_Stop_perc = "N/A"
			Trailing_Stop_dollr = "$" & Formatnumber(obj4OrdTicketPage.Trigger_Delta,2,False,False,False)
			
		Case "TRAILING_STOP_LIMIT"
			orderType = "Trailing Stop Limit"
			RefPrice = obj4OrderDetailPage.getEProperty("Element","we_OrderDetail_RefPrice","innertext") '$53.7
			If RefPrice = "" Then
				ReportStatus "Warning","OrderDetail - Ref Price","Reference Price is Not displayed for Price calculations"
			Else 
				If instr(1,ActionType,"Sell") > 0 Then
				Calc_Trigger_Price = Cdbl(Right(RefPrice, (Len(RefPrice) -1))) - Cdbl(Formatnumber(obj4OrdTicketPage.Trigger_Delta,2,False,False,False))
				Else
				Calc_Trigger_Price = Cdbl(Right(RefPrice, (Len(RefPrice) -1))) + Cdbl(Formatnumber(obj4OrdTicketPage.Trigger_Delta,2,False,False,False))
				End If
				Trigger_Price = "$" & Formatnumber(Calc_Trigger_Price,2,False,False,False)	
				If instr(1,ActionType,"Sell") > 0 Then
					Calc_Stop_Lim_Price = Calc_Trigger_Price - Cdbl (obj4OrdTicketPage.Limit_Delta)
				Else
					Calc_Stop_Lim_Price = Calc_Trigger_Price + Cdbl (obj4OrdTicketPage.Limit_Delta)				
				End If				
				Stop_Lim_Price = "$" & Formatnumber(Calc_Stop_Lim_Price,2,False,False,False)				
			End If
			
			Offset = "$" & Formatnumber(obj4OrdTicketPage.Limit_Delta,2,False,False,False)			
			Trailing_Stop_perc = "N/A"
			Trailing_Stop_dollr = "$" & Formatnumber(obj4OrdTicketPage.Trigger_Delta,2,False,False,False)
		
	End Select
	
'Order Status

'Select Case obj4ConfirmPage.dictResults.Item("OrderStatus")
Select Case me.dictResults.Item("OrderStatus")
	Case "PLACED"
		OrderStatus = "Placed"
	Case "UNKNOWN"
		OrderStatus = "Unknown"
	Case "ACTIVE"
		OrderStatus = "Active"
	Case "DUMMY"
		OrderStatus = "Dummy"
	Case "ERROR"
		OrderStatus = "Error"
	Case "FILLED"
		OrderStatus = "Filled"
	Case "HISTORY"
		OrderStatus = "History"
	Case "ALL_INACTIVE"
		OrderStatus = "All Inactive"
	Case "INACTIVE"
		OrderStatus = "Inactive"
	Case "KILLED"
		OrderStatus = "Killed"
	Case "LOCKED"
		OrderStatus = "Locked"
	Case "MANUAL"
		OrderStatus = "Manual"
	Case "OPEN"
		OrderStatus = "Open"
	Case "PARTIALLY_FILLED"
		OrderStatus = "Partially Filled"
	Case "UPDATE"
		OrderStatus = "Update"
	Case "WAITING"
		OrderStatus = "Waiting"
	Case "CANCELLED"
		OrderStatus = "Cancelled"
	Case "REJECTED"
		OrderStatus = "Rejected"
	Case "ISM_PROBLEM"
		OrderStatus = "ISM Problem"
	Case "PENDING"
		OrderStatus = "Pending"
	Case "OPEN_PENDING_TRIGGER"
		OrderStatus = "Open Pending Trigger"
	Case "RECEIVED"
		OrderStatus = "Received"
	Case "SENT"
		OrderStatus = "Sent"
	Case "UNSENT"
		OrderStatus = "Unsent"
	Case "CONFIRMED"
		OrderStatus = "Confirmed"
	Case "CONTRACTED"
		OrderStatus = "Contracted"
	Case "CONFIRMED_TRANSMISSION"
		OrderStatus = "Confirmed Transmission"
	Case "TRANSMITTED"
		OrderStatus = "Transmitted"
	Case "ACKNOWLEDGED"
		OrderStatus = "Acknowledged"		
End Select


'Symbol Name
Select Case obj4OrdTicketPage.SecurityType
	Case "Options"
		SymbolName = obj4OrdTicketPage.SymName_Options & " - " & obj4PreviewPage.SymDescription
		
	Case "Equity"
		SymbolName = obj4ConfirmPage.dictResults.Item("symbol") &" " & obj4ConfirmPage.dictResults.Item("Market") & " - " & obj4PreviewPage.SymDescription
		'SymbolName = me.dictResults.Item("symbol") &" " & me.dictResults.Item("Market") & " - " & obj4PreviewPage.SymDescription
End Select

'Trader Instruction


		
'	'Date conversion - for expiry date
		
		
'		getDate = Split(dictResults.Item("Expiry_GTD"),"-")
'		
'		ExpMonth = Mid(MonthName(Month(dictResults.Item("Expiry_GTD"))),1,3)
'		ExpectedDate = getDate(2) & "-"&ExpMonth & "-" & getDate(0)
'		
		With oOrderDetailScreen
		
		.initValidatePage "AOE","AOE","Order Detail-Equity"
		.addValidateField "we_OrderDetail_header","Element","innertext","Order Details"
		
		'Ordernumber format is gonna change so commented order number section
		'.addValidateField "we_OrderDetail_hdrOrdNum","Element","innertext"," - "&obj4ConfirmPage.dictResults.Item("OrderNumber")
'Order Info Section		
		
		.addValidateField "we_OrderDetail_AccNo.","Element","innertext",obj4ConfirmPage.dictResults.Item("acctNumber")
		.addValidateField "we_OrderDetail_Symbol","Element","innertext",SymbolName
		.addValidateField "we_OrderDetail_Status","Element","innertext",OrderStatus
		.addValidateField "we_OrderDetail_Action","Element","innertext",ActionType		
		'.addValidateField "we_OrderDetail_ExpDate","Element","innertext", ExpectedDate
		.addValidateField "we_OrderDetail_Quant","Element","innertext", Formatnumber(obj4ConfirmPage.dictResults.Item("qty"),0,True,False,True)	
		.addValidateField "we_OrderDetail_Quant","Element","innertext", Formatnumber(obj4ConfirmPage.dictResults.Item("qty"),0,True,False,True)	
		
		.addValidateField "we_OrderDetail_OrdTyp","Element","innertext", orderType
		
		If Trim(me.dictResults.Item("OrderType")) =  "MARKET" Then
			.addValidateField "we_OrderDetail_Price","Element","innertext","MKT" 
		ElseIf me.dictResults.Item("Price") = "MKT" or me.dictResults.Item("Price") = ""  Then
			.addValidateField "we_OrderDetail_Price","Element","innertext","MKT" 		
		Else	
			On Error Resume Next
			.addValidateField "we_OrderDetail_Price","Element","innertext","$" & Formatnumber(obj4ConfirmPage.dictResults.Item("Price"),2,True,True,False)			
			
		End If		
		.addValidateField "we_OrderDetail_TransId","Element","innertext", obj4ConfirmPage.dictResults.Item("Trans_Id")	
'Price Section
		.addValidateField "we_OrderDetail_TrigPrice","Element","innertext",Trigger_Price
		.addValidateField "we_OrderDetail_Offset","Element","innertext",Offset
		.addValidateField "we_OrderDetail_StpLmtPrice","Element","innertext",Stop_Lim_Price
		.addValidateField "we_OrderDetail_TrailStp%","Element","innertext",Trailing_Stop_perc
		.addValidateField "we_OrderDetail_TrailStp$","Element","innertext",Trailing_Stop_dollr
'Commission Section
		.addValidateField "we_OrderDetail_CommType","Element","innertext",commType	
		.addValidateField "we_OrderDetail_EstPrinc","Element","innertext","$" & Formatnumber(obj4ConfirmPage.dictResults.Item("EstPrincipal"),2,True,True,True)
		
		.addValidateField "we_OrderDetail_CommVal","Element","innertext","$" & Formatnumber(dictResults.Item("CalcCommAmt"),2,True,True,True)
		.addValidateField "we_OrderDetail_EstTotal","Element","innertext","$" & Formatnumber(dictResults.Item("EstTotal"),2,True,True,True)
		
		If obj4OrdTicketPage.chfillNonmanInd = "Yes" Then
			.addValidateField "we_OrderDetail_FXRate","Element","innertext",obj4OrdTicketPage.chFXRate
		Else
			.addValidateField "we_OrderDetail_FXRate","Element","innertext","N/A"		
		End If	
		
'Agent Info
		.addValidateField "we_OrderDetail_UserId","Element","innertext",obj4OrdTicketPage.OSSId
		.addValidateField "we_OrderDetail_BhalfCode","Element","innertext",obj4ConfirmPage.dictResults.Item("BehalfCode")
		
			If obj4OrdTicketPage.Agent = "DI" Then					
					.addValidateField "we_OrderDetail_RR","Element","innertext",obj4ConfirmPage.dictResults.Item("AgentRRCode") 
			ElseIf obj4OrdTicketPage.Agent = "PIA" Then						
					.addValidateField "we_OrderDetail_RR","Element","innertext",obj4ConfirmPage.dictResults.Item("AcctRRCode")
			End If	
				
'Options
		If obj4OrdTicketPage.AM_Indicator = True Then
			.addValidateField "we_OrderDetail_AMInd","Element","innertext","YES"	
		Else
			.addValidateField "we_OrderDetail_AMInd","Element","innertext","NO"				
		End If
		
		'If obj4OrdTicketPage.fillNonmanInd = "Yes" Then
			Select Case obj4OrdTicketPage.ShareHolderStatus
				Case "Significant"
					.addValidateField "we_OrderDetail_SigShareHold","Element","innertext","YES"				
				Case "Insider"
					.addValidateField "we_OrderDetail_InsiderInd","Element","innertext","YES"				
			End Select
		'End If
		
'Instructions
			If obj4OrdTicketPage.fillNonmanInd = "Yes" Then
			.addValidateField "we_OrderDetail_CE","Element","innertext",obj4OrdTicketPage.ContractExcluded
			.addValidateField "we_OrderDetail_AddInfoCI1","Element","innertext",obj4OrdTicketPage.AddInfoContrInclude_1
			.addValidateField "we_OrderDetail_AddInfoCI2","Element","innertext",obj4OrdTicketPage.AddInfoContrInclude_2
			If obj4OrdTicketPage.ShareHolderStatus = "Significant" Then
				.addValidateField "we_OrderDetail_TradeInfo","Element","innertext","SIG_SHARE"
			ElseIf obj4OrdTicketPage.ShareHolderStatus = "Insider" Then	
				.addValidateField "we_OrderDetail_TradeInfo","Element","innertext","INSIDER"
			Else
				.addValidateField "we_OrderDetail_TradeInfo","Element","innertext",obj4OrdTicketPage.TraderInstruction			
			End If
					
			
			End If
			
			.ValidatePageFields
			'bvalidateODFields=.ValidatePageFields()
'			If bvalidateODFields=True Then
'				'ReportStatus "Pass","OrderDetailsValidation","Order Details values are displayed as expected"
'				Reporter.ReportEvent micPass,"OrderDetailsValidation","Order Details values are displayed as expected"
'			Else
'				'ReportStatus "Fail","OrderDetailsValidation","Order Details values are NOT displayed as expected"
'				Reporter.ReportEvent micFail, "OrderDetailsValidation","Order Details values are NOT displayed as expected"
'			End If
'			
		End With		
					
	End Function	
	
	Public Sub ClickChangeForSelectedOrder
	
	Dim TranID: TranID=""
	Dim OrderNum: OrderNum=""
	
	
	'//Close Order details screen
	If Browser("AOE").Page("AOE").WebElement("we_OrderDetailsClose").Exist(1) Then
		Browser("AOE").Page("AOE").WebElement("we_OrderDetailsClose").Click
	End If
	
	
	'//Refresh page
	Set obj4OrderStatusPage= new preparePage
	obj4OrderStatusPage.initPage "AOE","AOE"	
	obj4OrderStatusPage.clickWebButton "wb_Refresh"
	obj4OrderStatusPage.wait4Element "Edit","we_AccountSearchBox", 100000
	obj4OrderStatusPage.wait4Element "Table","wt_OrderList", 100000
	wait 4
	'obj4OrderStatusPage.clickWebButton "wb_Refresh"
	'obj4OrderStatusPage.wait4Element "Edit","we_AccountSearchBox", 100000
	
	'Browser("AOE").Page("AOE").WebButton("wb_Refresh").Click
	'Browser("AOE").Page("AOE").Sync
	
	'//Get Order number from DB	
	'sTransaction=cPage.TransId	
	sTransaction=DataTable.Value("TransID",Global)
	If sTransaction="" Then
		ReportStatus "Fail","Click Change Order ","Transaction ID is not retrieved from cPage-Exiting test"
		ExitTest
	End If	
	Set dictResults = Validate_OrderDetailsDB(sTransaction)	
	
	If dictResults is Nothing Then
		ReportStatus "Fail","Click Change Order ","No Record found in DB to get the order number for the TransID: "&sTransaction &"Exiting test"
		ExitTest
	End If	
	
	'//Add Transaction ID and order number to the data table
	'DataTable.GetSheet("Global").AddParameter "TransID",sTransaction
	'DataTable.GetSheet("Global").AddParameter "OrderNumber",dictResults.Item("OrderNumber")
	DataTable.Value("OrderNumber",Global)=dictResults.Item("OrderNumber")	
	
	'//Get latest order number & transaction id from data table
	'TranID=DataTable.Value("TransID",Global)
	OrderNum=DataTable.Value("OrderNumber",Global)

		'Set obj4ConfirmPage = oConfirmationPage
		'Dim sOrderNum:sOrderNum=""
		'sOrderNum=obj4ConfirmPage.dictResults.Item("OrderNumber")
		'Set obj4PreviewPage = oPreviewPage
		'Set obj4OrderDetailPage = new preparePage
		'Set obj4OrdTicketPage = oOrdertcktPage
		'Set oOrderDetailScreen = new ValidatePage
		
		'obj4OrderDetailPage.initPage BrowserName,PageName
		'obj4OrderDetailPage.clickWebElement "we_OrdTktConf_Close"
		'obj4OrderDetailPage.clickWebButton "wb_Done"
		'If obj4ConfirmPage.dictResults is Nothing Then
		'	ReportStatus "Fail","OrderDetailValidation ","No Record found in DB for the TransId -  " & TransId & " to retrieve the order from the orderpanel to validate orderdetails."
		'	ExitTest
		'Else				
			'obj4OrderDetailPage.wait4Element_NoReport "Table","wt_OrderList",10000 icon-edit.png
			
			'//Click change order icon of the order
			
			Set oDesc=Description.Create
			oDesc("micclass").Value= "WebTable"
			oDesc("html tag").Value= "TABLE"
			oDesc("html id").Value= "td-aoe-order-list-table-results"
				Set oObjCol=Browser("AOE").Page("AOE").ChildObjects(oDesc)
				
				Dim bIsFound: bIsFound = False
				
				If OrderNum="" Then
					ReportStatus "Fail","Order Status Page","Order Number is not available.Exiting Test"
					AOE_CloseBrowsers()
					ExitTest					
				End If
				For i = 2 To oObjCol(0).RowCount
					If Trim(oObjCol(0).GetCellData(i,2)) = OrderNum Then
						'//Get the order status & store it 
						DataTable.GetSheet("Global").AddParameter "OrderStatus",Ucase(Trim(oObjCol(0).GetCellData(i,6)))
						If Ucase(Trim(oObjCol(0).GetCellData(i,5)))="FILLED" Then
							ReportStatus "Fail","Order List Page","Order is already filled.Choose another non frequently traded symbol.Exiting Test:"&OrderNum
							bIsFound = True
							AOE_CloseBrowsers()	
							ExitTest						
						End If						
						oObjCol(0).ChildItem(i,1,"Image",0).Click
						wait 2
						ReportStatus "Pass","Order List Page","Change Image Clicked for the selected order:"&OrderNum
						bIsFound = True
						Exit For
					End If
				Next
				
				If bIsFound <> True Then
					ReportStatus "Fail","Order List Page","Order is NOT displayed in the Orderlist Page: "&OrderNum
					ExitTest
					AOE_CloseBrowsers()					
				End If
		'End If		
	End Sub
	

End Class

Class ComplexOrder_OrderTckPage
    Private ostrgyPage,coFlag,FillOrderPage,fordernum,m_Solicit_Element,m_UnSolicit_Element
    Public SecurityType,Agent,AccountNumber,cSymbol,cAction,cQuantity,cOrderType,cGoodTill,cCommType,CommValue,cCmplxOrdTyp,cFxRate,Price_Percentage,oFillOrdStructArr(),m_Functionality,cNumOfOrders
    Public oPrcCalc,CallPutValue,Limit_Price(),Trigger_Price(),Trigger_Delta(),Limit_Delta(),prv_GoodTillDate()',oPrcCalcArr(),Limit_Price,Trigger_Price,Trigger_Delta,Limit_Delta
    Public SolicitIndicator,CommExistence,EstCommissionValue(),TotalValue(),PrincipalValue(),AM_Indicator,AM_Already_Selected
    Public m_SymbolDesc(),m_SymbolName(),m_ExpDate(),m_StrikePrice(),SymName_Options(),GetAccountType, AccountType
    Public ContractExcluded,TraderInstruction,ShareHolderStatus,SeqNum_ExpiryDate,AddInfoContrInclude_2,AddInfoContrInclude_1,SelectedAccount,cMultipleOSSID,cUserID,cRRCode,m_Change_ValidateOrderDetails,RRCode,cOSSId,cAccountNumber
    Public fillNonmanInd,m_ValidatePassiveScreenInd,m_Change_ValidateFields,m_Cancel_ValidateFields,m_ValidatePreviewScreen,m_Change_ValidatePreviewScreen,m_Cancel_ValidatePreviewScreen,m_ValidateConfrmPage,m_Change_ValidateConfrmPage,m_Cancel_ValidateConfrmPage
    
	    Public Function init_ordTckPage(ByRef rDicObj,ByVal ordflag) ' ordflag value -> firsttimeFilling - 0 / change order - 1       
	        
	        If ordflag = 0 Then
	'Mandatory fields - type Action, Quantity,Symbol, Order type,Good Till, Commission type 
								
				SecurityType = Split(Trim(rDicObj.Item("SecurityType")),"|") 
				Agent = Trim(rDicObj.Item("Agent"))				
	            cSymbol = Split(Trim(rDicObj.Item("Symbol")),"|")
	            cQuantity = Split(Trim(rDicObj.Item("Quantity")),"|") 
	            cAction = Split(Trim(rDicObj.Item("Action")),"|")
	            cOrderType = Split(Trim(rDicObj.Item("OrderType")),"|")            
	            cGoodTill = Split(Trim(rDicObj.Item("GoodTill")),"|")
	            cCommType = Split(Trim(rDicObj.Item("CommType")),"|")    
	            cCmplxOrdTyp = Trim(rDicObj.Item("ComplexOrderType")) 
	            cNumOfOrders = Trim(rDicObj.Item("NumberOfOrders"))
				Price_Percentage = Cint(Trim(rDicObj.Item("Price_Percentage")))
				CommValue = Trim(rDicObj.Item("CommValue"))
				SolicitIndicator = Trim(rDicObj.Item("SolicitIndicator"))
				SeqNum_ExpiryDate = Trim(rDicObj.Item("SeqNum_ExpiryDate"))
				CallPutValue = Split(Trim(rDicObj.Item("CallPut")),"|") 
				m_Functionality = Trim(rDicObj.Item("Functionality"))
				m_ValidatePassiveScreenInd = Trim(rDicObj.Item("ValidatePassiveScreenInd"))
				AccountNumber = Trim(rDicObj.Item("AccountNumber"))
				m_Change_ValidateFields = Trim(rDicObj.Item("Change_ValidateFields"))
				m_Cancel_ValidateFields = Trim(rDicObj.Item("Cancel_ValidateFields"))
				m_ValidatePreviewScreen = Trim(rDicObj.Item("ValidatePreviewScreen"))
				m_Change_ValidatePreviewScreen = Trim(rDicObj.Item("Change_ValidatePreviewScreen"))
				m_Cancel_ValidatePreviewScreen = Trim(rDicObj.Item("Cancel_ValidatePreviewScreen"))
				m_ValidateConfrmPage = Trim(rDicObj.Item("ValidateConfrmPage"))
				m_Change_ValidateConfrmPage = Trim(rDicObj.Item("Change_ValidateConfrmPage"))
				m_Cancel_ValidateConfrmPage = Trim(rDicObj.Item("Cancel_ValidateConfrmPage"))
	            
	'Below fields are only for options
	'            Dim SeqNum_ExpiryDate: SeqNum_ExpiryDate = Split(Trim(rDicObj.Item("SeqNum_ExpiryDate")),"|")
	'			'Dim StrikePrice: '.weblist("wl_Opt_StrkPrice")
	'			Dim CallPutValue: CallPutValue = Split(Trim(rDicObj.Item("CallPut")),"|")
	'
	           fillNonmanInd = Trim(rDicObj.Item("FillNonMandatoryfields"))
	'            
	'nonMandatory fields - FxRate, Contract Excluded, Trader Instruction, Shareholder Status, Contract Included, contract Included 2
	            cFXRate = Split(Trim(rDicObj.Item("FXRate")),"|")
	            ContractExcluded = Split(Trim(rDicObj.Item("ContractExcluded")),"|")
	            TraderInstruction = Split(Trim(rDicObj.Item("TraderInstruction")),"|")
	            ShareHolderStatus = Split(Trim(rDicObj.Item("ShareHolderStatus")),"|")
	            AddInfoContrInclude_1 = Split(Trim(rDicObj.Item("AddInfoContrInclude_1")),"|")
	            AddInfoContrInclude_2 = Split(Trim(rDicObj.Item("AddInfoContrInclude_2")),"|")
	            If UCase(m_Functionality) = "CHANGE" Then
	            	cUserID = Trim(rDicObj.Item("UserID"))	'Change
					cOSSId = Trim(rDicObj.Item("OSSID_Change"))	'Change
					'cMultipleOSSID = Trim(rDicObj.Item("MultipleOSSID"))	'Change						
	            End If
	        Else
	'            'Add all the fields which needs to be filled for change Quantity
	'            cQuantity = Split(Trim(rDicObj.Item("ChangeQuantity")),";")
	'            'cGoodTill = Change_GoodTill
	
				cAccountNumber = Trim(rDicObj.Item("AccountNumber_Change")) 'Change
				cUserID = Trim(rDicObj.Item("UserID"))	'Change
				cOSSId = Trim(rDicObj.Item("OSSID_Change"))	'Change
				cRRCode = Trim(rDicObj.Item("RRCode_Change"))	'Change
				SecurityType = Split(Trim(rDicObj.Item("SecurityType")),"|") 
				Agent = Trim(rDicObj.Item("Agent"))	
				cMultipleOSSID = Trim(rDicObj.Item("MultipleOSSID"))	'Change				
	            cSymbol = Split(Trim(rDicObj.Item("Symbol")),"|")
	            cQuantity = Split(Trim(rDicObj.Item("Quantity_Change")),"|")  'Change
	            cAction = Split(Trim(rDicObj.Item("Action")),"|")
	            cOrderType = Split(Trim(rDicObj.Item("OrderType_Change")),"|")     'Change       
	            cGoodTill = Split(Trim(rDicObj.Item("GoodTill_Change")),"|")		'Change
	            cCommType = Split(Trim(rDicObj.Item("CommType_Change")),"|")    	'Change
	            cCmplxOrdTyp = Trim(rDicObj.Item("ComplexOrderType")) 
	            cNumOfOrders = Trim(rDicObj.Item("NumberOfOrders"))
				Price_Percentage = Cint(Trim(rDicObj.Item("Price_Percentage_Change")))	'Change
				CommValue = Trim(rDicObj.Item("CommValue_Change"))						'Change
				SolicitIndicator = Trim(rDicObj.Item("SolicitIndicator_Change"))'Change
				SeqNum_ExpiryDate = Trim(rDicObj.Item("SeqNum_ExpiryDate"))
				CallPutValue = Split(Trim(rDicObj.Item("CallPut")),"|") 
				m_Functionality = Trim(rDicObj.Item("Functionality"))
				m_ValidatePassiveScreenInd = Trim(rDicObj.Item("ValidatePassiveScreenInd"))
				AccountNumber = Trim(rDicObj.Item("AccountNumber"))
				m_Change_ValidateFields = Trim(rDicObj.Item("Change_ValidateFields"))				
				m_ValidatePreviewScreen = Trim(rDicObj.Item("ValidatePreviewScreen"))
				m_Change_ValidatePreviewScreen = Trim(rDicObj.Item("Change_ValidatePreviewScreen"))
				m_Cancel_ValidatePreviewScreen = Trim(rDicObj.Item("Cancel_ValidatePreviewScreen"))
				m_ValidateConfrmPage = Trim(rDicObj.Item("ValidateConfrmPage"))
				m_Change_ValidateConfrmPage = Trim(rDicObj.Item("Change_ValidateConfrmPage"))
				m_Cancel_ValidateConfrmPage = Trim(rDicObj.Item("Cancel_ValidateConfrmPage"))
				m_Change_ValidateOrderDetails = Trim(rDicObj.Item("Change_ValidateOrderDetails"))'Change
	            
	'Below fields are only for options
	'            Dim SeqNum_ExpiryDate: SeqNum_ExpiryDate = Split(Trim(rDicObj.Item("SeqNum_ExpiryDate")),"|")
	'			'Dim StrikePrice: '.weblist("wl_Opt_StrkPrice")
	'			Dim CallPutValue: CallPutValue = Split(Trim(rDicObj.Item("CallPut")),"|")
	'
	           fillNonmanInd = Trim(rDicObj.Item("FillNonMandatoryfields"))
	'            
	'nonMandatory fields - FxRate, Contract Excluded, Trader Instruction, Shareholder Status, Contract Included, contract Included 2
	            cFXRate = Split(Trim(rDicObj.Item("FXRate")),"|")
	            ContractExcluded = Split(Trim(rDicObj.Item("ContractExcluded_Change")),"|")'Change
	            TraderInstruction = Split(Trim(rDicObj.Item("TraderInstruction_Change")),"|")'Change
	            ShareHolderStatus = Split(Trim(rDicObj.Item("ShareHolderStatus")),"|")
	            AddInfoContrInclude_1 = Split(Trim(rDicObj.Item("AddInfoContrInclude_1_Change")),"|")'Change
	            AddInfoContrInclude_2 = Split(Trim(rDicObj.Item("AddInfoContrInclude_2_Change")),"|")'Change
	        End If        
	        
	                
		        Set ostrgyPage = new preparePage
		        ostrgyPage.initPage "AOE", "AOE"
			If ordflag = 0 Then
			        ostrgyPage.clickWebElement "we_stratergiesTab"
			        ostrgyPage.pSync
			        Select Case cCmplxOrdTyp
			        	Case "OneCancelOther"
			        		ostrgyPage.clickWebButton("wb_OneCancelOther")
			        	Case "OneTriggersAnother"
			        		ostrgyPage.clickWebButton("wb_OneTriggersAnother")
			        	Case "MultiLegOption"
			        		ostrgyPage.clickWebButton("wb_MultiLegOption")
			        End Select	
			End If

		  	If UCase(m_Functionality) = "CHANGE" Then	            	
					If ostrgyPage.valEleExist_NoReport("List","we_Ordtkt_OSS_ID") = True Then
						cMultipleOSSID = "Yes"
					Else
						cMultipleOSSID = "No"		
					End If
	            End If
	               
	                
	    End Function
	    
	    
	    
	    Public Function fillOrder(ByVal ordernum,ByVal strFunctionality) 'fordernum = 0 or 1; 0 --> Fills the first value in the first Order; 1 --> fills the second value in the Second order		
			fordernum = ordernum
			ReDim Preserve oFillOrdStructArr(fordernum)
			Set oFillOrdStructArr(fordernum) = New fillPage		
			oFillOrdStructArr(fordernum).setPageObject "AOE", "AOE"			
			Set oPrcCalc = new PriceCalculation	
			
			If UCase(Trim(strFunctionality)) = "PLACE" Then				'//For place Order
				AM_Already_Selected = False
				With oFillOrdStructArr(fordernum)	
					Print "Fill order num - " & cint(fordernum)+1
					'Commented this section, as Option is disable for this release - Aug 22
					If Trim(UCASE(cCmplxOrdTyp)) = "ONETRIGGERSANOTHER" or Trim(UCASE(cCmplxOrdTyp)) = "MULTILEGOPTION" Then
						.addPageField "wl_SecurityType"&"_"&fordernum,"List",SecurityType(fordernum) 
					End If
					
					.addPageField "wl_OrdTkt_Action"&"_"&fordernum,"List",cAction(fordernum)
					.addPageField "weNum_OrdTkt_Quant"&"_"&fordernum,"Number",cQuantity(fordernum) 
					.addPageField "e_OrdTkt_Symbol"&"_"&fordernum,"Edit",cSymbol(fordernum) 
					.addPageField "wl_OrdTkt_OrdType"&"_"&fordernum,"List",cOrderType(fordernum) 
					.addPageField "wl_OrdTkt_Gdtill"&"_"&fordernum,"List",cGoodTill(fordernum)					
					ReDim Preserve prv_GoodTillDate(fordernum)
					If cGoodTill(fordernum) = "GTD" Then									
						.Get_GoodTillDate()					
						prv_GoodTillDate(fordernum) = oFillOrdStructArr(fordernum).prv_GoodTillDate
						.addPageField "e_OrdTkt_GTDDate"&"_"&fordernum,"Edit", oFillOrdStructArr(fordernum).fill_GoodTillDate
					Else 
						prv_GoodTillDate(fordernum) = cGoodTill(fordernum)
					End If				
				
					.addPageField "wl_Commissiontype"&"_"&fordernum,"List",cCommType(fordernum)
						Select Case cCommType(fordernum)
							Case "Cents/Share"
								.addPageField "weNum_CentShare"&"_"&fordernum,"Number",CommValue						
							Case "% Of Schedule"
								.addPageField "weNum_%Schedule"&"_"&fordernum,"Number",CommValue						
							Case "Prefigured"
							    .addPageField "weNum_Prefigured"&"_"&fordernum,"Number",CommValue					    
							 Case "EBS Schedule"
								 .addPageField "weNum_OrdTkt_TrigDelta"&"_"&fordernum, "Number",CommValue						
					  	End Select
				.addPageField "weNum_Ordtkt_Price"&"_"&fordernum,"Number",Price_Percentage

'''' Fill the Below fields only for MLO order 					  		
'					If Trim(UCASE(cCmplxOrdTyp)) = "MULTILEGOPTION" Then
'						index_ordernum = 1						
'						.addPageField "wl_OrdTkt_Action_2_MLO","List",cAction(index_ordernum)
'						.addPageField "weNum_OrdTkt_Quant_2_MLO","Number",cQuantity(fordernum) 
'						
'					End If 		
					  
										  
'''' Fill the Non Mandatory fields 					  		
					If fillNonmanInd = "Yes" Then      
						ostrgyPage.clickWebElement "we_ExpandAddionaltInfo"&"_"&fordernum
		            	.addPageField "weNum_Ord_FXRate"&"_"&fordernum,"Number",cFXRate(fordernum)
		                .addPageField "e_Ord_ContrExclud"&"_"&fordernum,"Edit",ContractExcluded(fordernum)
		                .addPageField "e_Ord_TradInstr"&"_"&fordernum, "Edit", TraderInstruction(fordernum)     
		                .addPageField "wl_OrdShareHolder"&"_"&fordernum,"List",ShareHolderStatus(fordernum)	                
		                .addPageField "AddInfoContrInclude1"&"_"&fordernum,"Edit", AddInfoContrInclude_1(fordernum)
		                .addPageField "AddInfoContrInclude2"&"_"&fordernum, "Edit",AddInfoContrInclude_2(fordernum)                
            		End If 
            		
					.fillPageFields					
		
					
					'******** Below Sections are only for Options ********************	
					If SecurityType(fordernum) = "Option" Then	
						print "Continue with Option"
						Dim waitsec
						waitsec = 2		
						Do
							Dim itemcount
							itemcount = ostrgyPage.getEProperty("List","wl_Opt_ExpDate"&"_"&fordernum,"items count")
							Dim CalcWait
							CalcWait = CalcWait + waitsec
							If CalcWait > 10 and itemcount <2 Then
								Reportstatus "Warning","No Values - Expiry DropDown", "No Values displayed in the Expiry Date for "&fordernum
								Exit Do
							End If
							Wait waitsec										
						Loop While itemcount < 2 											
						
						If cint(itemcount) < cint(SeqNum_ExpiryDate) or cint(itemcount) = cint(SeqNum_ExpiryDate) Then							
							.addPageField "wl_Opt_ExpDate"&"_"&fordernum,"List_Seq", 2
							.fillPageFieldsByPos .nOfPageFields	
						Else
							.addPageField "wl_Opt_ExpDate"&"_"&fordernum,"List_Seq",Cint(SeqNum_ExpiryDate)	
							.fillPageFieldsByPos .nOfPageFields								
						End If
						Dim StrikePrice_itemCount
						StrikePrice_itemCount = ostrgyPage.getEProperty("List","wl_Opt_StrkPrice"&"_"&fordernum,"items count")
						
						If StrikePrice_itemCount > 2 Then
							Select Case CallPutValue(fordernum)
								Case "Call"
									.addPageField "wl_Opt_StrkPrice"&"_"&fordernum,"List_Seq", 3
									.fillPageFieldsByPos .nOfPageFields	
								Case "Put"
									.addPageField "wl_Opt_StrkPrice"&"_"&fordernum,"List_Seq",Cint(StrikePrice_itemCount)-1
									.fillPageFieldsByPos .nOfPageFields
							End Select
						ElseIf StrikePrice_itemCount < 3 Then	
							Select Case CallPutValue(fordernum)
								Case "Call"
									.addPageField "wl_Opt_StrkPrice"&"_"&fordernum,"List_Seq",1
									.fillPageFieldsByPos .nOfPageFields	
								Case "Put"
									.addPageField "wl_Opt_StrkPrice"&"_"&fordernum,"List_Seq",1
									.fillPageFieldsByPos .nOfPageFields
							End Select
						End If
						.addPageField "wl_Opt_CallPut"&"_"&fordernum,"List",CallPutValue(fordernum)
						.fillPageFieldsByPos .nOfPageFields	
										
					End If
'Below Section is to fill the Option leg Exclusively for MLO					
'					If Trim(UCASE(cCmplxOrdTyp)) = "MULTILEGOPTION" Then
'						orderindex = 1
'						print "Continue with MLO Option"
'						Dim waitsec_MLO
'						waitsec_MLO = 2		
'						Do
'							Dim itemcount_MLO
'							itemcount_MLO = ostrgyPage.getEProperty("List","wl_Opt_ExpDate_2_MLO","items count")
'							Dim CalcWait_MLO
'							CalcWait_MLO = CalcWait_MLO + waitsec_MLO
'							If CalcWait_MLO > 10 and waitsec_MLO < 2 Then
'								Reportstatus "Warning","No Values - Expiry DropDown", "No Values displayed in the Expiry Date for MLO Option "&Cint(orderindex)+1
'								Exit Do
'							End If
'							Wait waitsec_MLO										
'						Loop While itemcount_MLO < 2 											
'						
'						If cint(itemcount_MLO) < cint(SeqNum_ExpiryDate) or cint(itemcount_MLO) = cint(SeqNum_ExpiryDate) Then							
'							.addPageField "wl_Opt_ExpDate_2_MLO","List_Seq", 3
'							.fillPageFieldsByPos .nOfPageFields	
'						Else
'							.addPageField "wl_Opt_ExpDate_2_MLO","List_Seq",Cint(SeqNum_ExpiryDate)	
'							.fillPageFieldsByPos .nOfPageFields								
'						End If
'						Dim StrikePrice_itemCount_MLO
'						StrikePrice_itemCount_MLO = ostrgyPage.getEProperty("List","wl_Opt_StrkPrice_2_MLO","items count")
'						
'						If StrikePrice_itemCount_MLO > 2 Then
'							Select Case CallPutValue(orderindex)
'								Case "Call"
'									.addPageField "wl_Opt_StrkPrice_2_MLO","List_Seq", 3
'									.fillPageFieldsByPos .nOfPageFields	
'								Case "Put"
'									.addPageField "wl_Opt_StrkPrice_2_MLO","List_Seq",Cint(StrikePrice_itemCount_MLO)-1
'									.fillPageFieldsByPos .nOfPageFields
'							End Select
'						ElseIf StrikePrice_itemCount_MLO < 3 Then	
'							Select Case CallPutValue(orderindex)
'								Case "Call"
'									.addPageField "wl_Opt_StrkPrice_2_MLO","List_Seq",2
'									.fillPageFieldsByPos .nOfPageFields	
'								Case "Put"
'									.addPageField "wl_Opt_StrkPrice_2_MLO","List_Seq",2
'									.fillPageFieldsByPos .nOfPageFields
'							End Select
'						End If
'						.addPageField "wl_Opt_CallPut_2_MLO","List",CallPutValue(orderindex)
						'.fillPageFieldsByPos .nOfPageFields	
'						End If
					
			'***********Above section only for options 8***********************	
'				If Trim(UCASE(cCmplxOrdTyp)) <> "MULTILEGOPTION" Then			
						If SecurityType(fordernum) = "Equity" Then	
							oPrcCalc.initialise_PriceCalculation(fordernum) 
							oPrcCalc.init_PriceCalc cOrderType(fordernum),Price_Percentage,cAction(fordernum)	
						ElseIf SecurityType(fordernum) = "Option" Then					
							oPrcCalc.initialise_PriceCalculation(fordernum) 						
							oPrcCalc.PriceCalc_Options cOrderType(fordernum),Price_Percentage,cAction(fordernum)					
						End If	
					
		
						ReDim Preserve Limit_Price(fordernum)
						ReDim Preserve Trigger_Price(fordernum)
						ReDim Preserve Trigger_Delta(fordernum)
						ReDim Preserve Limit_Delta(fordernum)
						
						Limit_Price(fordernum) = oPrcCalc.Limit_Price					
						Trigger_Price(fordernum) = oPrcCalc.Trigger_Price					
						Trigger_Delta(fordernum)= oPrcCalc.Trigger_Delta					
						Limit_Delta(fordernum)= oPrcCalc.Limit_Delta
	
						
						Select Case cOrderType(fordernum)
							Case "Limit","Net Debit","Net Credit"
								.addPageField "weNum_Ordtkt_Price"&"_"&fordernum,"Number",Limit_Price(fordernum)
								.fillPageFieldsByPos .nOfPageFields	
							Case "Stop Market"
								.addPageField "weNum_Ordtkt_Price"&"_"&fordernum,"Number",Trigger_Price(fordernum)
								.fillPageFieldsByPos .nOfPageFields
							Case "Stop Limit"
							    .addPageField "weNum_Ordtkt_Price"&"_"&fordernum,"Number",Trigger_Price(fordernum)
							    .fillPageFieldsByPos .nOfPageFields
							    .addPageField "weNumOrdTkt_stpLmtPrice"&"_"&fordernum,"Number",Limit_Price(fordernum)
							    .fillPageFieldsByPos .nOfPageFields
							 Case "Trailing Stop"
								 .addPageField "weNum_OrdTkt_TrigDelta"&"_"&fordernum, "Number",Trigger_Delta(fordernum)
								 .fillPageFieldsByPos .nOfPageFields
							 Case "Trailing Stop Limit"
								 .addPageField "weNum_OrdTkt_TrigDelta"&"_"&fordernum, "Number",Trigger_Delta(fordernum)
								 .fillPageFieldsByPos .nOfPageFields
								 .addPageField "weNum_OrdTkt_LmtDelta"&"_"&fordernum, "Number",Limit_Delta(fordernum)
								 .fillPageFieldsByPos .nOfPageFields						    					
					  	End Select		
'				End If
			End With				
				
			
			ElseIf UCase(Trim(strFunctionality)) = "CHANGE" Then   '//For change Order
				AM_Already_Selected = True
				With oFillOrdStructArr(fordernum)	
					Print "Fill change order num - " &fordernum
					
					
					'//Change Account Number
					If (cAccountNumber<>"" AND StrComp(AccountNumber,cAccountNumber,1)<>0) And fordernum = 0 Then			
									
						If ostrgyPage.valEleExist_NoReport("Button","wb_OrdTktAcctChange") Then					
							ostrgyPage.clickWebButton "wb_OrdTktAcctChange"							
							ostrgyPage.wait4Element_NoReport "Edit","we_OrdTkt_AccountSearchBox",30000
							If ostrgyPage.getEProperty("Edit","we_OrdTkt_AccountSearchBox","height") <1 Then							
								Reportstatus "Fail","ChangeAccount","we_OrdTkt_AccountSearchBox not found after clicking the change button" 
							Else
								ostrgyPage.setWebEdit "we_OrdTkt_AccountSearchBox", cAccountNumber
								ostrgyPage.wait4Element_NoReport "List","wl_AccountList",60000
								'//Check if the account is selected in the drop down
								CalcWait = 0
								waitsec = 2
								Do
									CalcWait = CalcWait + waitsec
									If CalcWait > 60 Then
										Reportstatus "Fail","AccountInContext","Account not selected in Change Order Ticket"
										Exit Do
									End If
									Wait waitsec			
									AccountSelected = ostrgyPage.getEProperty ("List","wl_SelectAccount","selection")			
										
								Loop While (instr(1,AccountSelected,cAccountNumber,1) < 1)	
							End if
									
						Else
							ReportStatus "Fail","ChangeAccount","Change button is not found"							
						End If
						wait 2						
					End If
					'Change OSSId
					If Ucase(cMultipleOSSID) = "YES" And cOSSId <> "" And fordernum = 0 Then						
						.addPageField "we_Ordtkt_OSS_ID","List",cOSSId
					End If
					'RRCode
					If Agent = "PIA" And cRRCode <> "" And fordernum = 0 Then
						.addPageField "e_OrdTkt_RRCode","Edit",cRRCode
					End If					
					
					.addPageField "weNum_OrdTkt_Quant"&"_"&fordernum,"Number",cQuantity(fordernum) 					
					.addPageField "wl_OrdTkt_OrdType"&"_"&fordernum,"List",cOrderType(fordernum) 
					
					If Environment.Value("Order1_status") <> "Filled" and Environment.Value("Order2_status") <> "Filled" Then
						.addPageField "wl_OrdTkt_Gdtill"&"_"&fordernum,"List",cGoodTill(fordernum)	
						ReDim Preserve prv_GoodTillDate(fordernum)
						If cGoodTill(fordernum) = "GTD" Then									
							.Get_GoodTillDate()					
							prv_GoodTillDate(fordernum) = oFillOrdStructArr(fordernum).prv_GoodTillDate
							.addPageField "e_OrdTkt_GTDDate"&"_"&fordernum,"Edit", oFillOrdStructArr(fordernum).fill_GoodTillDate
						Else 
							prv_GoodTillDate(fordernum) = cGoodTill(fordernum)
						End If		
					End If
					
							
				
					.addPageField "wl_Commissiontype"&"_"&fordernum,"List",cCommType(fordernum)
						Select Case cCommType(fordernum)
							Case "Cents/Share"
								.addPageField "weNum_CentShare"&"_"&fordernum,"Number",CommValue						
							Case "% Of Schedule"
								.addPageField "weNum_%Schedule"&"_"&fordernum,"Number",CommValue						
							Case "Prefigured"
							    .addPageField "weNum_Prefigured"&"_"&fordernum,"Number",CommValue					    
							 Case "EBS Schedule"
								 .addPageField "weNum_OrdTkt_TrigDelta"&"_"&fordernum, "Number",CommValue						
					  		End Select
					  
										  
'''' Fill the Non Mandatory fields 					  		
					If fillNonmanInd = "Yes" Then      
						ostrgyPage.clickWebElement "we_ExpandAddionaltInfo"&"_"&fordernum
		            	.addPageField "weNum_Ord_FXRate"&"_"&fordernum,"Number",cFXRate(fordernum)
		                .addPageField "e_Ord_ContrExclud"&"_"&fordernum,"Edit",ContractExcluded(fordernum)
		                .addPageField "e_Ord_TradInstr"&"_"&fordernum, "Edit", TraderInstruction(fordernum)		                	                
		                .addPageField "AddInfoContrInclude1"&"_"&fordernum,"Edit", AddInfoContrInclude_1(fordernum)
		                .addPageField "AddInfoContrInclude2"&"_"&fordernum, "Edit",AddInfoContrInclude_2(fordernum)                
            		End If 					            		
					

					.fillPageFields					
		
						
					If SecurityType(fordernum) = "Equity" Then					
'						oPrcCalcArr(fordernum).initialise_PriceCalculation(fordernum) 
'						oPrcCalcArr(fordernum).init_PriceCalc cOrderType(fordernum),Price_Percentage,cAction(fordernum)	
						oPrcCalc.initialise_PriceCalculation(fordernum) 
						oPrcCalc.init_PriceCalc cOrderType(fordernum),Price_Percentage,cAction(fordernum)	
					ElseIf SecurityType(fordernum) = "Option" Then					
						oPrcCalc.initialise_PriceCalculation(fordernum) 						
						oPrcCalc.PriceCalc_Options cOrderType(fordernum),Price_Percentage,cAction(fordernum)					
					End If					
	
					ReDim Preserve Limit_Price(fordernum)
					ReDim Preserve Trigger_Price(fordernum)
					ReDim Preserve Trigger_Delta(fordernum)
					ReDim Preserve Limit_Delta(fordernum)
					
					Limit_Price(fordernum) = oPrcCalc.Limit_Price					
					Trigger_Price(fordernum) = oPrcCalc.Trigger_Price					
					Trigger_Delta(fordernum)= oPrcCalc.Trigger_Delta					
					Limit_Delta(fordernum)= oPrcCalc.Limit_Delta				

					
					Select Case cOrderType(fordernum)
						Case "Limit"
							.addPageField "weNum_Ordtkt_Price"&"_"&fordernum,"Number",Limit_Price(fordernum)
							.fillPageFieldsByPos .nOfPageFields	
						Case "Stop Market"
							.addPageField "weNum_Ordtkt_Price"&"_"&fordernum,"Number",Trigger_Price(fordernum)
							.fillPageFieldsByPos .nOfPageFields
						Case "Stop Limit"
						    .addPageField "weNum_Ordtkt_Price"&"_"&fordernum,"Number",Trigger_Price(fordernum)
						    .fillPageFieldsByPos .nOfPageFields
						    .addPageField "weNumOrdTkt_stpLmtPrice"&"_"&fordernum,"Number",Limit_Price(fordernum)
						    .fillPageFieldsByPos .nOfPageFields
						 Case "Trailing Stop"
							 .addPageField "weNum_OrdTkt_TrigDelta"&"_"&fordernum, "Number",Trigger_Delta(fordernum)
							 .fillPageFieldsByPos .nOfPageFields
						 Case "Trailing Stop Limit"
							 .addPageField "weNum_OrdTkt_TrigDelta"&"_"&fordernum, "Number",Trigger_Delta(fordernum)
							 .fillPageFieldsByPos .nOfPageFields
							 .addPageField "weNum_OrdTkt_LmtDelta"&"_"&fordernum, "Number",Limit_Delta(fordernum)
							 .fillPageFieldsByPos .nOfPageFields						    					
				  	End Select		           			                    
				End With
				
			End If 	
			
	    		'Click Calculate Button
				If fordernum = 1 and m_Functionality <> "Error" Then
						ExpandOrder(1)
						ClickCalculate(0)
						ExpandOrder(1)	
						ExpandOrder(0)						
						ClickCalculate(1)
						ExpandOrder(0)
				ElseIf Trim(UCASE(cCmplxOrdTyp)) <> "MULTILEGOPTION" Then	
					ClickCalculate(0)		
				End If				 
	
	    End Function 
	    
	    
	    Public Sub ClickCalculate(ByVal ordernum)
	    	ostrgyPage.clickWebButton "wb_CommCalculate"&"_"&ordernum
	    	If Trim(UCASE(cCmplxOrdTyp)) = "MULTILEGOPTION" Then
	    		ostrgyPage.wait4Element_NoReport "Element","we_OrdTkt_CommValue_Block"&"_"&Ordernum,10000
	    	Else
				GetcommissionValue(ordernum)	    	
	    	End If
	    	
	    End Sub
	    
	    Public Sub GetcommissionValue(Ordernum)
	    	ostrgyPage.wait4Element_NoReport "Element","we_OrdTkt_CommValue_Block"&"_"&Ordernum,10000
	    	CommExistence = ostrgyPage.valEleExist_NoReport("Element","we_OrdTkt_CommValue_Block"&"_"&Ordernum)
	    		
	    		ReDim Preserve PrincipalValue(Ordernum)
				ReDim Preserve EstCommissionValue(Ordernum)
				ReDim Preserve TotalValue(Ordernum)
				
	    		
		    	If CommExistence = False Then
					ReportStatus "Fail", "Values Not displayed", "Commission,Principal and total values didn't display in the Order entry Page" 			
					Exit Sub
				ElseIf instr(ostrgyPage.getEProperty("Element","we_OrdTkt_TotalValue"&"_"&Ordernum,"outertext"),"N/A")>0  Then	
					ReportStatus "Fail", "ValuesDisplay", "Commission,Principal and total values displayed as N/A in the Order entry Page"   
					Exit Sub	
				Else
					PrincipalValue(Ordernum) = ostrgyPage.getEProperty("Element","we_OrdTkt_PrincipalValue"&"_"&Ordernum,"innertext")
					
					print "PrincipalValue displayed in Order Ticket Page for OrderNumber" &Ordernum & ":- "&PrincipalValue(Ordernum)	
					
					EstCommissionValue(Ordernum) = ostrgyPage.getEProperty ("Element","we_OrdTkt_CommValue"&"_"&Ordernum,"innertext")
					
					print "Est commission displayed in Order Ticket Page for OrderNumber" &Ordernum & ":- "	& EstCommissionValue(Ordernum)					
				
					TotalValue(Ordernum) = ostrgyPage.getEProperty("Element","we_OrdTkt_TotalValue"&"_"&Ordernum,"innertext")
					
					print "TotalValue displayed in Order Ticket Page for OrderNumber" &Ordernum & ":- " &TotalValue(Ordernum)					
				End If					
	    End Sub
	    
    
	    Public Sub ExpandOrder(fordernum) ' 	
	    		Print "Expand Order : "&fordernum
	    	Select Case fordernum
	    		Case 0 
	    			ostrgyPage.clickWebElement "we_OCO_Open2ndOrder"
	    			'ostrgyPage.ClickImage "Im_OCO_Open1stOrder"						    			
	    		Case 1
					 'ostrgyPage.ClickImage "we_OCO_Open1stOrder"
					ostrgyPage.clickWebElement "we_OCO_Open1stOrder"					 
					If m_ValidatePassiveScreenInd = "Yes" Then
						ValidatePassiveScreen(fordernum)
					End If						 
	    	End Select
	    	
	    End Sub    

	    
	    Public Sub SelectAMIndicator() 
	    	
	    	If AM_Already_Selected <> True Then	    	
	    
				If cGoodTill(0) <> "GTEM" or cGoodTill(1) <> "GTEM" Then
					currentTime=Now
					currentTime=RTrim(currentTime)
					sTempHour = Hour(currentTime)
					sTempTime = Right(currentTime, 2)
					If sTempTime = "AM" Then
						If trim(sTempHour) < 8  Then
								nTemp=ostrgyPage.getEProperty("Element","we_OrdTkt_AM","checked")
								If nTemp=0 Then
									Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
									ostrgyPage.clickWebElement "we_OrdTkt_AM"
									'Browser("AOE").Page("AOE").WebElement("we_OrdTkt_AM").Click 
									Setting.WebPackage("ReplayType") = 1 ''1-Runs mouse operations using browser events				
								End If
							AM_Indicator = True
						End If
					End If
					If sTempTime = "PM" Then
						If trim(sTempHour) > 15 Then							
								nTemp=ostrgyPage.getEProperty("Element","we_OrdTkt_AM","checked")
								If nTemp=0 Then
									Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
									ostrgyPage.clickWebElement "we_OrdTkt_AM"
									'Browser("AOE").Page("AOE").WebElement("we_OrdTkt_AM").Click 
									Setting.WebPackage("ReplayType") = 1 ''1-Runs mouse operations using browser events	
								End If
							AM_Indicator = True
						End If
					End If
				End If
		End If	
			
	    End Sub
	    
	    Public Sub SelectSolicitInd
	    	If SolicitIndicator = "Solicited" Then
	    		Setting.WebPackage("ReplayType") = 2
	    		ostrgyPage.clickWebElement "we_OrdTkt_Solicited"
	    		Setting.WebPackage("ReplayType") = 1
	    	ElseIf SolicitIndicator = "UnSolicited" Then
				Setting.WebPackage("ReplayType") = 2	    	
	    		ostrgyPage.clickWebElement "we_OrdTkt_UnSolicited"
	    		Setting.WebPackage("ReplayType") = 1
	    	End If
	    End Sub    
	    
	    	    
	    Public Sub clickPreviewOrder
	    	'Check if the Screen is Place screen or Cancel Screen; If the Symbol Field is disabled then the screen opened is Cancel Screen
	    	
	    	
	    	Symbolfield = ostrgyPage.getElementProperty("Edit","e_OrdTkt_Symbol_0","disabled")
	    	
	    	
	    	If Agent = "PIA" And Symbolfield <> "1" Then 
	    		If UCase(m_Functionality) <> "CHANGE" Then
	    			SelectAMIndicator()
	    			SelectSolicitInd
					Setting.WebPackage("ReplayType") = 2	    	 
			    	ostrgyPage.clickWebButton "wb_OrdTkt_Preview"
			    	Setting.WebPackage("ReplayType") = 1
			    	VerifyError
			    Else
			    	SelectAMIndicator()
			    	SelectSolicitInd
					'Setting.WebPackage("ReplayType") = 2	    	 
	    			ostrgyPage.clickWebButton "wb_OrdTkt_Preview"
	    			VerifyError
	    			'Browser("AOE").Page("AOE").WebElement("wb_OrdTkt_Preview").Highlight
	    			'Browser("AOE").Page("AOE").WebElement("wb_OrdTkt_Preview").Click
	    			
	    			'Setting.WebPackage("ReplayType") = 1
	    		End If	    	
	    		
	    	Else
	    		
	    	 	SelectAMIndicator()	    	 
		    	'Setting.WebPackage("ReplayType") = 2	    	 
		    	ostrgyPage.clickWebButton "wb_OrdTkt_Preview"
		    	'Setting.WebPackage("ReplayType") = 1
		    	
		    	VerifyError
		    	''Remove below code once Preview Page is implemented
		    	'Wait 5
	'	    	If Agent = "PIA" and ostrgyPage.valEleExist("Element","we_Pretrade_Disclosure")  Then
	'				ostrgyPage.clickWebElement("we_Pretrade_Disclosure")
	'			End If
	'	    	ostrgyPage.clickWebButton "wb_OrdTkt_Agree"
	    	End If    	
	   
	    End Sub  
	    
	    
	    'Check for Error Message after clicking Preview Button
		Public Sub VerifyError
							
				If ostrgyPage.valEleExist_NoReport("Element","we_OrdTktUnableToPreviewErr") = True Then
						Wait 5
						Setting.WebPackage("ReplayType") = 2	    	 
				    	ostrgyPage.clickWebButton "wb_OrdTkt_Preview"
				    	Setting.WebPackage("ReplayType") = 1
				    	
						If ostrgyPage.valEleExist_NoReport("Element","we_OrdTktUnableToPreviewErr") = True Then
							ReportStatus "Fail","Order Page - Error","Error is displayed in OrderTicket Page " &vbcrlf & ostrgyPage.getEProperty("Element","we_OrdTktUnableToPreviewErr","innertext")
							ExitTest
						End If	
				Else
					ostrgyPage.wait4Element "Element","we_OrdPriviewScreen",50000
				End If
				
		End Sub
	    
	    
	    
	     Public Sub getValues4Validation(ByVal Ordernum)		
			
			print "Get the Values from the Ordertckt Page for further validations"
			'After entering Values for the second order click the previous order to capture the Values
			If Ordernum = 1 Then 
				ExpandOrder(0)
			Else	
				Select Case Agent
					Case "DI"
						'RRCode = ostrgyPage.getEProperty("Element","we_Ordtkt_RRCode","innertext")'						
'						BehalfCode = ostrgyPage.getEProperty("Edit","we_Ordtkt_Behalfcode","value")
						RRCode = ostrgyPage.getEProperty("Element","we_OrdTktRRCode","innertext")
						If ostrgyPage.valEleExist_NoReport("Edit","we_Ordtkt_Behalfcode") Then            '//If block is added for change order
							BehalfCode = ostrgyPage.getEProperty("Edit","we_Ordtkt_Behalfcode","value")
						ElseIf ostrgyPage.valEleExist_NoReport("Element","we_OrdTktBehalfCode") Then
							BehalfCode = ostrgyPage.getEProperty("Element","we_OrdTktBehalfCode","innertext")
						End If		
					Case "PIA"
						RRCode = ostrgyPage.getEProperty("Edit","we_Ordtkt_RRCode_PIA","value")	
						If ostrgyPage.valEleExist_NoReport("Edit","we_Ordtkt_Behalfcode") Then            '//If block is added for change order
							BehalfCode = ostrgyPage.getEProperty("Edit","we_Ordtkt_Behalfcode","value")
						ElseIf ostrgyPage.valEleExist_NoReport("Element","we_OrdTktBehalfCode") Then
							BehalfCode = ostrgyPage.getEProperty("Element","we_OrdTktBehalfCode","innertext")
						End If					
				End Select	
				
				If ostrgyPage.valEleExist_NoReport("Element","we_OrdTktOSSId") Then
					OSSId = ostrgyPage.getEProperty("Element","we_OrdTktOSSId","innertext")
				ElseIf ostrgyPage.valEleExist_NoReport("List","we_Ordtkt_OSS_ID") Then
					OSSId = ostrgyPage.getEProperty("List","we_Ordtkt_OSS_ID","selection")
				End If	
				
				SelectedAccount = ostrgyPage.getEProperty("List","wl_SelectAccount","value")
				GetAccountType = Split(SelectedAccount, "-")
				AccountType = Trim(GetAccountType(1))
				
			End If			
			
			
			ReDim Preserve m_SymbolDesc(Ordernum)
			ReDim Preserve m_SymbolName(Ordernum)
			ReDim Preserve m_ExpDate(Ordernum)
			ReDim Preserve m_StrikePrice(Ordernum)
			ReDim Preserve SymName_Options(Ordernum)
			
			'fill the Place Holders
			m_SymbolDesc(Ordernum) = ostrgyPage.getEProperty("Element","we_OrdTkt_SymbolDesc"&"_"&Ordernum,"innertext")
			print "Symbol Descrip For "&Ordernum & "is "  &m_SymbolDesc(Ordernum)
			m_SymbolName(Ordernum) = ostrgyPage.getEProperty("Element","we_OrdTkt_SymbolName"&"_"&Ordernum,"innertext")
			print "Symbol Name For "&Ordernum & "is "  &m_SymbolName(Ordernum)			
			
			If SecurityType(Ordernum) = "Option" Then
				m_ExpDate(Ordernum) = ostrgyPage.getEProperty ("List","wl_Opt_ExpDate"&"_"&Ordernum,"selection")	
				print "Exp Date For "&Ordernum & "is " &m_ExpDate(Ordernum)				
				m_StrikePrice(Ordernum) = ostrgyPage.getEProperty ("List","wl_Opt_StrkPrice"&"_"&Ordernum,"selection")
				print "STrike Price For "&Ordernum & "is " &m_StrikePrice(Ordernum)				
				SymName_Options(Ordernum) = ostrgyPage.getEProperty("Element","we_SymbolValue_Option"&"_"&Ordernum,"innertext")				
				print "Symbol Name from symbol Table For "&Ordernum & "is " &SymName_Options(Ordernum)
			End If
			
			
			If m_ValidatePassiveScreenInd = "Yes" Then
				ValidatePassiveScreen(Ordernum)
			End If	
			
	End Sub
    

		Public Sub ValOrderTcktPageFields(ByVal fordernum)
			Set ValidateOrderPage = new ValidatePage
			ValidateOrderPage.initValidatePage "AOE","AOE","Strategies- "&cCmplxOrdTyp& "-"&Agent
			With ValidateOrderPage
				If fordernum = 1 Then
				   ExpandOrder(0)
				End If
'Verify Below fields onPageLoad
		'1. Securitytype and Order type Validation			
				Select Case cCmplxOrdTyp
					Case "OneCancelOther"
						.addField4Validation "wl_SecurityType"&"_"&fordernum,"List","selection","Equity","Default Value Displayed in the Field"
						.addField4Validation "wl_SecurityType"&"_"&fordernum,"List","disabled","1","Field Enable or Disable"
						.addField4Validation "wl_OrdTkt_OrdType"&"_"&fordernum,"List","disabled","0","Field Enable or Disable"
						.addField4Validation "wl_OrdTkt_OrdType"&"_"&fordernum,"List","default value","Limit","Default Value Displayed in the Field"
						.addField4Validation "wl_OrdTkt_OrdType"&"_"&fordernum,"List","all items","Limit;Stop Market;Stop Limit;Trailing Stop;Trailing Stop Limit","Items available in the List"
						.addField4Validation "wl_OrdTkt_OrdType"&"_"&fordernum,"List","items count",5,"No.of items available in the List"
					Case "OneTriggersAnother"
						'.addField4Validation "wl_SecurityType"&"_"&fordernum,"List","all items","Equity;Option","Items available in the List"
						'.addField4Validation "wl_SecurityType"&"_"&fordernum,"List","disabled","0","Field Enable or Disable"
						.addField4Validation "wl_OrdTkt_OrdType"&"_"&fordernum,"List","default value","Limit","Default Value Displayed in the Field"
						.addField4Validation "wl_OrdTkt_OrdType"&"_"&fordernum,"List","all items","Market;Limit;Stop Market;Stop Limit;Trailing Stop;Trailing Stop Limit","Items available in the List"
						.addField4Validation "wl_OrdTkt_OrdType"&"_"&fordernum,"List","items count",6,"No.of items available in the List"
				End Select	
		
		'2. Action		
				If Right(AccountNumber,1) = "G" or Right(AccountNumber,1) = "H" Then
					.addField4Validation "wl_OrdTkt_Action"&"_"&fordernum,"List","all items","Please Select;Buy to Cover;Short Sell","Items available in the List"
					.addField4Validation "wl_OrdTkt_Action"&"_"&fordernum,"List","items count",3,"No.of items available in the List"
				Else
					.addField4Validation "wl_OrdTkt_Action"&"_"&fordernum,"List","all items","Please Select;Buy;Sell","Items available in the List"
					.addField4Validation "wl_OrdTkt_Action"&"_"&fordernum,"List","items count",3,"No.of items available in the List"
				End If	
				
		'3. Symbol or Name
				.addField4Validation "e_OrdTkt_Symbol"&"_"&fordernum,"Edit","value","","Default Value Displayed in the Field"
				.addField4Validation "e_OrdTkt_Symbol"&"_"&fordernum,"Edit","disabled","0","Field Enable or Disable"	
				
		'4.	Good Till
				.addField4Validation "wl_OrdTkt_Gdtill"&"_"&fordernum, "List", "all items","Day;GTD;GTC;GTEM","Items available in the List"
				.addField4Validation "wl_OrdTkt_Gdtill"&"_"&fordernum,"List","disabled","0","Field Enable or Disable"
				.addField4Validation "wl_OrdTkt_Gdtill"&"_"&fordernum,"List","default value","Day","Default Value Displayed in the Field"	
				.addField4Validation "wl_OrdTkt_Gdtill"&"_"&fordernum,"List","items count",4,"No.of items available in the List"
		'5.Commission Type	
				.addField4Validation "wl_Commissiontype"&"_"&fordernum,"List","all items","Schedule;Prefigured;% Of Schedule;Cents/Share","Items available in the List"
				.addField4Validation "wl_Commissiontype"&"_"&fordernum,"List","items count",4,"No.of items available in the List"
				.addField4Validation "wl_Commissiontype"&"_"&fordernum,"List","default value","Schedule","Default Value Displayed in the Field"
				.addField4Validation "wl_Commissiontype"&"_"&fordernum,"List","disabled","0","Field Enable or Disable"					
		
		'6. Contract Excluded
				.addField4Validation "e_Ord_ContrExclud"&"_"&fordernum,"Edit","value","","Default Value Displayed in the Field"
				.addField4Validation "e_Ord_ContrExclud"&"_"&fordernum,"Edit","disabled","0","Field Enable or Disable"
		
		'7. Trader Instruction				
				.addField4Validation "e_Ord_TradInstr"&"_"&fordernum,"Edit","value","","Default Value Displayed in the Field"
				.addField4Validation "e_Ord_TradInstr"&"_"&fordernum,"Edit","disabled","0","Field Enable or Disable"
				
		ostrgyPage.clickWebElement "we_ExpandAddionaltInfo"&"_"&fordernum
		
		'8. Shareholder status
				.addField4Validation "wl_OrdShareHolder"&"_"&fordernum, "List", "all items", "Significant;Insider;None","Items available in the List"
				.addField4Validation "wl_OrdShareHolder"&"_"&fordernum, "List","items count",3,"No.of items available in the List"
				.addField4Validation "wl_OrdShareHolder"&"_"&fordernum, "List","default value","None","Default Value Displayed in the Field"
				
		'9. Contract Included 1 & 2
				.addField4Validation "AddInfoContrInclude1"&"_"&fordernum,"Edit","value","","Default Value Displayed in the Field"
				.addField4Validation "AddInfoContrInclude1"&"_"&fordernum,"Edit","disabled","0","Field Enable or Disable"		
				.addField4Validation "AddInfoContrInclude2"&"_"&fordernum,"Edit","value","","Default Value Displayed in the Field"
				.addField4Validation "AddInfoContrInclude2"&"_"&fordernum,"Edit","disabled","0","Field Enable or Disable"
				
		'10.  Account List DropDown  
				.addField4Validation "wl_SelectAccount","List","disabled","0","Field Enable or Disable"
				.addField4Validation "wb_OrdTkt_Change","Button","disabled","0","Field Enable or Disable"
				.ValidatePageFields	
		'11. Common Fields - AM Indicator
					With ostrgyPage				
						.valEleExist "Element","we_OrdTkt_AM"
						m_Solicit_Element = .valEleExist("Element","we_OrdTkt_Solicited")
						m_UnSolicit_Element = .valEleExist("Element","we_OrdTkt_UnSolicited")							
							If Agent = "PIA" And m_Solicit_Element <> True And m_UnSolicit_Element <> True  Then
								Reportstatus "Fail","Solicit Unsolict Option","Solicit Unsolict Option should display for PIA agents"
							ElseIf Agent = "DI" And m_Solicit_Element = True And m_UnSolicit_Element = True  Then
								Reportstatus "Fail","Solicit Unsolict Option","Solicit Unsolict Option shouldn't be display for DI agents"
							End If
					End With	
		
		'11. Verify the order ticket page is loaded with the correct Account number
				If fordernum = 1 Then
					m_Acc_num = ostrgyPage.getEProperty("List","wl_AccountList_OrdTcktPage","innertext")
						If Instr(1,m_Acc_num,AccountNumber) > 0  Then
							Reportstatus "Pass","Account Number","OrderTicket Page is loaded with the Correct Account Number"
						End If
					ostrgyPage.ClickImage "Im_OrdTck_Close"
				End If
						
			End With
			
		End Sub
		
		Public Sub ErrormessageValidation
			Set ValidateError_OrderPage = new ValidatePage
			ValidateOrderPage.initValidatePage "AOE","AOE","ErrorMessage- "&cCmplxOrdTyp& "-"&Agent			
			With ValidateError_OrderPage
				.addValidateField "we_OrdTkt_Error_ComplexOrder",Element,"innertext","Duplicate order found in strategy. One of the following fields must be different: Symbol, Action or order type"
				.ValidatePageFields
			End With
		End Sub
		
		
		
		Public Sub ValidatePassiveScreen(ordernum)
		
			print "Validating the Passive Screen for Ordernum : "&ordernum
			Set oPassiveScreen = new ValidatePage
			
			With oPassiveScreen					 	
				.initValidatePage "AOE","AOE","Passive ScreenValidation -"&cCmplxOrdTyp	
				.addValidateField "we_PreviewAction"&"_"&Ordernum,"Element","outertext", "Action "&cAction(ordernum)		
				.addValidateField "we_PreviewQuant"&"_"&Ordernum,"Element","outertext","Quantity "&Formatnumber(cQuantity(ordernum),0,False,False,True)
'				Select Case cOrderType(ordernum)
'					Case "Market"
'						.addValidateField "we_PreviewPrice"&"_"&Ordernum,"Element","innertext","Price Market"	
'					Case "Limit"
'						.addValidateField "we_PreviewPrice"&"_"&Ordernum,"Element","innertext","Price Limit Limit Price: $"&Formatnumber(Limit_Price(ordernum),4,True,False,False)	
'								
'					Case "Stop Market"
'						.addValidateField "we_PreviewPrice"&"_"&Ordernum,"Element","innertext","Price Stop Market Trigger Price: $"&Formatnumber(Limit_Price(ordernum),4,True,False,False)	
'								
'					Case "Stop Limit"
'						.addValidateField "we_PreviewPrice"&"_"&Ordernum,"Element","innertext","Price Stop Limit Trigger Price: $"&Formatnumber(Trigger_Price(ordernum),4,True,False,False)&" Stop Limit: $"&Formatnumber(Limit_Price(ordernum),4,False,False,False)
'							    
'					Case "Trailing Stop"
'						 .addValidateField "we_PreviewPrice"&"_"&Ordernum,"Element","innertext","Price Trailing Stop Trigger Delta: $"&Formatnumber(Trigger_Delta(ordernum),4,True,False,False)
'								
'					Case "Trailing Stop Limit"
'						 .addValidateField "we_PreviewPrice"&"_"&Ordernum,"Element","innertext","Price Trailing Stop Limit Trigger Delta: $"&Formatnumber(Trigger_Delta(ordernum),4,True,False,False)&" Limit Delta: $"&Formatnumber(Limit_Delta(ordernum),3,False,False,False)
'								
'				End Select
		'Good Till Validation	
				Select Case cGoodTill(ordernum)
					Case "Day"
						.addValidateField "we_PreviewGood'till"&"_"&Ordernum,"Element","innertext","Good 'til Day"	
					Case "GTC"
						.addValidateField "we_PreviewGood'till"&"_"&Ordernum,"Element","innertext","Good 'til GTC"	
					Case "GTD"
						.addValidateField "we_PreviewGood'till"&"_"&Ordernum,"Element","innertext","Good 'til "&prv_GoodTillDate(ordernum)
					
				End Select	
				.ValidatePageFields	
			End With
			
		End Sub   
    
End Class

'***** The below commented section is the old Confirmation page ******* Date July 25,2016

'Class ComplexOrderConfirmationPage
'	Private  obj4OrdTicketPage, obj4PrevPage, obj4ConfPage,m_Script4Ord1,m_Script4Ord2,m_ExpectedScript, m_ExpMonth,m_splitExpDate,m_ExpDate
'	Public TransId4Ord1,dictResultsOrd1,dictResultsOrd2, TransId,TransId4Ord2, m_TimeStamp
'	
'	Public Sub init_confPage(ByRef oOrdTicketPage, ByVal BrowserName,ByVal PageName)
'	'Public Sub init_confPage(ByRef  oOrdTicketPage, ByRef oPreviewPage, ByVal BrowserName,ByVal PageName) 'add Later
'		Set  obj4OrdTicketPage =  oOrdTicketPage
'		'Set obj4PrevPage = oPreviewPage 'add Later
'		Set obj4ConfPage = new preparePage
'		
'		obj4ConfPage.initPage BrowserName,PageName	
'		
'		obj4ConfPage.wait4Element "Element","we_ThankYou_confPage",30000
'		If obj4ConfPage.valEleExist("Element","we_ThankYou_confPage") Then
'			print "Confirmation page Displayed"
'			ReportStatus "Pass","Confirmation Page","Order Confirmation Page displayed."
'		Else
'			ReportStatus "Fail","Confirmation Page","Order Confirmation Page NOT displayed."	
'		End If	
'	End Sub	
'	
'	Public Sub DBcall()
'			TransId4Ord1 = obj4ConfPage.getWTablecell("wt_OrdTkt_ConfrmTable",6,2)
'			TransId4Ord2 = obj4ConfPage.getWTablecell("wt_OrdTkt_ConfrmTable",6,4)
'			
'		print "Calling Orders DB"	
'		Set dictResultsOrd1 = Validate_OrderDetailsDB(TransId4Ord1)
'		Set dictResultsOrd2 = Validate_OrderDetailsDB(TransId4Ord2)	
'		print "Orders DB Call Completed"			
'		'//Added for later usage - Raj
''		DataTable.GetSheet("Global").AddParameter "TransID",TransId
''		DataTable.GetSheet("Global").AddParameter "OrderNumber",dictResults.Item("OrderNumber")
'	End Sub
'	
'		  Public Sub ValidateConfirmationTable()
'			Set oConfirmScreen = new ValidatePage
'			oConfirmScreen.initValidatePage "AOE","AOE","Confirmation-Complex Order"
'			
'			'GetAccountType = Split(obj4OrdTicketPage.SelectedAccount, "-") 'add Later
'			TransId4Ord1 = obj4ConfPage.getWTablecell("wt_OrdTkt_ConfrmTable",6,2)
'			TransId4Ord2 = obj4ConfPage.getWTablecell("wt_OrdTkt_ConfrmTable",6,4)
'			
'			If TransId4Ord1 = "" Then
'				ReportStatus "Fail","No TransID displayed","No TransID displayed "
'				Exit Sub
'			End If
'			
'			If TransId4Ord2 = "" Then
'				ReportStatus "Fail","No TransID displayed","No TransID displayed "
'				Exit Sub
'			End If
'			
'			Print "Calling Orders Database"
'			Set dictResultsOrd1 = Validate_OrderDetailsDB(TransId4Ord1)
'			Set dictResultsOrd2 = Validate_OrderDetailsDB(TransId4Ord2)
'			
'			If dictResultsOrd1 is Nothing Then
'				ReportStatus "Fail","Confirmation Table Validation ","No Record found in DB to validate the confirmation Table for the TransID - "&TransId4Ord1
'				'm_TimeStamp = obj4ConfPage.getWTablecell("wt_OrdTkt_ConfrmTable",5,2)
'				Exit Sub
'			End If	
'			
'			If dictResultsOrd2 is Nothing Then
'				ReportStatus "Fail","Confirmation Table Validation ","No Record found in DB to validate the confirmation Table for the TransID - "&TransId4Ord2
'				Exit Sub
'			End If	
'			'''Strategy type
'			Select Case obj4OrdTicketPage.cCmplxOrdTyp
'				Case "OneCancelOther"
'					Strategy = "One Cancels Other (OCO)"
'				Case "OneTriggersAnother"
'					Strategy = "One Triggers Another (OTA)"				
'			End Select			
'			
'			If dictResultsOrd1 is Nothing Then
'				Print "Cant Validate Confirmation Table against Orders DB"
'				ReportStatus "Warning","Confirmation Table Validation ","Cant Validate Confirmation Table against Orders DB"
'				Exit Sub
'				With oConfirmScreen
'					Print "Validating confirmation Table"
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",1,1,"RR Code:"
'							If obj4OrdTicketPage.Agent = "DI" Then					
'								.addValidateTable "wt_OrdTkt_ConfrmTable","Table",1,2, dictResultsOrd1.Item("AgentRRCode") 
'							ElseIf obj4OrdTicketPage.Agent = "PIA" Then						
'								.addValidateTable "wt_OrdTkt_ConfrmTable","Table",1,2, dictResultsOrd1.Item("AcctRRCode")
'							End If		
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",2,1,"Behalf Code:"
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",2,2, dictResultsOrd1.Item("BehalfCode")
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",3,1,"Account:"
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",3,2, dictResultsOrd1.Item("acctNumber") &" " & Trim(obj4OrdTicketPage.GetAccountType(1))
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",4,1,"Short Name:"
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",4,2,dictResultsOrd1.Item("ShortName")
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",5,1,"Date Submitted:"
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",6,1,"Order #1:"
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",6,2,dictResultsOrd1.Item("Trans_Id")
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",6,3,"Order #2:"
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",6,4,dictResultsOrd2.Item("Trans_Id")
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",7,1,"Strategy:"
'					.addValidateTable "wt_OrdTkt_ConfrmTable","Table",7,2,Strategy	
'					.ValidateTableFields	
'					Print "Confirmation Table Validation Completed"
'				End With
'		End If	
'			
'		 End Sub
' 
'	  	Public Sub ConfirmationScriptValidation
'	  	
'	 		Select Case obj4OrdTicketPage.cCmplxOrdTyp
'	 			Case "OneCancelOther"
'	 				m_Script4Ord1 = "OCO 1: " & strFormatConfrimationScript(0)	 				
'					m_Script4Ord2 = " OCO 2: " & strFormatConfrimationScript(1) 
'					
'				Case "OneTriggersAnother"
'					m_Script4Ord1 =  "Primary: " & strFormatConfrimationScript(0)
'					m_Script4Ord2 =  " Secondary: " & strFormatConfrimationScript(1) 
'				
'	 		End Select	
'	 		
'			m_ExpectedScript = m_Script4Ord1 & m_Script4Ord2			
'			Print "Expected Confirmation Script is created for validation"
'			ValidateScript(m_ExpectedScript) 	
'			
'	 	End Sub
'
'
'		 Public Sub ValidateScript(ByVal ExpectedScript)	
'			
'				Set oConfrmScript = new ValidatePage
'					With oConfrmScript
'						Print "Validating Confirmation Script"
'						.initValidatePage "AOE","AOE","ConfirmationScript-Equity"
'					    .addValidateField "we_OrdConfrmScript","Element","innertext",ExpectedScript
'					    .ValidatePageFields
'					    Print "Confirmation Script validation Completed"
'					End With		
'				
'		End Sub 
' 
'		 Public Function strFormatConfrimationScript(ByVal Ordernum)
'		 
'		 		
'				Print "Formating Confirmation Script for Ordernum " & Ordernum
'		'ONSTOP			
'				If  obj4OrdTicketPage.cOrderType(Ordernum) = "Stop Limit" or  obj4OrdTicketPage.cOrderType(Ordernum) = "Stop Market"  Then
'					OnStop = "On Stop "
'				Else
'					OnStop = ""
'				End If
'		'Symbol		
'				SymDescription = Trim(obj4OrdTicketPage.m_SymbolDesc(Ordernum))				
'				SymName = Trim(obj4OrdTicketPage.m_SymbolName(Ordernum))
'		
'		
'		''TRAILINGSTOP
'			Select Case  obj4OrdTicketPage.cOrderType(Ordernum)		
'					Case "Market","Limit","Stop Limit"
'						TRAILINGSTOP =  ""	
'							    
'					Case "Trailing Stop"
'						 TRAILINGSTOP =  "Trailing Stop "
'								
'					Case "Trailing Stop Limit"
'						 TRAILINGSTOP = "Trailing Stop Limit "			
'				End Select
'		'AON
'		
'				AON = ""		
'				
'		'Price	
'				Select Case  obj4OrdTicketPage.cOrderType(Ordernum)		
'				Case "Market"
'						Price = "at Market"
'					Case "Limit"
'						Price = "at $"&Formatnumber( obj4OrdTicketPage.Limit_Price(Ordernum),2,False,False,False)
'								
'					Case "Stop Market"
'						Price = "with a Trigger price of $"&Formatnumber( obj4OrdTicketPage.Limit_Price(Ordernum),2,False,False,False)	
'								
'					Case "Stop Limit"
'						Price = "with a Trigger price of $"&Formatnumber( obj4OrdTicketPage.Trigger_Price(Ordernum),2,False,False,False)& " and a Stop Limit of $"&Formatnumber( obj4OrdTicketPage.Limit_Price(Ordernum),2,False,False,False)
'							    
'					Case "Trailing Stop"
'						 Price =  "with a Delta of $"&Formatnumber( obj4OrdTicketPage.Trigger_Delta(Ordernum),2,False,False,False)
'								
'					Case "Trailing Stop Limit"
'						 Price = "with a Delta of $"&Formatnumber( obj4OrdTicketPage.Trigger_Delta(Ordernum),2,False,False,False)&" and a Delta Limit of $"&Formatnumber( obj4OrdTicketPage.Limit_Delta(Ordernum),2,False,False,False)			
'				End Select
'		
'		'Good Till		
'				If obj4OrdTicketPage.m_Functionality = "Place" or obj4OrdTicketPage.m_Functionality = "Change" Then			
'					Select Case  obj4OrdTicketPage.cGoodTill(Ordernum)
'					Case "Day"
'						GoodTillDesc = " This order is a day order."
'					Case "GTC"
'						GoodTillDesc = " This order is good until cancelled."
'					Case "GTD"
'						GoodTillDesc = " This order is good until "& obj4OrdTicketPage.prv_GoodTillDate(Ordernum) & "."
'				    End Select 	
'				ElseIf obj4OrdTicketPage.m_Functionality = "Cancel" Then 
'					GoodTillDesc = ""
'				End If		
'				
'		'QuantityType - Shares/contracts 
'				Select Case obj4OrdTicketPage.SecurityType(Ordernum)					
'					Case "Equity" 
'						QuantityType = " shares "
'					Case "Option"
'						QuantityType = " contracts "					
'						m_ExpMonth = Monthname(month(obj4OrdTicketPage.m_ExpDate(Ordernum)))
'						m_splitExpDate = Split(obj4OrdTicketPage.m_ExpDate(Ordernum),"-")
'						m_ExpDate = m_ExpMonth & " "& Cint(m_splitExpDate(0))& ", " & Cint(m_splitExpDate(2))  
'											
'				End Select		
'					
'			
'		'Expected Script
'			
'					If  obj4OrdTicketPage.SecurityType(Ordernum) = "Equity" Then
'						strFormatConfrimationScript =  obj4OrdTicketPage.cAction(Ordernum) & " " & ONSTOP &  obj4OrdTicketPage.cQuantity(Ordernum) & QuantityType & SymDescription &" ("& SymName & ") " & TRAILINGSTOP & AON &Trim(Price) & "." 						
'					ElseIf  obj4OrdTicketPage.SecurityType(Ordernum) = "Option" Then	
'						strFormatConfrimationScript =  obj4OrdTicketPage.cAction(Ordernum) & " " & ONSTOP &  obj4OrdTicketPage.cQuantity(Ordernum) & QuantityType & SymDescription &" ("&obj4OrdTicketPage.cSymbol(Ordernum)&")"&" "& obj4OrdTicketPage.m_StrikePrice(Ordernum) & " " & Ucase(obj4OrdTicketPage.CallPutValue(Ordernum)) & " " & m_ExpDate & " " & TRAILINGSTOP & AON &Trim(Price) & "." 						
'					End If	
'		
'					If Ordernum = 1 Then
'							strFormatConfrimationScript = strFormatConfrimationScript &	GoodTillDesc		
'					End If
'		 	
'		 End Function
'		 
'	End Class
	
'*** The below 	ComplexOrderConfirmationPage is the new Page design as of July 25,2016
	Class ComplexOrderConfirmationPage
	Private  obj4OrdTicketPage, obj4PrevPage, obj4ConfPage,m_Script4Ord1,m_Script4Ord2,m_ExpectedScript, m_ExpMonth,m_splitExpDate,m_ExpDate
	Public TransId4Ord1,dictResultsOrd1,dictResultsOrd2, TransId,TransId4Ord2, m_TimeStamp
	
	Public Sub init_confPage(ByRef oOrdTicketPage, ByVal BrowserName,ByVal PageName)
	'Public Sub init_confPage(ByRef  oOrdTicketPage, ByRef oPreviewPage, ByVal BrowserName,ByVal PageName) 'add Later
		Set  obj4OrdTicketPage =  oOrdTicketPage
		'Set obj4PrevPage = oPreviewPage 'add Later
		Set obj4ConfPage = new preparePage
		
		obj4ConfPage.initPage BrowserName,PageName	
		
		 'obj4OrderDetailPage.valEleExist("Button","wb_Done") 
		
		obj4ConfPage.wait4Element "Button","wb_Done",30000
		If obj4ConfPage.valEleExist("Button","wb_Done") Then
			print "Confirmation page Displayed"
			ReportStatus "Pass","Confirmation Page","Order Confirmation Page displayed."
		Else
			ReportStatus "Fail","Confirmation Page","Order Confirmation Page NOT displayed."	
		End If	
	End Sub	
	
	Public Sub DBcall()
			
			
			vTransID1_FullText = obj4ConfPage.getElementProperty("Element","we_Confirm_Order1Block","innertext")			
			vTransID1_Split = Split(vTransID1_FullText," ")
			TransId4Ord1 = vTransID1_Split(3)
			
			vTransID2_FullText = obj4ConfPage.getElementProperty("Element","we_Confirm_Order2Block","innertext")			
			vTransID2_Split = Split(vTransID2_FullText," ")
			TransId4Ord2 = vTransID2_Split(3)
			
		print "Calling Orders DB"	
		Set dictResultsOrd1 = Validate_OrderDetailsDB(TransId4Ord1)
		Set dictResultsOrd2 = Validate_OrderDetailsDB(TransId4Ord2)	
		print "Orders DB Call Completed"			
		'//Added for later usage - Raj
'		DataTable.GetSheet("Global").AddParameter "TransID",TransId
'		DataTable.GetSheet("Global").AddParameter "OrderNumber",dictResults.Item("OrderNumber")
	End Sub
	
		  Public Sub ValidateConfirmationTable()
		  	print "Validation Confirmation Page initiated"	
			Set oConfirmScreen = new ValidatePage
			oConfirmScreen.initValidatePage "AOE","AOE","Confirmation-Complex Order"
			
			vTransID1_FullText = obj4ConfPage.getElementProperty("Element","we_Confirm_Order1Block","innertext")			
			vTransID1_Split = Split(vTransID1_FullText," ")
			TransId4Ord1 = Trim(vTransID1_Split(3))
			
			vTransID2_FullText = obj4ConfPage.getElementProperty("Element","we_Confirm_Order2Block","innertext")			
			vTransID2_Split = Split(vTransID2_FullText," ")
			TransId4Ord2 = Trim(vTransID2_Split(3))
			
			
			
			If TransId4Ord1 = "" Then
				ReportStatus "Fail","No TransID displayed","No TransID displayed "
				Exit Sub
				print "Validation Confirmation Page Failed"	
			End If
			
			If TransId4Ord2 = "" Then
				ReportStatus "Fail","No TransID displayed","No TransID displayed "
				Exit Sub
				print "Validation Confirmation Page Failed"
			End If
			
			Print "Calling Orders Database"
			Set dictResultsOrd1 = Validate_OrderDetailsDB(TransId4Ord1)
			Set dictResultsOrd2 = Validate_OrderDetailsDB(TransId4Ord2)
			
			If dictResultsOrd1 is Nothing Then
				ReportStatus "Fail","Confirmation Table Validation ","No Record found in DB to validate the confirmation Table for the TransID - "&TransId4Ord1
				'm_TimeStamp = obj4ConfPage.getWTablecell("wt_OrdTkt_ConfrmTable",5,2)
				print "Validation Confirmation Page Failed"
				Exit Sub
			End If	
			
			If dictResultsOrd2 is Nothing Then
				ReportStatus "Fail","Confirmation Table Validation ","No Record found in DB to validate the confirmation Table for the TransID - "&TransId4Ord2
				print "Validation Confirmation Page Failed"
				Exit Sub
			End If	
			'''Strategy type
			Select Case obj4OrdTicketPage.cCmplxOrdTyp
				Case "OneCancelOther"
					Strategy = "One Cancels Other (OCO)"
				Case "OneTriggersAnother"
					Strategy = "One Triggers Another (OTA)"				
			End Select			
			
			If dictResultsOrd1 is Nothing Then
				Print "Cant Validate Confirmation Table against Orders DB"
				ReportStatus "Warning","Confirmation Table Validation ","Cant Validate Confirmation Table against Orders DB"
				Exit Sub
			Else
			
				With oConfirmScreen
					Print "Validating confirmation Screen"					
					
					Select Case obj4OrdTicketPage.m_Functionality
						Case "Place"
							.addValidateField "we_Confirm_Heading_NewOrder","Element","innertext","New order has been submitted"
						Case "Change"
							.addValidateField "we_Confirm_Heading_Change","Element","innertext","Change order has been submitted"
						Case "Cancel"
							.addValidateField "we_Confirm_Heading_Cancel","Element","innertext","Cancel order has been submitted"
					End Select
					
					'RRCode
					If obj4OrdTicketPage.Agent = "DI" Then					
						.addValidateField "we_Confirm_rrCode","Element","innertext","RR Code: "& dictResultsOrd1.Item("AgentRRCode")
					ElseIf obj4OrdTicketPage.Agent = "PIA" Then						
						.addValidateField "we_Confirm_rrCode","Element","innertext","RR Code: "& dictResultsOrd1.Item("AcctRRCode")
					End If	
					
					'Behalf Code
					.addValidateField "we_Confirm_BehalfCode","Element","innertext","Behalf Code "& dictResultsOrd1.Item("BehalfCode")
					
					'Account Number
					.addValidateField "we_Confirm_Account","Element","innertext","Account: "& dictResultsOrd1.Item("acctNumber") &" " & Trim(obj4OrdTicketPage.GetAccountType(1))
					
					'ShortName
					.addValidateField "we_Confirm_ShortName","Element","innertext","Short Name "& dictResultsOrd1.Item("ShortName")
					
					'Order1
					.addValidateField "we_Confirm_Order1Block","Element","innertext","Order #1  "& dictResultsOrd1.Item("Trans_Id")
					
					'Order 2
					.addValidateField "we_Confirm_Order2Block","Element","innertext","Order #2  "& dictResultsOrd2.Item("Trans_Id")
					
					'Strategy
					.addValidateField "we_Confirm_Strategy","Element","innertext","Strategy "& Strategy

					.ValidatePageFields
					Print "Confirmation Screen Validation Completed"
				End With
		End If	
			
		 End Sub
 
	  	Public Sub ConfirmationScriptValidation
	  	
	 		Select Case obj4OrdTicketPage.cCmplxOrdTyp
	 			Case "OneCancelOther"
	 				m_Script4Ord1 = "OCO 1: " & strFormatConfrimationScript(0)	 				
					m_Script4Ord2 = " OCO 2: " & strFormatConfrimationScript(1) 
					
				Case "OneTriggersAnother"
					m_Script4Ord1 =  "Primary: " & strFormatConfrimationScript(0)
					m_Script4Ord2 =  " Secondary: " & strFormatConfrimationScript(1) 
				
	 		End Select	
	 		
			m_ExpectedScript = m_Script4Ord1 & m_Script4Ord2			
			Print "Expected Confirmation Script is created for validation"
			ValidateScript(m_ExpectedScript) 	
			
	 	End Sub


		 Public Sub ValidateScript(ByVal ExpectedScript)	
			
				Set oConfrmScript = new ValidatePage
					With oConfrmScript
						Print "Validating Confirmation Script"
						.initValidatePage "AOE","AOE","ConfirmationScript-Equity"
					    .addValidateField "we_OrdConfrmScript","Element","innertext",ExpectedScript
					    .ValidatePageFields
					    Print "Confirmation Script validation Completed"
					End With		
				
		End Sub 
 
		 Public Function strFormatConfrimationScript(ByVal Ordernum)
		 
		 		
				Print "Formating Confirmation Script for Ordernum " & Ordernum
		'ONSTOP			
				If  obj4OrdTicketPage.cOrderType(Ordernum) = "Stop Limit" or  obj4OrdTicketPage.cOrderType(Ordernum) = "Stop Market"  Then
					OnStop = "On Stop "
				Else
					OnStop = ""
				End If
		'Symbol		
				SymDescription = Trim(obj4OrdTicketPage.m_SymbolDesc(Ordernum))				
				SymName = Trim(obj4OrdTicketPage.m_SymbolName(Ordernum))
		
		
		''TRAILINGSTOP
			Select Case  obj4OrdTicketPage.cOrderType(Ordernum)		
					Case "Market","Limit","Stop Limit"
						TRAILINGSTOP =  ""	
							    
					Case "Trailing Stop"
						 TRAILINGSTOP =  "Trailing Stop "
								
					Case "Trailing Stop Limit"
						 TRAILINGSTOP = "Trailing Stop Limit "			
				End Select
		'AON
		
				AON = ""		
				
		'Price	
				Select Case  obj4OrdTicketPage.cOrderType(Ordernum)		
				Case "Market"
						Price = "at Market"
					Case "Limit"
						Price = "at $"&Formatnumber( obj4OrdTicketPage.Limit_Price(Ordernum),2,False,False,False)
								
					Case "Stop Market"
						Price = "with a Trigger price of $"&Formatnumber( obj4OrdTicketPage.Trigger_Price(Ordernum),2,False,False,False)	
								
					Case "Stop Limit"
						Price = "with a Trigger price of $"&Formatnumber( obj4OrdTicketPage.Trigger_Price(Ordernum),2,False,False,False)& " and a Stop Limit of $"&Formatnumber( obj4OrdTicketPage.Limit_Price(Ordernum),2,False,False,False)
							    
					Case "Trailing Stop"
						 Price =  "with a Delta of $"&Formatnumber( obj4OrdTicketPage.Trigger_Delta(Ordernum),2,False,False,False)
								
					Case "Trailing Stop Limit"
						 Price = "with a Delta of $"&Formatnumber( obj4OrdTicketPage.Trigger_Delta(Ordernum),2,False,False,False)&" and a Delta Limit of $"&Formatnumber( obj4OrdTicketPage.Limit_Delta(Ordernum),2,False,False,False)			
				End Select
		
		'Good Till		
				If obj4OrdTicketPage.m_Functionality = "Place" or obj4OrdTicketPage.m_Functionality = "Change" Then			
					Select Case  obj4OrdTicketPage.cGoodTill(Ordernum)
					Case "Day"
						GoodTillDesc = " This order is a day order."
					Case "GTC"
						GoodTillDesc = " This order is good until cancelled."
					Case "GTD"
						GoodTillDesc = " This order is good until "& obj4OrdTicketPage.prv_GoodTillDate(Ordernum) & "."
				    End Select 	
				ElseIf obj4OrdTicketPage.m_Functionality = "Cancel" Then 
					GoodTillDesc = ""
				End If		
				
		'QuantityType - Shares/contracts 
				Select Case obj4OrdTicketPage.SecurityType(Ordernum)					
					Case "Equity" 
						QuantityType = " shares "
					Case "Option"
						QuantityType = " contracts "					
						m_ExpMonth = Monthname(month(obj4OrdTicketPage.m_ExpDate(Ordernum)))
						m_splitExpDate = Split(obj4OrdTicketPage.m_ExpDate(Ordernum),"-")
						m_ExpDate = m_ExpMonth & " "& Cint(m_splitExpDate(0))& ", " & Cint(m_splitExpDate(2))  
											
				End Select		
					
			
		'Expected Script
			
					If  obj4OrdTicketPage.SecurityType(Ordernum) = "Equity" Then
						strFormatConfrimationScript =  obj4OrdTicketPage.cAction(Ordernum) & " " & ONSTOP &  obj4OrdTicketPage.cQuantity(Ordernum) & QuantityType & SymDescription &" ("& SymName & ") " & TRAILINGSTOP & AON &Trim(Price) & "." 						
					ElseIf  obj4OrdTicketPage.SecurityType(Ordernum) = "Option" Then	
						strFormatConfrimationScript =  obj4OrdTicketPage.cAction(Ordernum) & " " & ONSTOP &  obj4OrdTicketPage.cQuantity(Ordernum) & QuantityType & SymDescription &" ("&obj4OrdTicketPage.cSymbol(Ordernum)&")"&" "& obj4OrdTicketPage.m_StrikePrice(Ordernum) & " " & Ucase(obj4OrdTicketPage.CallPutValue(Ordernum)) & " " & m_ExpDate & " " & TRAILINGSTOP & AON &Trim(Price) & "." 						
					End If	
		
					If Ordernum = 1 Then
							strFormatConfrimationScript = strFormatConfrimationScript &	GoodTillDesc		
					End If
		 	
		 End Function
		 
	End Class
	

	
	
	Class DashBoardPage

	Private dashboardPage,dashboardValidate
	Public vTDCash,vMargin
	
	Public Sub initDashBoardPage
		Set dashboardPage = new preparePage	
		Set dashboardValidate = new ValidatePage
		dashboardPage.initPage "AOE","AOE"
	End Sub
	
	
	
	Public Sub SearchAccountNumber(ByRef rDicObj)
		With dashboardPage			
			'.clickWebElement "we_ClientName"
			'Wait 2			
			'.clickWebElement "we_AccountNumber"
			Wait 5
			.wait4Element_NoReport "List","wl_AccountList",50000
			.setWebEdit "we_AccountSearchBox", Trim(rDicObj.Item("AccountNumber"))			
			.wait4Element_NoReport "List","wl_AccountList",50000
				CalcWait = 0
				waitsec = 2
			Do
				CalcWait = CalcWait + waitsec
				If CalcWait > 60 Then
					Reportstatus "Warning","Account not selected","Account not selected properly in the Dashboard Page" 
					Exit Do
				End If
				Wait waitsec			
				AccountSelected = .getEProperty ("List","wl_AccountList","selection")									
			Loop While (instr(1,AccountSelected,rDicObj.Item("AccountNumber"),1) = 0)			
		
			If .valEleExist_NoReport("Element","we_RecentView_Close") Then
				.clickWebElement "we_RecentView_Close"
			End If		
		 End With		
	End Sub
	
	Public Sub getValues4Validation
		With dashboardPage
			vTDCash = .getEProperty("Element","we_dashboard_TDCashValue","innertext")
			vMargin = .getEProperty("Element","we_dashboard_MarginValue","innertext")			
		End With
	End Sub
	
	Public Sub ClickOrderTicket
		With dashboardPage			
			.wait4Element "Element","we_OrderTicket",100000
		    .clickWebElement "we_OrderTicket"
		    .pSync	
		    .wait4Element "Element","we_OrdEntryScreen", 100000
		End With		
	End Sub

End Class


Class ComplexOrder_ChangeCancelOrderTckPage
	Public obj4OrdTicketPage,obj4PreviewPage,obj4ConfirmPage
	Private oCancelOrderScreen,obj4CancelOrdTckPage,dictResultsOrd1,obj4OrderDetailPage,m_Order1_status,m_Order2_status,m_Order1_Number
	
	Public Sub init_ChangeCancelOrdPage(ByRef oOrdertcktPage,ByRef oConfirmationPage,ByRef oPreviewPage,ByVal BrowserName,ByVal PageName)
		Set obj4OrdTicketPage = oOrdertcktPage
		Set obj4PreviewPage = oPreviewPage
		Set obj4ConfirmPage = oConfirmationPage		
		Set obj4OrderDetailPage = new preparePage
		Set obj4CancelOrdTckPage = new preparePage	
		Set oConfirmPage = 	new preparePage
				 
		Verify_AwSnap()
		obj4OrderDetailPage.initPage BrowserName,PageName
		obj4CancelOrdTckPage.initPage BrowserName,PageName
		oConfirmPage.initPage BrowserName,PageName
		

		If oConfirmPage.valEleExist("Button","wb_Done") Then
			oConfirmPage.clickWebButton "wb_Done"
		Else
			oConfirmPage.clickWebElement "we_OrdTktConf_Close"			
		End If
		
		If obj4ConfirmPage.dictResultsOrd1 is Nothing Then
			ReportStatus "Fail","OrderDetailValidation ","No Record found in DB for the order1-TransId -  " & obj4ConfirmPage.TransId4Ord1 & " to retrieve the order from the orderpanel to validate orderdetails."
			ExitTest
		ElseIf obj4ConfirmPage.dictResultsOrd2 is Nothing Then
			ReportStatus "Fail","OrderDetailValidation ","No Record found in DB for the order2-TransId -  " & obj4ConfirmPage.TransId4Ord2 & " to retrieve the order from the orderpanel to validate orderdetails."
			ExitTest
		Else
			'Added March 20
			
			print "Click Refresh"
			obj4OrderDetailPage.wait4Element_NoReport "Button","wb_Dashboard_Refresh",10000
			Verify_AwSnap()
			print "Wait for Page Load"
			obj4OrderDetailPage.wait4Element_NoReport "List","wl_ItemPerPage",50000						
			obj4OrderDetailPage.wait4Element_NoReport "Table","wt_OrderList",30000
			print "Click Refresh"
			obj4OrderDetailPage.clickWebButton "wb_Dashboard_Refresh" 
			print "Wait for Page Load"					
			obj4OrderDetailPage.wait4Element_NoReport "List","wl_ItemPerPage",50000				
			obj4OrderDetailPage.wait4Element_NoReport "Table","wt_OrderList",10000
			Verify_AwSnap()
			
'			obj4OrderDetailPage.wait4Element_NoReport "Button","wb_Dashboard_Refresh",50000
'			obj4OrderDetailPage.clickWebButton "wb_Dashboard_Refresh"				
'			obj4OrderDetailPage.wait4Element_NoReport "Table","wt_OrderList",10000
'			Verify_AwSnap()
			Set oDesc = Description.Create
			oDesc("micclass").Value = "WebTable"
			oDesc("html tag").Value = "TABLE"
			oDesc("html id").Value = "td-aoe-order-list-table-results"
				Set oObjCol = Browser("AOE").Page("AOE").ChildObjects(oDesc)
				
				Dim bIsFound: bIsFound = False
				For i = 2 To oObjCol(0).RowCount					
					Set dictResultsOrd1  = Validate_OrderDetailsDB(obj4ConfirmPage.TransId4Ord1)
						m_Order1_Number = Trim(oObjCol(0).GetCellData(i,2))
						m_Order1_status = Trim(oObjCol(0).GetCellData(i,6))
						m_Order2_status = Trim(oObjCol(0).GetCellData(i+1,6))
						
					If m_Order1_Number = dictResultsOrd1.Item("OrderNumber") or m_Order1_Number = dictResultsOrd1.Item("Trans_Id") or m_Order1_Number = dictResultsOrd1.Item("Temp_Order_Num")  Then 'and oObjCol(0).GetCellData(i,6) <> "Filled" or oObjCol(0).GetCellData(i+1,6) <> "Filled"				
					
								bIsFound = True
								Wait 2
								ReportStatus "Pass","Order List Page","Order is displayed in the Orderlist Page"
								
								Select Case obj4OrdTicketPage.cCmplxOrdTyp 
								
								Case "OneTriggersAnother"
									If (instr(m_Order1_status,"Open") > 0 and instr(m_Order2_status,"Open") > 0) Then
										ReportStatus "Pass","Order Status","Order status is open to Change/Cancel"
									ElseIf Trim(m_Order1_status) = "Filled" and Trim(m_Order2_status) = "Filled" Then
										ReportStatus "Fail","Order Status","Order status is Not open to Change/Cancel" &vbcrlf& "Order1_Status = "& oObjCol(0).GetCellData(i,6) &vbcrlf& "Order2_Status = "& oObjCol(0).GetCellData(i+1,6)
										ExitTest
									ElseIf Trim(m_Order1_status) = "Filled" or Trim(m_Order2_status) = "Filled"  Then	
										ReportStatus "Pass","Order Status","One of the Order status is Filled, Proceed to Change/Cancel" &vbcrlf& "Order1_Status = "& oObjCol(0).GetCellData(i,6) &vbcrlf& "Order2_Status = "& oObjCol(0).GetCellData(i+1,6)
									Else
										ReportStatus "Fail","Order Status","Order status is Not open to Change/Cancel." &vbcrlf& "Order1_Status = "& oObjCol(0).GetCellData(i,6) &vbcrlf& "Order2_Status = "& oObjCol(0).GetCellData(i+1,6)
										ExitTest
									End If
								Case "OneCancelOther"
									If (instr(m_Order1_status,"Open") > 0 and instr(m_Order2_status,"Open") > 0) Then
										ReportStatus "Pass","Order Status","Order status is open to Change/Cancel"
									Else
										ReportStatus "Fail","Order Status","Order status is Not open to Change/Cancel." &vbcrlf& "Order1_Status = "& oObjCol(0).GetCellData(i,6) &vbcrlf& "Order2_Status = "& oObjCol(0).GetCellData(i+1,6)
										ExitTest
									End If
								End Select
								
								
									Environment.Value("Order1_status") = Trim(oObjCol(0).GetCellData(i,6))
									Environment.Value("Order2_status") = Trim(oObjCol(0).GetCellData(i+1,6))
									If UCase(obj4OrdTicketPage.m_Functionality)="CHANGE" Then
										If oObjCol(0).ChildItem(i,1,"WebElement",4).Exist(0) Then
											oObjCol(0).ChildItem(i,1,"WebElement",4).Click
										Else
											ReportStatus "Fail","Click Change Button","Change Button Not Available in the Order List Page.Exiting Test"	
											ExitTest
										End If
									Else
										If oObjCol(0).ChildItem(i,1,"WebElement",6).Exist Then
											oObjCol(0).ChildItem(i,1,"WebElement",6).Click
										Else
											ReportStatus "Fail","Cancel Button Not Available","Cancel Button Not Available in the Order List Page"	
											ExitTest							
										End If
									End If
									
								Wait 5
								ReportStatus "Pass","Order List Page","Order is displayed in the Orderlist Page"
								bIsFound = True
								Exit For		
					 Else
					 	ReportStatus "Fail","Order List Page","Order is NOT displayed in the Orderlist Page"
						'AOE_CloseBrowsers()
						ExitTest
					End If	
				Next	
					''----------------------------------------------------------


'						If (instr(oObjCol(0).GetCellData(i,6),"Open") > 0 and instr(oObjCol(0).GetCellData(i+1,6),"Open") > 0) or (obj4OrdTicketPage.cCmplxOrdTyp ="OneTriggersAnother" and instr(oObjCol(0).GetCellData(i,6),"Filled") >0 or instr(oObjCol(0).GetCellData(i+1,6),"Filled") > 0 or instr(oObjCol(0).GetCellData(i,6),"Partially Filled") >0 or instr(oObjCol(0).GetCellData(i+1,6),"Partially Filled") > 0 ) Then
''							If oObjCol(0).ChildItem(i,1,"Image",1).Exist Then
''								oObjCol(0).ChildItem(i,1,"Image",1).Click
''							Else
''								ReportStatus "Fail","Cancel Button Not Available","Cancel Button Not Available in the Order List Page"	
''								ExitTest							
''							End If
'							
'							Environment.Value("Order1_status") = oObjCol(0).GetCellData(i,6)
'							Environment.Value("Order2_status") = oObjCol(0).GetCellData(i+1,6)
'							If UCase(obj4OrdTicketPage.m_Functionality)="CHANGE" Then
'								If oObjCol(0).ChildItem(i,1,"WebElement",4).Exist(0) Then
'									oObjCol(0).ChildItem(i,1,"WebElement",4).Click
'								Else
'									ReportStatus "Fail","Click Change Button","Change Button Not Available in the Order List Page.Exiting Test"	
'									ExitTest
'								End If
'							Else
'								If oObjCol(0).ChildItem(i,1,"WebElement",6).Exist Then
'									oObjCol(0).ChildItem(i,1,"WebElement",6).Click
'								Else
'									ReportStatus "Fail","Cancel Button Not Available","Cancel Button Not Available in the Order List Page"	
'									ExitTest							
'								End If
'							End If
'							
'						Else	
'							ReportStatus "Fail","Order Status is Not Open","Order Status is Not Open to Change/Cancel"& vbcrlf & "Order 1 Status : "&	oObjCol(0).GetCellData(i,6) & vbcrlf &	"Order 2 Status : "&	oObjCol(0).GetCellData(i+1,6) 				
'							ExitTest
'						End If
'						
'						Wait 5
'						ReportStatus "Pass","Order List Page","Order is displayed in the Orderlist Page"
'						bIsFound = True
'						Exit For		
'					 Else
'					 	ReportStatus "Fail","Order Status is Not Open","Order Status is Not Open to Change/Cancel"& vbcrlf & "Order 1 Status : "&	oObjCol(0).GetCellData(i,6) & vbcrlf &	"Order 2 Status : "&	oObjCol(0).GetCellData(i+1,6) 				
'					 	ExitTest
'					End If
'				Next
'				
'				If bIsFound <> True Then
'					ReportStatus "Fail","Order List Page","Order is NOT displayed in the Orderlist Page"
'					AOE_CloseBrowsers()
'					ExitTest
'				End If

					''-------------------------------------------------------
		End If		
		
	End Sub	
	
	Public Sub ValidateDisablefields(ByVal ordernum)
		Set oCancelOrderScreen = new ValidatePage
		'If obj4OrdTicketPage.m_Cancel_ValidateFields <> "Yes" or obj4OrdTicketPage.m_Cancel_ValidateFields = "" Then
		If obj4OrdTicketPage.m_Cancel_ValidateFields <> "Yes" And obj4OrdTicketPage.m_Change_ValidateFields <> "Yes" Then  '//Modified- June 17, 2016
			Exit Sub
		End If
		Print "Validating Disable Fields"
		If ordernum = 1 Then			
			obj4CancelOrdTckPage.clickWebElement "we_OCO_Open2ndOrder"
		End If
		With obj4CancelOrdTckPage
			.initPage "AOE","AOE"
			.clickWebElement "we_ExpandAddionaltInfo"&"_"&Ordernum			
		End With
		If UCase(obj4OrdTicketPage.m_Functionality)="CANCEL" Then  '//For cancel order
			With oCancelOrderScreen
				.initValidatePage "AOE","AOE","Cancel - OrderEntryPage"			
				.addField4Validation "we_OrdTck_CancelOrder_Hdr","Element","innertext","Cancel Order","Cancel Header Text"
				.addField4Validation "wl_SelectAccount","List","disabled",1,"Field Enable or Disable" 								'Account List
				.addField4Validation "wl_SecurityType"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable" 					'Security Type
				'.addField4Validation "wl_SecurityType"&"_"&ordernum,"List", "value",obj4OrdTicketPage.SecurityType(ordernum),"Value Display in the Field"
				
				.addField4Validation "wl_OrdTkt_Action"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable" 					'Action
				.addField4Validation "wl_OrdTkt_Action"&"_"&ordernum,"List","selection",obj4OrdTicketPage.cAction(ordernum),"Value Display in the Field"
				
				.addField4Validation "weNum_OrdTkt_Quant"&"_"&ordernum, "Number", "disabled",1,"Field Enable or Disable"			'Quantity
				.addField4Validation "weNum_OrdTkt_Quant"&"_"&ordernum, "Number","value",obj4OrdTicketPage.cQuantity(ordernum),"Value Display in the Field"	
				
				.addField4Validation "e_OrdTkt_Symbol"&"_"&ordernum, "Edit","disabled",1,"Field Enable or Disable" 					'Symbol
				.addField4Validation "weNum_OrdTkt_Quant"&"_"&ordernum, "Number","value",obj4OrdTicketPage.cQuantity(ordernum),"Value Display in the Field"
				
				.addField4Validation "wl_OrdTkt_OrdType"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable" 				'OrderType
				.addField4Validation "wl_OrdTkt_OrdType"&"_"&ordernum,"List","value",obj4OrdTicketPage.cOrderType(ordernum),"Value Display in the Field"
				
				.addField4Validation "wl_OrdTkt_Gdtill"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable"					'Good Till
				.addField4Validation "wl_OrdTkt_Gdtill"&"_"&ordernum,"List","value",obj4OrdTicketPage.cGoodTill(ordernum),"Value Display in the Field"			
				
				.addField4Validation "weNum_Ord_FXRate"&"_"&ordernum,"Number","disabled",1,"Field Enable or Disable"				'FX Rate
				.addField4Validation "wl_Commissiontype"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable"					'Commission Type
				.addField4Validation "e_Ord_ContrExclud"&"_"&ordernum,"Edit","disabled",1,"Field Enable or Disable"					'Contract Excluded
				.addField4Validation "e_Ord_TradInstr"&"_"&ordernum, "Edit","disabled",0,"Field Enable or Disable"					'Trader Instruction
				.addField4Validation "wl_OrdShareHolder"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable"					'ShareHolder Status
				.addField4Validation "AddInfoContrInclude1"&"_"&ordernum,"Edit","disabled",1,"Field Enable or Disable"				'Additional Info 1
				.addField4Validation "AddInfoContrInclude2"&"_"&ordernum, "Edit","disabled",1,"Field Enable or Disable"				'Additional Info 2
				Select Case obj4OrdTicketPage.cOrderType(ordernum)			
						Case "Limit"						
							.addField4Validation "weNum_Ordtkt_Price"&"_"&ordernum,"Number","disabled",1,"Field Enable or Disable"					
						Case "Stop Market"
							.addField4Validation "weNum_Ordtkt_Price"&"_"&ordernum,"Number","disabled",1,"Field Enable or Disable"						
						Case "Stop Limit"
						    .addField4Validation "weNum_Ordtkt_Price"&"_"&ordernum,"Number","disabled",1,"Field Enable or Disable"						
						    .addField4Validation "weNumOrdTkt_stpLmtPrice"&"_"&ordernum,"Number","disabled",1,"Field Enable or Disable"					    
						 Case "Trailing Stop"
							 .addField4Validation "weNum_OrdTkt_TrigDelta"&"_"&ordernum, "Number","disabled",1,"Field Enable or Disable"						 
						 Case "Trailing Stop Limit"
							 .addField4Validation "weNum_OrdTkt_TrigDelta"&"_"&ordernum, "Number","disabled",1,"Field Enable or Disable"						 
							 .addField4Validation "weNum_OrdTkt_LmtDelta"&"_"&ordernum, "Number","disabled",1,"Field Enable or Disable"			
				End Select
				If obj4OrdTicketPage.SecurityType(ordernum) = "Option" Then						
				   .addField4Validation "wl_Opt_ExpDate"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable"
				   .addField4Validation "wl_Opt_StrkPrice"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable"						
				   .addField4Validation "wl_Opt_CallPut"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable"											
				End If
				.ValidatePageFields
			End With
			Print "Validating Disable Fields Completed"
			'getValues4Validation()
			If ordernum = 1 Then
				clickPreviewOrder
			End If
		ElseIf UCase(obj4OrdTicketPage.m_Functionality)="CHANGE" Then '//For change order
			With oCancelOrderScreen 				
			'Verify below fields on change order page load
				.initValidatePage "AOE","AOE","Change - OrderEntryPage"	
				
				If ordernum = 0 Then '// Validate these header details only for the first order					
					
					.addField4Validation "we_ChangeOrder_Header","Element","outertext","Change Order","Change Header Text"
					'OSS ID
					If Ucase(obj4OrdTicketPage.cMultipleOSSID)="YES" Then
						.addField4Validation "we_Ordtkt_OSS_ID","List","disabled",0,"Field Enable or Disable"			
						sText=obj4CancelOrdTckPage.getEProperty("List","we_Ordtkt_OSS_ID","all items")					
						If InStr(1,Ucase(sText),Ucase(obj4OrdTicketPage.cUserID),1)>0 Then
							ReportStatus "Pass", "ValidateOSSID" , "OSS ID is displayed in the list: "&Ucase(sText)
						Else
							ReportStatus "Fail", "ValidateOSSID" , "Actual OSS ID: "&Ucase(sText)& " is NOT matching the expected: "&Ucase(obj4OrdTicketPage.cUserID)
						End If
					Else
						.addField4Validation "we_OrdTktOSSId","Element","innertext",Ucase(obj4OrdTicketPage.cUserID),"OSSID"				
					End If
					'RR Code
					If obj4OrdTicketPage.Agent="DI" Then
						.addField4Validation "e_OrdTkt_RRCode","Edit","innertext",obj4OrdTicketPage.RRCode,"RR Code innertext"
					ElseIf obj4OrdTicketPage.Agent="PIA" Then
						.addField4Validation "e_OrdTkt_RRCode","Edit","disabled",0,"Enable or Disable"
						.addField4Validation "e_OrdTkt_RRCode","Edit","value",obj4OrdTicketPage.RRCode,"RRCode EditText"					
					End If
					'Behalf Code
					
					If obj4CancelOrdTckPage.valEleExist_NoReport("Element","we_OrdTktBehalfCode") Then
						ReportStatus "Pass", "ValidateChangeOrderTicket" , "Behalf Code is displayed"
					Else
						ReportStatus "Fail", "ValidateChangeOrderTicket" , "Behalf Code is NOT Found"
					End If					
					.addField4Validation "we_OrdTktBehalfCode","Element","disabled",1,"Enable or Disable"
					'Mandatory & other fields
					.addField4Validation "wl_SelectAccount","List","disabled",0,"Field Enable or Disable" 								'Account List
				End If
				
				.addField4Validation "wl_SecurityType"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable" 					'Security Type	
				'.addField4Validation "wl_SecurityType"&"_"&ordernum,"List", "value",obj4OrdTicketPage.SecurityType(ordernum),"Value Displayed in the Field"	
				
				.addField4Validation "wl_OrdTkt_Action"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable" 					'Action
				.addField4Validation "wl_OrdTkt_Action"&"_"&ordernum,"List","value",obj4OrdTicketPage.cAction(ordernum),"Value Displayed in the Field"
				
				.addField4Validation "weNum_OrdTkt_Quant"&"_"&ordernum, "Number", "disabled",0,"Field Enable or Disable"			'Quantity
				.addField4Validation "weNum_OrdTkt_Quant"&"_"&ordernum, "Number","value",obj4OrdTicketPage.cQuantity(ordernum),"Value Displayed in the Field"	
				
				.addField4Validation "e_OrdTkt_Symbol"&"_"&ordernum, "Edit","disabled",1,"Field Enable or Disable" 					'Symbol
				.addField4Validation "e_OrdTkt_Symbol"&"_"&ordernum, "Edit","value",obj4OrdTicketPage.cSymbol(ordernum),"Value Displayed in the Field"
				
				.addField4Validation "wl_OrdTkt_OrdType"&"_"&ordernum, "List","disabled",0,"Field Enable or Disable" 				'Order Type
				.addField4Validation "wl_OrdTkt_OrdType"&"_"&ordernum,"List","value",obj4OrdTicketPage.cOrderType(ordernum),"Value Displayed in the Field"
				
				.addField4Validation "wl_OrdTkt_Gdtill"&"_"&ordernum, "List","disabled",0,"Field Enable or Disable" 				'Good till
				.addField4Validation "wl_OrdTkt_Gdtill"&"_"&ordernum,"List","value",obj4OrdTicketPage.cGoodTill(ordernum),"Value Displayed in the Field"	
				
				.addField4Validation "wl_Commissiontype"&"_"&ordernum, "List","disabled",0,"Field Enable or Disable" 				'Commission type
				.addField4Validation "wl_Commissiontype"&"_"&ordernum,"List","value",obj4OrdTicketPage.cCommType(ordernum),"Value Displayed in the Field"	
				
				.addField4Validation "weNum_Ord_FXRate"&"_"&ordernum, "Number", "disabled",0,"Field Enable or Disable"				'FX Rate
				.addField4Validation "weNum_Ord_FXRate"&"_"&ordernum,"Number","value",obj4OrdTicketPage.cFXRate(ordernum),"Value Displayed in the Field"	
				'Commission Value				
					Select Case obj4OrdTicketPage.cCommType(fordernum)
							Case "Cents/Share"
								.addField4Validation "weNum_CentShare"&"_"&ordernum, "Number", "disabled",0,"Field Enable or Disable"
								.addField4Validation "weNum_CentShare"&"_"&ordernum, "Number", "value",obj4OrdTicketPage.CommValue,"Value Displayed in the Field"														
							Case "% Of Schedule"
								.addField4Validation "weNum_%Schedule"&"_"&ordernum, "Number", "disabled",0,"Field Enable or Disable"
								.addField4Validation "weNum_%Schedule"&"_"&ordernum, "Number", "value",obj4OrdTicketPage.CommValue,"Value Displayed in the Field"															
							Case "Prefigured"
								.addField4Validation "weNum_Prefigured"&"_"&ordernum, "Number", "disabled",0,"Field Enable or Disable"
								.addField4Validation "weNum_Prefigured"&"_"&ordernum, "Number", "value",obj4OrdTicketPage.CommValue,"Value Displayed in the Field"					 						
					End Select				
				'//Order type
				Select Case obj4OrdTicketPage.cOrderType(ordernum)			
						Case "Limit"						
							.addField4Validation "weNum_Ordtkt_Price"&"_"&ordernum,"Number","disabled",0,"Field Enable or Disable"
							.addField4Validation "weNum_Ordtkt_Price"&"_"&ordernum, "Number","value",obj4OrdTicketPage.Limit_Price(ordernum),"Value Displayed in the Field"							
						Case "Stop Market"
							.addField4Validation "weNum_Ordtkt_Price"&"_"&ordernum,"Number","disabled",0,"Field Enable or Disable"	
							.addField4Validation "weNum_Ordtkt_Price"&"_"&ordernum, "Number","value",obj4OrdTicketPage.Limit_Price(ordernum),"Value Displayed in the Field"	
						Case "Stop Limit"
							If Right(obj4OrdTicketPage.cSymbol(ordernum),2)="CA" And obj4OrdTicketPage.SecurityType(ordernum) = "Option" Then
								.addField4Validation "weNum_Ordtkt_Price"&"_"&ordernum,"Number","disabled",1,"Field Enable or Disable"								
						    	.addField4Validation "weNumOrdTkt_stpLmtPrice"&"_"&ordernum,"Number","disabled",1,"Field Enable or Disable"						    	
						    Else
						    	.addField4Validation "weNum_Ordtkt_Price"&"_"&ordernum,"Number","disabled",0,"Field Enable or Disable"						
						   		.addField4Validation "weNumOrdTkt_stpLmtPrice"&"_"&ordernum,"Number","disabled",0,"Field Enable or Disable"						    	
							End If	
							.addField4Validation "weNum_Ordtkt_Price"&"_"&ordernum, "Number","value",obj4OrdTicketPage.Trigger_Price(ordernum),"Value Displayed in the Field"	
							.addField4Validation "weNumOrdTkt_stpLmtPrice"&"_"&ordernum, "Number","value",obj4OrdTicketPage.Limit_Price(ordernum),"Value Displayed in the Field"								
						 Case "Trailing Stop"
							 .addField4Validation "weNum_OrdTkt_TrigDelta"&"_"&ordernum, "Number","disabled",0,"Field Enable or Disable"
							.addField4Validation "weNum_OrdTkt_TrigDelta"&"_"&ordernum, "Number","value",obj4OrdTicketPage.Trigger_Delta(ordernum),"Value Displayed in the Field"											 
						 Case "Trailing Stop Limit"
							 .addField4Validation "weNum_OrdTkt_TrigDelta"&"_"&ordernum, "Number","disabled",0,"Field Enable or Disable"
							 .addField4Validation "weNum_OrdTkt_TrigDelta"&"_"&ordernum, "Number","value",obj4OrdTicketPage.Trigger_Delta(ordernum),"Value Displayed in the Field"	
							 
							 .addField4Validation "weNum_OrdTkt_LmtDelta"&"_"&ordernum, "Number","disabled",0,"Field Enable or Disable"	
							 .addField4Validation "weNum_OrdTkt_LmtDelta"&"_"&ordernum, "Number","value",obj4OrdTicketPage.Limit_Delta(ordernum),"Value Displayed in the Field"											 							 
				End Select				
				
				'//For options   
				If obj4OrdTicketPage.SecurityType(ordernum) = "Option" Then				
					.addField4Validation "wl_Opt_ExpDate"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable" 
					.addField4Validation "wl_Opt_ExpDate"&"_"&ordernum, "List","value",obj4OrdTicketPage.m_ExpDate(ordernum),"Value Displayed in the Field"
					
					.addField4Validation "wl_Opt_StrkPrice"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable" 
					.addField4Validation "wl_Opt_StrkPrice"&"_"&ordernum, "List","value",obj4OrdTicketPage.m_StrikePrice(ordernum),"Value Displayed in the Field"
					
					.addField4Validation "wl_Opt_CallPut"&"_"&ordernum,"List","disabled",1,"Field Enable or Disable" 
					.addField4Validation "wl_Opt_CallPut"&"_"&ordernum, "List","value",obj4OrdTicketPage.CallPutValue(ordernum),"Value Displayed in the Field"
				End If
				
				'//Additional fields
				'obj4CancelOrdTckPage.clickWebElement "we_ExpandAddionaltInfo_"&ordernum
				
				.addField4Validation "wl_OrdShareHolder"&"_"&ordernum, "List","disabled",1,"Field Enable or Disable" 
				.addField4Validation "wl_OrdShareHolder"&"_"&ordernum, "List","value",obj4OrdTicketPage.ShareHolderStatus(ordernum),"Value Displayed in the Field"
				
				.addField4Validation "e_Ord_ContrExclud"&"_"&ordernum, "Edit","disabled",0,"Field Enable or Disable" 
				.addField4Validation "AddInfoContrInclude1"&"_"&ordernum, "Edit","disabled",0,"Field Enable or Disable" 
				.addField4Validation "AddInfoContrInclude2"&"_"&ordernum, "Edit","disabled",0,"Field Enable or Disable" 
				.addField4Validation "e_Ord_TradInstr"&"_"&ordernum, "Edit","disabled",0,"Field Enable or Disable" 				
				
				'//Footer fields
'				If Ucase(Right(obj4OrdTicketPage.cSymbol(ordernum),2))="US" And (Ucase(obj4OrdTicketPage.cOrderType(ordernum))="LIMIT" OR Ucase(obj4OrdTicketPage.cOrderType(ordernum))="STOP LIMIT" OR Ucase(obj4OrdTicketPage.cOrderType(ordernum))="STOP MARKET") Then
'					.addField4Validation "we_OrderTktAON"&"_"&ordernum, "Element","disabled",0,"Field Enable or Disable" 	
'				End If
				.addField4Validation "we_OrdTkt_AM", "Element","disabled",0,"Field Enable or Disable"
				If Ucase(obj4OrdTicketPage.Agent) = "PIA" Then					
					.addField4Validation "we_OrdTkt_Solicited", "Element","disabled",0,"Field Enable or Disable" 	
					.addField4Validation "we_OrdTkt_UnSolicited", "Element","disabled",0,"Field Enable or Disable" 					
				End If				
				
				.ValidatePageFields
			End With
		End If	
		Set oCancelOrderScreen = Nothing	
		
	End Sub	
	
	Public Sub clickPreviewOrder
		obj4CancelOrdTckPage.clickWebButton "wb_OrdTkt_Preview"
		obj4CancelOrdTckPage.wait4Element "Element","we_OrdPriviewScreen",500000
	End Sub
	
End Class			



	
Function ComplexOrder_Place_E2E(ByRef DICT_TestCase)
        
    Set pPage = new preparePage    
    Set vPage = new ValidatePage
    Set dBoardPage = new DashBoardPage    
    Set ordTckPage = new ComplexOrder_OrderTckPage 'Object to fill the first Order    
    Set oPreviewPage = new ComplexOrder_PreviewPage
    Set OrdConfirmPage = new ComplexOrderConfirmationPage
    Set oOrdDetailPage = new ComplexOrder_OrderDetail
    
    dBoardPage.initDashBoardPage
    dBoardPage.SearchAccountNumber DICT_TestCase
    dBoardPage.ClickOrderTicket    
    ordTckPage.init_ordTckPage DICT_TestCase, 0
    ordTckPage.fillOrder 0,"Place"
    ordTckPage.ExpandOrder(0)
    ordTckPage.fillOrder 1,"Place"
   	ordTckPage.getValues4Validation 0
    ordTckPage.getValues4Validation 1
    ordTckPage.clickPreviewOrder
    
    oPreviewPage.init_PreviewPage ordTckPage,"AOE","AOE"
    oPreviewPage.CheckErrorMsgsOnPreviewPage ordTckPage.cNumOfOrders
    oPreviewPage.ValidatePreviewScreen    
    oPreviewPage.ClickAgreeButton
    
    OrdConfirmPage.init_confPage ordTckPage,"AOE","AOE"
    OrdConfirmPage.ValidateConfirmationTable
    OrdConfirmPage.ConfirmationScriptValidation 
    
    oOrdDetailPage.init_OrderDetailPage ordTckPage,OrdConfirmPage,oPreviewPage,"AOE","AOE"
    oOrdDetailPage.ValidateOrderDetails
    ComplexOrder_Place_E2E = True
    
End Function 



Function ComplexOrderPageLevelValidation(ByRef DICT_TestCase)
	Set dBoardPage = new DashBoardPage
	Set ordTckPage = new ComplexOrder_OrderTckPage
	
	dBoardPage.initDashBoardPage
	dBoardPage.SearchAccountNumber DICT_TestCase
	dBoardPage.ClickOrderTicket	
	ordTckPage.init_ordTckPage DICT_TestCase, 0
	ordTckPage.ValOrderTcktPageFields(0)
	ordTckPage.ValOrderTcktPageFields(1)
End Function


Function ComplexOrderErrorScenarios(ByRef DICT_TestCase)
	Set dBoardPage = new DashBoardPage
	Set ordTckPage = new ComplexOrder_OrderTckPage
	
	dBoardPage.initDashBoardPage
	dBoardPage.SearchAccountNumber DICT_TestCase
	dBoardPage.ClickOrderTicket	
	
	ordTckPage.init_ordTckPage DICT_TestCase, 0
	ordTckPage.fillOrder 0,"Place"
	ordTckPage.ExpandOrder(0)
	ordTckPage.fillOrder 1,"Place"
	ordTckPage.ErrormessageValidation
	
End Function


Function ComplexOrder_MLO_Place_E2E(ByRef DICT_TestCase)
        
    Set pPage = new preparePage    
    Set vPage = new ValidatePage
    Set dBoardPage = new DashBoardPage    
    Set ordTckPage = new ComplexOrder_OrderTckPage 'Object to fill the first Order    
    Set oPreviewPage = new ComplexOrder_PreviewPage
    Set OrdConfirmPage = new ComplexOrderConfirmationPage
    Set oOrdDetailPage = new ComplexOrder_OrderDetail
    
    dBoardPage.initDashBoardPage
    dBoardPage.SearchAccountNumber DICT_TestCase
    dBoardPage.ClickOrderTicket    
    ordTckPage.init_ordTckPage DICT_TestCase, 0
    ordTckPage.fillOrder 0,"Place"   
   	ordTckPage.getValues4Validation 0
    ordTckPage.clickPreviewOrder   
End Function 


Function ComplexOrder_Cancel_E2E(ByRef DICT_TestCase)
		
	Set pPage = new preparePage	
	Set vPage = new ValidatePage
	Set dBoardPage = new DashBoardPage
	Set ordTckPage = new ComplexOrder_OrderTckPage 
	Set previewPage = new ComplexOrder_PreviewPage
	Set confirmPage = new ComplexOrderConfirmationPage
	Set ordDetail = new ComplexOrder_OrderDetail 
	Set CancelPage = new ComplexOrder_ChangeCancelOrderTckPage 
	
	dBoardPage.initDashBoardPage
	dBoardPage.SearchAccountNumber DICT_TestCase	
	dBoardPage.ClickOrderTicket
	
	ordTckPage.init_ordTckPage DICT_TestCase, 0
	ordTckPage.fillOrder 0,"Place"
	ordTckPage.ExpandOrder(0)
	ordTckPage.fillOrder 1,"Place"
	ordTckPage.getValues4Validation(0)
	ordTckPage.getValues4Validation(1)
	ordTckPage.clickPreviewOrder
	
	previewPage.init_PreviewPage ordTckPage,"AOE","AOE"
	previewPage.CheckErrorMsgsOnPreviewPage ordTckPage.cNumOfOrders
	previewPage.ClickAgreeButton	
	
	confirmPage.init_confPage ordTckPage,"AOE","AOE"
	confirmPage.DBcall

	CancelPage.init_ChangeCancelOrdPage ordTckPage,confirmPage,previewPage,"AOE","AOE"
	CancelPage.ValidateDisablefields 0
	CancelPage.ValidateDisablefields 1
		'Added June 8
		If DICT_TestCase.Item("Cancel_ValidateFields") <> "Yes" Then
			CancelPage.clickPreviewOrder
		End If	
	previewPage.init_PreviewPage ordTckPage,"AOE","AOE"
	previewPage.CheckErrorMsgsOnPreviewPage ordTckPage.cNumOfOrders	
	previewPage.ValidatePreviewScreen 
	previewPage.ClickAgreeButton	
	confirmPage.init_confPage ordTckPage,"AOE","AOE"
	confirmPage.ValidateConfirmationTable
	confirmPage.ConfirmationScriptValidation
	ordDetail.init_OrderDetailPage ordTckPage,confirmPage,previewPage,"AOE","AOE"
	ordDetail.ValidateOrderDetails	
	ComplexOrder_Cancel_E2E = True
	
End Function

Function ComplexOrder_Change_E2E(ByRef DICT_TestCase)
		
	Set pPage = new preparePage	
	Set vPage = new ValidatePage
	Set dBoardPage = new DashBoardPage
	Set ordTckPage = new ComplexOrder_OrderTckPage 
	Set previewPage = new ComplexOrder_PreviewPage
	Set confirmPage = new ComplexOrderConfirmationPage
	Set ordDetail = new ComplexOrder_OrderDetail 
	Set CancelPage = new ComplexOrder_ChangeCancelOrderTckPage 
	
	dBoardPage.initDashBoardPage
	dBoardPage.SearchAccountNumber DICT_TestCase	
	dBoardPage.ClickOrderTicket
	
	ordTckPage.init_ordTckPage DICT_TestCase, 0
	ordTckPage.fillOrder 0,"Place"
	ordTckPage.ExpandOrder(0)
	ordTckPage.fillOrder 1,"Place"
	ordTckPage.getValues4Validation(0)
	ordTckPage.getValues4Validation(1)
	ordTckPage.clickPreviewOrder
	
	previewPage.init_PreviewPage ordTckPage,"AOE","AOE"
	previewPage.CheckErrorMsgsOnPreviewPage ordTckPage.cNumOfOrders
	previewPage.ClickAgreeButton	
	
	confirmPage.init_confPage ordTckPage,"AOE","AOE"
	confirmPage.DBcall

	CancelPage.init_ChangeCancelOrdPage ordTckPage,confirmPage,previewPage,"AOE","AOE"
	If Ucase(ordTckPage.m_Change_ValidateFields) = "YES" Then
		CancelPage.ValidateDisablefields 0
		CancelPage.ValidateDisablefields 1
	End If
	
	ordTckPage.init_ordTckPage DICT_TestCase, 1
	''ordTckPage.ExpandOrder(0)
	ordTckPage.fillOrder 0,"Change"
	ordTckPage.ExpandOrder(0)
	ordTckPage.fillOrder 1,"Change"
	ordTckPage.getValues4Validation(0)
	ordTckPage.getValues4Validation(1)
	ordTckPage.clickPreviewOrder
	
	previewPage.init_PreviewPage ordTckPage,"AOE","AOE"
	previewPage.CheckErrorMsgsOnPreviewPage ordTckPage.cNumOfOrders
	If Ucase(ordTckPage.m_Change_ValidatePreviewScreen) = "YES" Then
		previewPage.ValidatePreviewScreen 
	End If
	previewPage.ClickAgreeButton
	
	confirmPage.init_confPage ordTckPage,"AOE","AOE"
	
	confirmPage.ValidateConfirmationTable
	If Ucase(ordTckPage.m_Change_ValidateConfrmPage) = "YES" Then
		confirmPage.ConfirmationScriptValidation
	End If
	
	ordDetail.init_OrderDetailPage ordTckPage,confirmPage,previewPage,"AOE","AOE"
	If Ucase(ordTckPage.m_Change_ValidateOrderDetails) = "YES" Then
		ordDetail.ValidateOrderDetails	
	End If
	
End Function



